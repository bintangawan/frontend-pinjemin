/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 4:
/***/ (() => {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var LandingPage = /*#__PURE__*/function (_HTMLElement) {
  function LandingPage() {
    var _this;
    _classCallCheck(this, LandingPage);
    _this = _callSuper(this, LandingPage);
    _defineProperty(_this, "openDrawer", function () {
      var mobileDrawer = _this.querySelector("#mobile-drawer");
      var drawerOverlay = _this.querySelector("#drawer-overlay");
      if (mobileDrawer && drawerOverlay) {
        // Show overlay
        drawerOverlay.classList.remove("hidden");
        // Force reflow before adding transform classes for smooth animation
        drawerOverlay.offsetHeight;

        // Slide in drawer
        mobileDrawer.classList.remove("-translate-x-full");

        // Prevent body scroll when drawer is open
        document.body.style.overflow = "hidden";
        console.log("Drawer opened");
      }
    });
    _defineProperty(_this, "closeDrawer", function () {
      var mobileDrawer = _this.querySelector("#mobile-drawer");
      var drawerOverlay = _this.querySelector("#drawer-overlay");
      if (mobileDrawer && drawerOverlay) {
        // Slide out drawer
        mobileDrawer.classList.add("-translate-x-full");

        // Hide overlay after animation completes
        setTimeout(function () {
          drawerOverlay.classList.add("hidden");
        }, 300); // Match transition duration

        // Restore body scroll
        document.body.style.overflow = "";
        console.log("Drawer closed");
      }
    });
    return _this;
  }
  _inherits(LandingPage, _HTMLElement);
  return _createClass(LandingPage, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      console.log("Pinjemin Page Component Connected");
      this.render();
      this.setupMobileMenuToggle();
      this.setupScrollAnimations();
      this.setupFAQAccordion();

      // Add body padding to compensate for fixed header
      this.addBodyPadding();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      console.log("Pinjemin Page Component Disconnected");

      // Remove mobile menu listeners
      var mobileMenuButton = this.querySelector("#mobile-menu-button");
      if (mobileMenuButton && this._mobileMenuButtonHandler) {
        mobileMenuButton.removeEventListener("click", this._mobileMenuButtonHandler);
        this._mobileMenuButtonHandler = null;
      }

      // Remove drawer overlay listener
      if (this._drawerOverlayHandler) {
        document.removeEventListener("click", this._drawerOverlayHandler);
        this._drawerOverlayHandler = null;
      }

      // Remove body padding
      this.removeBodyPadding();
    }
  }, {
    key: "_emptyContent",
    value: function _emptyContent() {
      this.innerHTML = "";
    }
  }, {
    key: "addBodyPadding",
    value: function addBodyPadding() {
      // Add padding-top to body to compensate for fixed header
      document.body.style.paddingTop = "80px"; // Adjust based on header height
    }
  }, {
    key: "removeBodyPadding",
    value: function removeBodyPadding() {
      // Remove padding when component is disconnected
      document.body.style.paddingTop = "";
    }
  }, {
    key: "setupScrollAnimations",
    value: function setupScrollAnimations() {
      var observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px"
      };
      var observer = new IntersectionObserver(function (entries) {
        entries.forEach(function (entry) {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-fade-in-up");
          }
        });
      }, observerOptions);

      // Observe all sections
      this.querySelectorAll(".animate-on-scroll").forEach(function (el) {
        observer.observe(el);
      });
    }
  }, {
    key: "setupFAQAccordion",
    value: function setupFAQAccordion() {
      var faqItems = this.querySelectorAll(".faq-item");
      faqItems.forEach(function (item) {
        var button = item.querySelector(".faq-button");
        var content = item.querySelector(".faq-content");
        var icon = item.querySelector(".faq-icon");
        button.addEventListener("click", function () {
          var isOpen = !content.classList.contains("hidden");

          // Close all other FAQ items
          faqItems.forEach(function (otherItem) {
            if (otherItem !== item) {
              otherItem.querySelector(".faq-content").classList.add("hidden");
              otherItem.querySelector(".faq-icon").style.transform = "rotate(0deg)";
            }
          });

          // Toggle current item
          if (isOpen) {
            content.classList.add("hidden");
            icon.style.transform = "rotate(0deg)";
          } else {
            content.classList.remove("hidden");
            icon.style.transform = "rotate(180deg)";
          }
        });
      });
    }

    // Mobile Menu Drawer Toggle
  }, {
    key: "setupMobileMenuToggle",
    value: function setupMobileMenuToggle() {
      var _this2 = this;
      console.log("Setting up mobile drawer toggle...");
      var mobileMenuButton = this.querySelector("#mobile-menu-button");
      var mobileDrawer = this.querySelector("#mobile-drawer");
      var drawerOverlay = this.querySelector("#drawer-overlay");
      var closeDrawerButton = this.querySelector("#close-drawer-button");
      if (mobileMenuButton && mobileDrawer && drawerOverlay) {
        console.log("Mobile drawer elements found. Setting up listeners.");

        // Open drawer
        this._mobileMenuButtonHandler = function (event) {
          console.log("Mobile menu button clicked.");
          _this2.openDrawer();
        };
        mobileMenuButton.addEventListener("click", this._mobileMenuButtonHandler);

        // Close drawer via close button
        if (closeDrawerButton) {
          closeDrawerButton.addEventListener("click", function () {
            _this2.closeDrawer();
          });
        }

        // Close drawer via overlay click
        this._drawerOverlayHandler = function (event) {
          if (event.target === drawerOverlay) {
            _this2.closeDrawer();
          }
        };
        drawerOverlay.addEventListener("click", this._drawerOverlayHandler);

        // Close drawer when clicking navigation links
        var drawerLinks = mobileDrawer.querySelectorAll("a");
        drawerLinks.forEach(function (link) {
          link.addEventListener("click", function () {
            console.log("Drawer link clicked, closing drawer.");
            _this2.closeDrawer();
          });
        });

        // Close drawer on escape key
        document.addEventListener("keydown", function (event) {
          if (event.key === "Escape" && !mobileDrawer.classList.contains("-translate-x-full")) {
            _this2.closeDrawer();
          }
        });
      } else {
        console.error("Mobile drawer elements not found:", {
          mobileMenuButton: mobileMenuButton,
          mobileDrawer: mobileDrawer,
          drawerOverlay: drawerOverlay
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      this._emptyContent();
      this.innerHTML = "\n        <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n\n            .animate-fade-in-up {\n                animation: fadeInUp 0.8s ease-out forwards;\n            }\n                #how-it-works {\n                    scroll-margin-top: 100px;\n                }\n\n            @keyframes fadeInUp {\n                from {\n                    opacity: 0;\n                    transform: translateY(30px);\n                }\n                to {\n                    opacity: 1;\n                    transform: translateY(0);\n                }\n            }\n\n            .gradient-bg {\n                background: linear-gradient(135deg, #6C63FF 0%, #4F46E5 100%);\n            }\n\n            .feature-card:hover {\n                transform: translateY(-5px);\n                transition: all 0.3s ease;\n            }\n\n            .hero-pattern {\n                background-image: radial-gradient(circle at 25px 25px, rgba(255,255,255,0.1) 2px, transparent 0);\n                background-size: 50px 50px;\n            }\n        </style>\n\n        <!-- Fixed Header -->\n        <div class=\"fixed top-0 left-0 right-0 bg-white shadow-sm z-50\">\n            <div class=\"container mx-auto px-4 py-4 flex items-center justify-between\">\n                \n                <!-- Mobile Menu Button (Left) -->\n                <div class=\"flex items-center md:hidden\">\n                    <button id=\"mobile-menu-button\" type=\"button\" class=\"text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-200 p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                        <span class=\"sr-only\">Open main menu</span>\n                        <!-- Hamburger icon -->\n                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                        </svg>\n                    </button>\n                </div>\n\n                <!-- Logo (Center on mobile, Left on desktop) -->\n                <div class=\"flex items-center justify-center md:justify-start flex-1 md:flex-none\">\n                    <div class=\"text-xl font-bold text-gray-800 flex items-center\">\n                        <img src=\"./pinjemin.png\" class=\"mr-2 h-16 inline-block\" alt=\"Pinjemin Logo\">\n                    </div>\n                </div>\n\n                <!-- Desktop Navigation (Hidden on mobile) -->\n                <nav class=\"hidden md:flex items-center space-x-8 flex-1 justify-center\">\n                    <a href=\"/#/\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\">\n                        Beranda\n                    </a>\n                    <a href=\"/#/community\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\">\n                        Komunitas\n                    </a>\n                    <a href=\"#how-it-works\" onclick=\"document.getElementById('how-it-works').scrollIntoView({behavior: 'smooth'})\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 cursor-pointer\">\n                        Cara Kerja\n                    </a>\n                </nav>\n\n                <!-- Right Section: Auth Links -->\n                <div class=\"flex items-center space-x-3\">\n                    <!-- Authentication Links -->\n                    <div class=\"auth-links flex items-center space-x-2\">\n                        <a href=\"/#/login\" class=\"text-sm font-medium text-gray-700 hover:text-blue-600 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all duration-200\">\n                            Sign In\n                        </a>\n                        <a href=\"/#/register\" class=\"text-sm font-medium bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-all duration-200\">\n                            Register\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Mobile Drawer Overlay -->\n        <div id=\"drawer-overlay\" class=\"fixed inset-0 bg-black bg-opacity-50 z-40 hidden md:hidden transition-opacity duration-300\"></div>\n\n        <!-- Mobile Drawer Menu -->\n        <div id=\"mobile-drawer\" class=\"fixed top-0 left-0 h-full w-80 bg-white shadow-xl z-50 transform -translate-x-full transition-transform duration-300 ease-in-out md:hidden\">\n            <!-- Drawer Header -->\n            <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n                <div class=\"flex items-center space-x-3\">\n                    <img src=\"./pinjemin.png\" class=\"h-8\" alt=\"Pinjemin Logo\">\n                    <span class=\"text-lg font-bold text-gray-800\">Pinjemin</span>\n                </div>\n                <button id=\"close-drawer-button\" class=\"text-gray-400 hover:text-gray-600 focus:outline-none p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                    </svg>\n                </button>\n            </div>\n\n            <!-- Drawer Content -->\n            <div class=\"flex flex-col h-full overflow-y-auto\">\n                <!-- Auth Links -->\n                <div class=\"drawer-auth-links border-b border-gray-200 p-4\">\n                    <div class=\"space-y-3\">\n                        <a href=\"/#/login\" class=\"flex items-center justify-center w-full py-3 text-blue-600 border border-blue-600 rounded-lg hover:bg-blue-50 transition-colors duration-200 font-medium\">\n                            Sign In\n                        </a>\n                        <a href=\"/#/register\" class=\"flex items-center justify-center w-full py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 font-medium\">\n                            Register\n                        </a>\n                    </div>\n                </div>\n\n                <!-- Navigation Links -->\n                <nav class=\"flex-1 px-4 py-4\">\n                    <ul class=\"space-y-2\">\n                        <li>\n                            <a href=\"/#/\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path>\n                                </svg>\n                                Beranda\n                            </a>\n                        </li>\n                        <li>\n                            <a href=\"/#/community\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                                </svg>\n                                Komunitas\n                            </a>\n                        </li>\n                        <li>\n                            <button onclick=\"document.getElementById('how-it-works').scrollIntoView({behavior: 'smooth'}); this.closest('#mobile-drawer').classList.add('-translate-x-full'); document.getElementById('drawer-overlay').classList.add('hidden');\" class=\"flex items-center w-full px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200 text-left\">\n                                <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                                </svg>\n                                Cara Kerja\n                            </button>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n\n        <!-- Hero Section -->\n        <section class=\"gradient-bg hero-pattern min-h-screen flex items-center justify-center px-4 py-20\">\n            <div class=\"container mx-auto\">\n                <div class=\"grid lg:grid-cols-2 gap-12 items-center\">\n                    <!-- Left Content -->\n                    <div class=\"text-white space-y-8 animate-on-scroll\">\n                        <div class=\"space-y-4\">\n                            <h1 class=\"text-4xl md:text-6xl font-bold leading-tight text-yellow-900\">\n                                Pinjemin - \n                                <span class=\"text-yellow-400\">Making All Your Needs Easier</span>\n                            </h1>\n                            <p class=\"text-xl md:text-2xl text-gray-700 leading-relaxed\">\n                                Platform serbaguna yang memudahkan kamu membeli, menyewa, atau meminjam barang apapun.\n                            </p>\n                        </div>\n                        \n                        <div class=\"flex flex-col sm:flex-row gap-4\">\n                            <a href=\"/#/register\" class=\"bg-yellow-400 text-gray-900 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-yellow-300 transition-all duration-300 text-center shadow-lg\">\n                                Mulai Sekarang\n                            </a>\n                            <button onclick=\"document.getElementById('how-it-works').scrollIntoView({behavior: 'smooth'})\" class=\"bg-transparent border border-yellow-400 text-yellow-400 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-yellow-400 hover:text-gray-900 transition-all duration-300 text-center shadow-lg\">\n                                Pelajari Lebih Lanjut\n                            </button>\n                        </div>\n                    </div>\n\n                    <!-- Right Content - Hero Image -->\n                    <div class=\"flex justify-center animate-on-scroll\">\n                        <div class=\"relative\">\n                            <img src=\"./dashboard-pagee.png?height=1080&width=1920\" alt=\"Pinjemin Platform Illustration\" class=\"w-full max-w-2xl rounded-2xl\">\n                            <div class=\"absolute -top-4 -right-4 bg-yellow-400 text-blue-900 px-4 py-2 rounded-full font-bold text-sm shadow-lg\">\n                                Sewa & Beli!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Demo Section -->\n        <section class=\"py-20 bg-white\">\n            <div class=\"container mx-auto px-4\">\n                <div class=\"grid lg:grid-cols-2 gap-12 items-center\">\n                    <!-- Left Content - Demo Video -->\n                    <div class=\"flex justify-center animate-on-scroll\">\n                        <div class=\"relative w-full max-w-2xl\">\n                            <!-- YouTube Video Embed with fallback -->\n                            <div class=\"relative aspect-video bg-gray-100 rounded-2xl overflow-hidden shadow-xl\">\n                                <!-- Primary iframe with privacy-enhanced mode -->\n                                <iframe \n                                    class=\"w-full h-full\" \n                                    src=\"https://www.youtube-nocookie.com/embed/GmJqTraI9oQ?rel=0&modestbranding=1&showinfo=0\"\n                                    title=\"Pinjemin Demo Video\" \n                                    frameborder=\"0\" \n                                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \n                                    allowfullscreen\n                                    referrerpolicy=\"strict-origin-when-cross-origin\">\n                                </iframe>\n                                \n                                <!-- Fallback content if iframe fails -->\n                                <div class=\"absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white opacity-0 hover:opacity-100 transition-opacity duration-300\" style=\"z-index: -1;\">\n                                    <div class=\"text-center\">\n                                        <svg class=\"w-16 h-16 mx-auto mb-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                            <path d=\"M8 5v14l11-7z\"/>\n                                        </svg>\n                                        <p class=\"text-lg font-semibold\">Demo Video</p>\n                                        <p class=\"text-sm opacity-75\">Klik untuk menonton</p>\n                                    </div>\n                                </div>\n                            </div>\n                            \n                            <!-- Alternative: Direct YouTube link button -->\n                            <div class=\"mt-4 text-center\">\n                                <a \n                                    href=\"https://www.youtube.com/watch?v=GmJqTraI9oQ\" \n                                    target=\"_blank\" \n                                    rel=\"noopener noreferrer\"\n                                    class=\"inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200 text-sm font-medium\"\n                                >\n                                    <svg class=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path d=\"M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z\"/>\n                                    </svg>\n                                    Tonton di YouTube\n                                </a>\n                            </div>\n                            \n                            <!-- Demo Badge -->\n                            <div class=\"absolute -top-4 -right-4 bg-red-500 text-white px-4 py-2 rounded-full font-bold text-sm shadow-lg flex items-center space-x-2\">\n                                <svg class=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path d=\"M8 5v14l11-7z\"/>\n                                </svg>\n                                <span>Demo Video</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Right Content - same as before -->\n                    <div class=\"space-y-8 animate-on-scroll\">\n                        <div class=\"space-y-4\">\n                            <h2 class=\"text-4xl md:text-5xl font-bold text-gray-900 leading-tight\">\n                                Lihat Pinjemin \n                                <span class=\"text-blue-600\">Dalam Aksi</span>\n                            </h2>\n                            <p class=\"text-xl text-gray-600 leading-relaxed\">\n                                Tonton video demo lengkap tentang cara menggunakan Pinjemin untuk semua kebutuhan jual-beli dan sewa-menyewa kamu.\n                            </p>\n                        </div>\n                        \n                        <div class=\"space-y-4\">\n                            <div class=\"flex items-center space-x-3\">\n                                <div class=\"bg-green-100 p-2 rounded-full\">\n                                    <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                                    </svg>\n                                </div>\n                                <span class=\"text-gray-700 font-medium\">Panduan lengkap dari registrasi hingga transaksi</span>\n                            </div>\n                            <div class=\"flex items-center space-x-3\">\n                                <div class=\"bg-green-100 p-2 rounded-full\">\n                                    <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                                    </svg>\n                                </div>\n                                <span class=\"text-gray-700 font-medium\">Tips dan trik untuk pengalaman terbaik</span>\n                            </div>\n                            <div class=\"flex items-center space-x-3\">\n                                <div class=\"bg-green-100 p-2 rounded-full\">\n                                    <svg class=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\"></path>\n                                    </svg>\n                                </div>\n                                <span class=\"text-gray-700 font-medium\">Fitur-fitur unggulan yang wajib dicoba</span>\n                            </div>\n                        </div>\n                        \n                        <div class=\"flex flex-col sm:flex-row gap-4\">\n                            <a href=\"/#/register\" class=\"bg-blue-600 text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-blue-700 transition-all duration-300 text-center shadow-lg\">\n                                Coba Sekarang\n                            </a>\n                            <button onclick=\"document.getElementById('how-it-works').scrollIntoView({behavior: 'smooth'})\" class=\"border-2 border-blue-600 text-blue-600 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-blue-600 hover:text-white transition-all duration-300 text-center\">\n                                Pelajari Lebih Lanjut\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- How It Works Section -->\n        <section id=\"how-it-works\" class=\"py-20 bg-gray-50\">\n            <div class=\"container mx-auto px-4\">\n                <div class=\"text-center mb-16 animate-on-scroll\">\n                    <h2 class=\"text-4xl font-bold text-gray-900 mb-4\">Bagaimana Cara Kerjanya?</h2>\n                    <p class=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n                        Tiga langkah mudah untuk memulai pengalaman jual-beli dan sewa-menyewa yang menyenangkan\n                    </p>\n                </div>\n\n                <div class=\"grid md:grid-cols-3 gap-8\">\n                    <!-- Step 1 -->\n                    <div class=\"bg-white p-8 rounded-2xl shadow-lg text-center feature-card animate-on-scroll\">\n                        <div class=\"bg-blue-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6\">\n                            <svg class=\"w-8 h-8 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-2xl font-bold text-gray-900 mb-4\">Unggah Barang</h3>\n                        <p class=\"text-gray-600 leading-relaxed\">\n                            Jual atau sewakan barang dengan mudah. Upload foto, tentukan harga, dan barang kamu siap dilihat ribuan pengguna.\n                        </p>\n                    </div>\n\n                    <!-- Step 2 -->\n                    <div class=\"bg-white p-8 rounded-2xl shadow-lg text-center feature-card animate-on-scroll\">\n                        <div class=\"bg-green-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6\">\n                            <svg class=\"w-8 h-8 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-2xl font-bold text-gray-900 mb-4\">Temukan & Pinjam</h3>\n                        <p class=\"text-gray-600 leading-relaxed\">\n                            Cari dan checkout barang yang tersedia. Filter berdasarkan lokasi, harga, dan kategori untuk menemukan yang kamu butuhkan.\n                        </p>\n                    </div>\n\n                    <!-- Step 3 -->\n                    <div class=\"bg-white p-8 rounded-2xl shadow-lg text-center feature-card animate-on-scroll\">\n                        <div class=\"bg-purple-100 w-16 h-16 rounded-full flex items-center justify-center mx-auto mb-6\">\n                            <svg class=\"w-8 h-8 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-2xl font-bold text-gray-900 mb-4\">Lakukan Transaksi</h3>\n                        <p class=\"text-gray-600 leading-relaxed\">\n                            COD atau janjian ambil barang, semuanya tercatat! Sistem kami memastikan transaksi aman dan terpercaya.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Features Section -->\n        <section class=\"py-20 bg-white\">\n            <div class=\"container mx-auto px-4\">\n                <div class=\"text-center mb-16 animate-on-scroll\">\n                    <h2 class=\"text-4xl font-bold text-gray-900 mb-4\">Fitur Unggulan Pinjemin</h2>\n                    <p class=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n                        Semua yang kamu butuhkan untuk pengalaman jual-beli dan sewa-menyewa yang sempurna\n                    </p>\n                </div>\n\n                <div class=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n                    <!-- Feature 1 -->\n                    <div class=\"p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-300 animate-on-scroll\">\n                        <div class=\"bg-blue-50 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n                            <svg class=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Akun Tunggal</h3>\n                        <p class=\"text-gray-600\">Satu akun untuk semua kebutuhan - jual, beli, sewa, dan pinjam.</p>\n                    </div>\n\n                    <!-- Feature 2 -->\n                    <div class=\"p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-300 animate-on-scroll\">\n                        <div class=\"bg-green-50 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n                            <svg class=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 3h2l.4 2M7 13h10l4-8H5.4m0 0L7 13m0 0l-2.5 5M7 13l2.5 5m0 0L17 18\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Checkout Gabungan</h3>\n                        <p class=\"text-gray-600\">Beli dan sewa barang sekaligus dalam satu transaksi yang mudah.</p>\n                    </div>\n\n                    <!-- Feature 3 -->\n                    <div class=\"p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-300 animate-on-scroll\">\n                        <div class=\"bg-yellow-50 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n                            <svg class=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17 9V7a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2m2 4h10a2 2 0 002-2v-6a2 2 0 00-2-2H9a2 2 0 00-2 2v6a2 2 0 002 2zm7-5a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Pembayaran COD</h3>\n                        <p class=\"text-gray-600\">Bayar langsung saat barang diterima untuk keamanan maksimal.</p>\n                    </div>\n\n                    <!-- Feature 4 -->\n                    <div class=\"p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-300 animate-on-scroll\">\n                        <div class=\"bg-purple-50 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n                            <svg class=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Review & Chat</h3>\n                        <p class=\"text-gray-600\">Komunikasi langsung dengan penjual dan sistem review terpercaya.</p>\n                    </div>\n\n                    <!-- Feature 5 -->\n                    <div class=\"p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-300 animate-on-scroll\">\n                        <div class=\"bg-red-50 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n                            <svg class=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Notifikasi & Pengingat</h3>\n                        <p class=\"text-gray-600\">Dapatkan update real-time untuk semua aktivitas transaksi kamu.</p>\n                    </div>\n\n                    <!-- Feature 6 -->\n                    <div class=\"p-6 rounded-xl border border-gray-200 hover:shadow-lg transition-all duration-300 animate-on-scroll\">\n                        <div class=\"bg-indigo-50 w-12 h-12 rounded-lg flex items-center justify-center mb-4\">\n                            <svg class=\"w-6 h-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z\"></path>\n                            </svg>\n                        </div>\n                        <h3 class=\"text-xl font-semibold text-gray-900 mb-2\">Filter & Pencarian</h3>\n                        <p class=\"text-gray-600\">Temukan barang yang tepat dengan filter lokasi, harga, dan kategori.</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- FAQ Section -->\n        <section class=\"py-20 bg-gray-50\">\n            <div class=\"container mx-auto px-4\">\n                <div class=\"text-center mb-16 animate-on-scroll\">\n                    <h2 class=\"text-4xl font-bold text-gray-900 mb-4\">Pertanyaan yang Sering Diajukan</h2>\n                    <p class=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n                        Temukan jawaban untuk pertanyaan umum tentang Pinjemin\n                    </p>\n                </div>\n\n                <div class=\"max-w-3xl mx-auto space-y-4\">\n                    <!-- FAQ Item 1 -->\n                    <div class=\"faq-item bg-white rounded-lg shadow-sm animate-on-scroll\">\n                        <button class=\"faq-button w-full px-6 py-4 text-left flex justify-between items-center hover:bg-gray-50 transition-colors duration-200\">\n                            <span class=\"text-lg font-semibold text-gray-900\">Apakah saya bisa menyewa dan membeli sekaligus?</span>\n                            <svg class=\"faq-icon w-5 h-5 text-gray-500 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                            </svg>\n                        </button>\n                        <div class=\"faq-content hidden px-6 pb-4\">\n                            <p class=\"text-gray-600\">Ya! Pinjemin memungkinkan kamu untuk menyewa dan membeli barang dalam satu transaksi. Sistem checkout gabungan kami memudahkan kamu untuk mendapatkan semua yang dibutuhkan sekaligus.</p>\n                        </div>\n                    </div>\n\n                    <!-- FAQ Item 2 -->\n                    <div class=\"faq-item bg-white rounded-lg shadow-sm animate-on-scroll\">\n                        <button class=\"faq-button w-full px-6 py-4 text-left flex justify-between items-center hover:bg-gray-50 transition-colors duration-200\">\n                            <span class=\"text-lg font-semibold text-gray-900\">Bagaimana sistem pembayaran di Pinjemin?</span>\n                            <svg class=\"faq-icon w-5 h-5 text-gray-500 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                            </svg>\n                        </button>\n                        <div class=\"faq-content hidden px-6 pb-4\">\n                            <p class=\"text-gray-600\">Kami menggunakan sistem COD (Cash on Delivery) untuk keamanan maksimal. Kamu bisa bayar langsung saat barang diterima, sehingga tidak perlu khawatir dengan penipuan online.</p>\n                        </div>\n                    </div>\n\n                    <!-- FAQ Item 3 -->\n                    <div class=\"faq-item bg-white rounded-lg shadow-sm animate-on-scroll\">\n                        <button class=\"faq-button w-full px-6 py-4 text-left flex justify-between items-center hover:bg-gray-50 transition-colors duration-200\">\n                            <span class=\"text-lg font-semibold text-gray-900\">Apakah semua pengguna bisa jadi penyewa dan penjual?</span>\n                            <svg class=\"faq-icon w-5 h-5 text-gray-500 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                            </svg>\n                        </button>\n                        <div class=\"faq-content hidden px-6 pb-4\">\n                            <p class=\"text-gray-600\">Tentu saja! Dengan satu akun Pinjemin, kamu bisa menjadi pembeli, penyewa, penjual, dan yang menyewakan barang. Fleksibilitas penuh untuk semua kebutuhan transaksi kamu.</p>\n                        </div>\n                    </div>\n\n                    <!-- FAQ Item 4 -->\n                    <div class=\"faq-item bg-white rounded-lg shadow-sm animate-on-scroll\">\n                        <button class=\"faq-button w-full px-6 py-4 text-left flex justify-between items-center hover:bg-gray-50 transition-colors duration-200\">\n                            <span class=\"text-lg font-semibold text-gray-900\">Bagaimana cara memastikan keamanan transaksi?</span>\n                            <svg class=\"faq-icon w-5 h-5 text-gray-500 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                            </svg>\n                        </button>\n                        <div class=\"faq-content hidden px-6 pb-4\">\n                            <p class=\"text-gray-600\">Pinjemin memiliki sistem review dan rating, chat langsung dengan penjual, serta semua transaksi tercatat dalam sistem. Ditambah dengan pembayaran COD, keamanan transaksi kamu terjamin.</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Contact/Team Section -->\n        <section class=\"py-20 bg-white\">\n            <div class=\"container mx-auto px-4\">\n                <div class=\"text-center mb-16 animate-on-scroll\">\n                    <h2 class=\"text-4xl font-bold text-gray-900 mb-4\">\uD83D\uDC65 Siapa di Balik Pinjemin?</h2>\n                    <p class=\"text-xl text-gray-600 max-w-2xl mx-auto\">\n                        Tim passionate yang berkomitmen menghadirkan solusi terbaik untuk kebutuhan sehari-hari kamu\n                    </p>\n                </div>\n\n                <div class=\"grid md:grid-cols-2 gap-12 max-w-6xl mx-auto\">\n                    <!-- ML Team -->\n                    <div class=\"animate-on-scroll\">\n                        <div class=\"bg-gradient-to-br from-blue-50 to-indigo-50 p-8 rounded-2xl\">\n                            <h3 class=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n                                <span class=\"text-3xl mr-3\">\uD83C\uDFAF</span>\n                                Machine Learning Team\n                            </h3>\n                            <div class=\"space-y-4\">\n                                <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n                                    <p class=\"font-semibold text-gray-900\">MC008D5X0402</p>\n                                    <p class=\"text-lg font-medium text-blue-600\">Rahma Nur Annisa</p>\n                                    <p class=\"text-gray-600\">Statistika, Universitas Gadjah Mada</p>\n                                </div>\n                                <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n                                    <p class=\"font-semibold text-gray-900\">MC008D5Y0259</p>\n                                    <p class=\"text-lg font-medium text-blue-600\">Yohanes De Britto Dewo Prasetyo</p>\n                                    <p class=\"text-gray-600\">Statistika, Universitas Gadjah Mada</p>\n                                </div>\n                                <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n                                    <p class=\"font-semibold text-gray-900\">MC008D5Y1074</p>\n                                    <p class=\"text-lg font-medium text-blue-600\">Dimaz Andhika Putra</p>\n                                    <p class=\"text-gray-600\">Statistika, Universitas Gadjah Mada</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Frontend & Backend Team -->\n                    <div class=\"animate-on-scroll\">\n                        <div class=\"bg-gradient-to-br from-green-50 to-emerald-50 p-8 rounded-2xl\">\n                            <h3 class=\"text-2xl font-bold text-gray-900 mb-6 flex items-center\">\n                                <span class=\"text-3xl mr-3\">\uD83D\uDDA5\uFE0F</span>\n                                Front-End dan Back-End Team\n                            </h3>\n                            <div class=\"space-y-4\">\n                                <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n                                    <p class=\"font-semibold text-gray-900\">FC221D5Y1035</p>\n                                    <p class=\"text-lg font-medium text-green-600\">Bintang Kurniawan Herman</p>\n                                    <p class=\"text-gray-600\">Ilmu Komputer, UIN Sumatera Utara Medan</p>\n                                </div>\n                                <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n                                    <p class=\"font-semibold text-gray-900\">FC134D5X1508</p>\n                                    <p class=\"text-lg font-medium text-green-600\">Indah Sari Sitorus</p>\n                                    <p class=\"text-gray-600\">Manajemen Informatika, Politeknik Negeri Sriwijaya</p>\n                                </div>\n                                <div class=\"bg-white p-4 rounded-lg shadow-sm\">\n                                    <p class=\"font-semibold text-gray-900\">FC014D5Y0292</p>\n                                    <p class=\"text-lg font-medium text-green-600\">I Putu Yogi Prasetya Dharmawan</p>\n                                    <p class=\"text-gray-600\">Teknologi Informasi, Universitas Udayana</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- CTA Section -->\n        <section class=\"gradient-bg py-20\">\n            <div class=\"container mx-auto px-4 text-center animate-on-scroll\">\n                <div class=\"max-w-3xl mx-auto text-white space-y-8\">\n                    <h2 class=\"text-4xl md:text-5xl font-bold\">\n                        Siap Memulai Perjalanan Pinjemin?\n                    </h2>\n                    <p class=\"text-xl text-blue-100\">\n                        Bergabunglah dengan ribuan pengguna yang sudah merasakan kemudahan bertransaksi di Pinjemin\n                    </p>\n                    <div class=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                        <a href=\"/#/register\" class=\"bg-white text-blue-600 px-8 py-4 rounded-lg font-semibold text-lg hover:bg-gray-100 transition-all duration-300 shadow-lg\">\n                            Daftar Sekarang\n                        </a>\n                        <a href=\"/#/login\" class=\"border-2 border-white text-white px-8 py-4 rounded-lg font-semibold text-lg hover:bg-white hover:text-blue-600 transition-all duration-300\">\n                            Sudah Punya Akun?\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <!-- Footer -->\n        <footer class=\"bg-gray-900 text-white py-12\">\n            <div class=\"container mx-auto px-4\">\n                <div class=\"grid md:grid-cols-4 gap-8\">\n                    <!-- Logo & Description -->\n                    <div class=\"md:col-span-2\">\n                        <div class=\"flex items-center mb-4\">\n                            <img src=\"./pinjemin.png\" class=\"h-12 mr-3\" alt=\"Pinjemin Logo\">\n                            <span class=\"text-2xl font-bold\">Pinjemin</span>\n                        </div>\n                        <p class=\"text-gray-400 mb-4 max-w-md\">\n                            Platform serbaguna yang memudahkan kamu membeli, menyewa, atau meminjam barang apapun. Making all your needs easier.\n                        </p>\n                        <div class=\"flex space-x-4\">\n                            <a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">\n                                <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\"/>\n                                </svg>\n                            </a>\n                            <a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">\n                                <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path d=\"M22.46 6c-.77.35-1.6.58-2.46.69.88-.53 1.56-1.37 1.88-2.38-.83.5-1.75.85-2.72 1.05C18.37 4.5 17.26 4 16 4c-2.35 0-4.27 1.92-4.27 4.29 0 .34.04.67.11.98C8.28 9.09 5.11 7.38 3 4.79c-.37.63-.58 1.37-.58 2.15 0 1.49.75 2.81 1.91 3.56-.71 0-1.37-.2-1.95-.5v.03c0 2.08 1.48 3.82 3.44 4.21a4.22 4.22 0 0 1-1.93.07 4.28 4.28 0 0 0 4 2.98 8.521 8.521 0 0 1-5.33 1.84c-.34 0-.68-.02-1.02-.06C3.44 20.29 5.7 21 8.12 21 16 21 20.33 14.46 20.33 8.79c0-.19 0-.37-.01-.56.84-.6 1.56-1.36 2.14-2.23z\"/>\n                                </svg>\n                            </a>\n                            <a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">\n                                <svg class=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path d=\"M12.017 0C5.396 0 .029 5.367.029 11.987c0 5.079 3.158 9.417 7.618 11.174-.105-.949-.199-2.403.041-3.439.219-.937 1.406-5.957 1.406-5.957s-.359-.72-.359-1.781c0-1.663.967-2.911 2.168-2.911 1.024 0 1.518.769 1.518 1.688 0 1.029-.653 2.567-.992 3.992-.285 1.193.6 2.165 1.775 2.165 2.128 0 3.768-2.245 3.768-5.487 0-2.861-2.063-4.869-5.008-4.869-3.41 0-5.409 2.562-5.409 5.199 0 1.033.394 2.143.889 2.741.099.12.112.225.085.345-.09.375-.293 1.199-.334 1.363-.053.225-.172.271-.402.165-1.495-.69-2.433-2.878-2.433-4.646 0-3.776 2.748-7.252 7.92-7.252 4.158 0 7.392 2.967 7.392 6.923 0 4.135-2.607 7.462-6.233 7.462-1.214 0-2.357-.629-2.75-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146C9.57 23.812 10.763 24.009 12.017 24.009c6.624 0 11.99-5.367 11.99-11.988C24.007 5.367 18.641.001.012.001z\"/>\n                                </svg>\n                            </a>\n                        </div>\n                    </div>\n\n                    <!-- Quick Links -->\n                    <div>\n                        <h4 class=\"text-lg font-semibold mb-4\">Quick Links</h4>\n                        <ul class=\"space-y-2\">\n                            <li><a href=\"/#/\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Beranda</a></li>\n                            <li><a href=\"/#/community\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Komunitas</a></li>\n                            <li><a href=\"/#/login\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Masuk</a></li>\n                            <li><a href=\"/#/register\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Daftar</a></li>\n                        </ul>\n                    </div>\n\n                    <!-- Support -->\n                    <div>\n                        <h4 class=\"text-lg font-semibold mb-4\">Bantuan</h4>\n                        <ul class=\"space-y-2\">\n                            <li><a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Pusat Bantuan</a></li>\n                            <li><a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Syarat & Ketentuan</a></li>\n                            <li><a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Kebijakan Privasi</a></li>\n                            <li><a href=\"#\" class=\"text-gray-400 hover:text-white transition-colors duration-200\">Kontak Kami</a></li>\n                        </ul>\n                    </div>\n                </div>\n\n                <div class=\"border-t border-gray-800 mt-8 pt-8 text-left\">\n                    <p class=\"text-gray-400\">\n                        \xA9 2025 Pinjemin. All rights reserved. Made with \u2764\uFE0F by Pinjemin Team.\n                    </p>\n                </div>\n            </div>\n        </footer>\n    ";
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(HTMLElement));
customElements.define("landing-page", LandingPage);

/***/ }),

/***/ 56:
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ 72:
/***/ ((module) => {

"use strict";


var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ 109:
/***/ (() => {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
var SearchBar = /*#__PURE__*/function (_HTMLElement) {
  function SearchBar() {
    var _this;
    _classCallCheck(this, SearchBar);
    _this = _callSuper(this, SearchBar);
    _this.shadow = _this.attachShadow({
      mode: "open"
    });
    _this.setupEventListeners = _this.setupEventListeners.bind(_this);
    return _this;
  }
  _inherits(SearchBar, _HTMLElement);
  return _createClass(SearchBar, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.render();
    }
  }, {
    key: "render",
    value: function render() {
      this.shadow.innerHTML = "\n            <style>\n                @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n                @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css');\n                \n                :host {\n                    display: block;\n                    width: 100%;\n                    font-family: 'Poppins', sans-serif;\n                }\n                \n                .search-container {\n                    display: flex;\n                    gap: 12px;\n                    align-items: center;\n                    max-width: 600px;\n                    margin: 0 auto;\n                    padding: 0 1rem;\n                    position: relative;\n                }\n\n                .search-input-wrapper {\n                    flex-grow: 1;\n                    position: relative;\n                    display: flex;\n                    align-items: center;\n                }\n\n                .search-input {\n                    width: 100%;\n                    padding: 14px 20px 14px 50px;\n                    font-size: 16px;\n                    font-weight: 400;\n                    color: #334155;\n                    background: linear-gradient(135deg, #ffffff, #f8fafc);\n                    border: 2px solid #e2e8f0;\n                    border-radius: 16px;\n                    outline: none;\n                    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n                    font-family: 'Poppins', sans-serif;\n                }\n\n                .search-input::placeholder {\n                    color: #94a3b8;\n                    font-weight: 400;\n                }\n\n                .search-input:focus {\n                    border-color: #6366f1;\n                    box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.1), 0 8px 24px rgba(0, 0, 0, 0.1);\n                    transform: translateY(-2px);\n                    background: #ffffff;\n                }\n\n                .search-input:hover {\n                    border-color: #cbd5e1;\n                    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);\n                }\n\n                .search-icon {\n                    position: absolute;\n                    left: 18px;\n                    top: 50%;\n                    transform: translateY(-50%);\n                    color: #64748b;\n                    font-size: 18px;\n                    pointer-events: none;\n                    transition: all 0.3s ease;\n                    z-index: 1;\n                }\n\n                .search-input:focus + .search-icon {\n                    color: #6366f1;\n                    transform: translateY(-50%) scale(1.1);\n                }\n\n                .search-button {\n                    background: linear-gradient(135deg, #6366f1, #4f46e5);\n                    color: white;\n                    font-weight: 600;\n                    padding: 14px 20px;\n                    border-radius: 16px;\n                    font-size: 18px;\n                    cursor: pointer;\n                    border: none;\n                    outline: none;\n                    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n                    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\n                    font-family: 'Poppins', sans-serif;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    min-width: 56px;\n                    height: 56px;\n                }\n\n                .search-button:hover {\n                    background: linear-gradient(135deg, #4f46e5, #4338ca);\n                    transform: translateY(-3px);\n                    box-shadow: 0 8px 20px rgba(99, 102, 241, 0.4);\n                }\n\n                .search-button:active {\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);\n                }\n\n                .search-button:focus {\n                    box-shadow: 0 0 0 4px rgba(99, 102, 241, 0.2), 0 8px 20px rgba(99, 102, 241, 0.4);\n                }\n\n                .search-button-icon {\n                    font-size: 18px;\n                    transition: transform 0.3s ease;\n                }\n\n                .search-button:hover .search-button-icon {\n                    transform: scale(1.2);\n                }\n\n                /* Responsive Design */\n                @media (max-width: 640px) {\n                    .search-container {\n                        gap: 8px;\n                        padding: 0 0.5rem;\n                    }\n\n                    .search-input {\n                        padding: 12px 16px 12px 44px;\n                        font-size: 14px;\n                        border-radius: 12px;\n                    }\n\n                    .search-icon {\n                        left: 14px;\n                        font-size: 16px;\n                    }\n\n                    .search-button {\n                        padding: 12px 16px;\n                        font-size: 16px;\n                        border-radius: 12px;\n                        min-width: 48px;\n                        height: 48px;\n                    }\n\n                    .search-button-icon {\n                        font-size: 16px;\n                    }\n                }\n\n                @media (max-width: 480px) {\n                    .search-container {\n                        max-width: 100%;\n                        padding: 0 0.25rem;\n                        gap: 6px;\n                    }\n\n                    .search-input {\n                        padding: 10px 14px 10px 40px;\n                        font-size: 14px;\n                    }\n\n                    .search-icon {\n                        left: 12px;\n                        font-size: 14px;\n                    }\n\n                    .search-button {\n                        padding: 10px 14px;\n                        font-size: 14px;\n                        min-width: 44px;\n                        height: 44px;\n                    }\n\n                    .search-button-icon {\n                        font-size: 14px;\n                    }\n                }\n\n                /* Animation for loading state */\n                .search-button.loading {\n                    pointer-events: none;\n                    opacity: 0.8;\n                }\n\n                .search-button.loading .search-button-icon {\n                    animation: spin 1s linear infinite;\n                }\n\n                @keyframes spin {\n                    from { transform: rotate(0deg); }\n                    to { transform: rotate(360deg); }\n                }\n\n                /* Focus visible for accessibility */\n                .search-input:focus-visible,\n                .search-button:focus-visible {\n                    outline: 2px solid #6366f1;\n                    outline-offset: 2px;\n                }\n\n                /* Tooltip for button */\n                .search-button {\n                    position: relative;\n                }\n\n                .search-button::after {\n                    content: 'Cari';\n                    position: absolute;\n                    bottom: -35px;\n                    left: 50%;\n                    transform: translateX(-50%);\n                    background: rgba(0, 0, 0, 0.8);\n                    color: white;\n                    padding: 4px 8px;\n                    border-radius: 6px;\n                    font-size: 12px;\n                    font-weight: 500;\n                    white-space: nowrap;\n                    opacity: 0;\n                    pointer-events: none;\n                    transition: opacity 0.3s ease;\n                    z-index: 1000;\n                }\n\n                .search-button:hover::after {\n                    opacity: 1;\n                }\n\n                @media (max-width: 640px) {\n                    .search-button::after {\n                        display: none;\n                    }\n                }\n            </style>\n            <div class=\"search-container\">\n                <div class=\"search-input-wrapper\">\n                    <input \n                        type=\"text\" \n                        class=\"search-input\" \n                        placeholder=\"Cari produk yang Anda inginkan...\"\n                        autocomplete=\"off\"\n                        spellcheck=\"false\"\n                    >\n                    <i class=\"fa-solid fa-magnifying-glass search-icon\"></i>\n                </div>\n                <button class=\"search-button\" type=\"button\" aria-label=\"Cari produk\" title=\"Cari\">\n                    <i class=\"fa-solid fa-magnifying-glass search-button-icon\"></i>\n                </button>\n            </div>\n        ";
      this.setupEventListeners();
    }
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this2 = this;
      var searchInput = this.shadow.querySelector(".search-input");
      var searchButton = this.shadow.querySelector(".search-button");

      // Check if elements exist
      if (!searchInput || !searchButton) {
        console.error("Search elements not found");
        return;
      }
      var performSearch = function performSearch() {
        try {
          var searchTerm = searchInput.value ? searchInput.value.trim() : "";
          var searchParams = {};

          // Hanya tambahkan parameter 'search' jika searchTerm tidak kosong
          if (searchTerm) {
            searchParams.search = searchTerm;
          }
          console.log("Dispatching search event with params:", searchParams);

          // Add loading state
          searchButton.classList.add("loading");

          // Remove loading state after a short delay
          setTimeout(function () {
            searchButton.classList.remove("loading");
          }, 1000);
          _this2.dispatchEvent(new CustomEvent("search", {
            bubbles: true,
            composed: true,
            detail: {
              params: searchParams
            }
          }));
        } catch (error) {
          console.error("Error in performSearch:", error);
          searchButton.classList.remove("loading");
        }
      };
      searchButton.addEventListener("click", performSearch);
      searchInput.addEventListener("keypress", function (event) {
        if (event.key === "Enter") {
          event.preventDefault();
          performSearch();
        }
      });

      // Focus functionality
      searchInput.addEventListener("focus", function () {
        try {
          searchInput.select();
        } catch (error) {
          console.error("Error in focus event:", error);
        }
      });
    }

    // Method to clear search
  }, {
    key: "clearSearch",
    value: function clearSearch() {
      try {
        var searchInput = this.shadow.querySelector(".search-input");
        if (searchInput) {
          searchInput.value = "";
          searchInput.focus();
        }
      } catch (error) {
        console.error("Error in clearSearch:", error);
      }
    }

    // Method to set search value
  }, {
    key: "setSearchValue",
    value: function setSearchValue(value) {
      try {
        var searchInput = this.shadow.querySelector(".search-input");
        if (searchInput && typeof value === "string") {
          searchInput.value = value;
        }
      } catch (error) {
        console.error("Error in setSearchValue:", error);
      }
    }

    // Method to get current search value
  }, {
    key: "getSearchValue",
    value: function getSearchValue() {
      try {
        var searchInput = this.shadow.querySelector(".search-input");
        return searchInput && searchInput.value ? searchInput.value.trim() : "";
      } catch (error) {
        console.error("Error in getSearchValue:", error);
        return "";
      }
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(HTMLElement));
customElements.define("search-bar", SearchBar);

/***/ }),

/***/ 113:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ }),

/***/ 115:
/***/ (() => {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var RegisterPage = /*#__PURE__*/function (_HTMLElement) {
  function RegisterPage() {
    var _this;
    _classCallCheck(this, RegisterPage);
    _this = _callSuper(this, RegisterPage);
    _defineProperty(_this, "openDrawer", function () {
      var mobileDrawer = _this.querySelector("#mobile-drawer");
      var drawerOverlay = _this.querySelector("#drawer-overlay");
      if (mobileDrawer && drawerOverlay) {
        // Show overlay
        drawerOverlay.classList.remove("hidden");
        // Force reflow before adding transform classes for smooth animation
        drawerOverlay.offsetHeight;

        // Slide in drawer
        mobileDrawer.classList.remove("-translate-x-full");

        // Prevent body scroll when drawer is open
        document.body.style.overflow = "hidden";
        console.log("Drawer opened");
      }
    });
    _defineProperty(_this, "closeDrawer", function () {
      var mobileDrawer = _this.querySelector("#mobile-drawer");
      var drawerOverlay = _this.querySelector("#drawer-overlay");
      if (mobileDrawer && drawerOverlay) {
        // Slide out drawer
        mobileDrawer.classList.add("-translate-x-full");

        // Hide overlay after animation completes
        setTimeout(function () {
          drawerOverlay.classList.add("hidden");
        }, 300); // Match transition duration

        // Restore body scroll
        document.body.style.overflow = "";
        console.log("Drawer closed");
      }
    });
    _this.isLoading = false;
    // Bind methods to the class instance
    _this.fetchProvinces = _this.fetchProvinces.bind(_this);
    _this.populateProvincesDropdown = _this.populateProvincesDropdown.bind(_this);
    _this.handleProvinceChange = _this.handleProvinceChange.bind(_this);
    _this.fetchCitiesByProvinceId = _this.fetchCitiesByProvinceId.bind(_this);
    _this.populateCitiesDropdown = _this.populateCitiesDropdown.bind(_this);
    _this.setupFormSubmission = _this.setupFormSubmission.bind(_this);
    return _this;
  }
  _inherits(RegisterPage, _HTMLElement);
  return _createClass(RegisterPage, [{
    key: "_emptyContent",
    value: function _emptyContent() {
      this.innerHTML = "";
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      // Check if user is already logged in
      var token = localStorage.getItem("token");
      if (token) {
        // User is already logged in, redirect to home
        window.location.href = "/#/home";
        return;
      }
      this.render();
      this.setupMobileMenuToggle();
      this.setupFormSubmission();
      this.fetchProvinces();
      this.setupProvinceChangeListener();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      var provinceSelect = this.querySelector("#province");
      if (provinceSelect) {
        provinceSelect.removeEventListener("change", this.handleProvinceChange);
      }
      // Remove mobile menu listeners
      var mobileMenuButton = this.querySelector("#mobile-menu-button");
      if (mobileMenuButton && this._mobileMenuButtonHandler) {
        mobileMenuButton.removeEventListener("click", this._mobileMenuButtonHandler);
        this._mobileMenuButtonHandler = null;
      }

      // Remove drawer overlay listener
      if (this._drawerOverlayHandler) {
        document.removeEventListener("click", this._drawerOverlayHandler);
        this._drawerOverlayHandler = null;
      }
    }
  }, {
    key: "setupMobileMenuToggle",
    value: function setupMobileMenuToggle() {
      var _this2 = this;
      console.log("Setting up mobile drawer toggle...");
      var mobileMenuButton = this.querySelector("#mobile-menu-button");
      var mobileDrawer = this.querySelector("#mobile-drawer");
      var drawerOverlay = this.querySelector("#drawer-overlay");
      var closeDrawerButton = this.querySelector("#close-drawer-button");
      if (mobileMenuButton && mobileDrawer && drawerOverlay) {
        console.log("Mobile drawer elements found. Setting up listeners.");

        // Open drawer
        this._mobileMenuButtonHandler = function (event) {
          console.log("Mobile menu button clicked.");
          _this2.openDrawer();
        };
        mobileMenuButton.addEventListener("click", this._mobileMenuButtonHandler);

        // Close drawer via close button
        if (closeDrawerButton) {
          closeDrawerButton.addEventListener("click", function () {
            _this2.closeDrawer();
          });
        }

        // Close drawer via overlay click
        this._drawerOverlayHandler = function (event) {
          if (event.target === drawerOverlay) {
            _this2.closeDrawer();
          }
        };
        drawerOverlay.addEventListener("click", this._drawerOverlayHandler);

        // Close drawer when clicking navigation links
        var drawerLinks = mobileDrawer.querySelectorAll("a");
        drawerLinks.forEach(function (link) {
          link.addEventListener("click", function () {
            console.log("Drawer link clicked, closing drawer.");
            _this2.closeDrawer();
          });
        });

        // Close drawer on escape key
        document.addEventListener("keydown", function (event) {
          if (event.key === "Escape" && !mobileDrawer.classList.contains("-translate-x-full")) {
            _this2.closeDrawer();
          }
        });
      } else {
        console.error("Mobile drawer elements not found:", {
          mobileMenuButton: mobileMenuButton,
          mobileDrawer: mobileDrawer,
          drawerOverlay: drawerOverlay
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      this._emptyContent();
      this.innerHTML = "\n            <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n                .toast-slide-in {\n                    animation: slideIn 0.3s ease-out;\n                }\n                \n                .toast-slide-out {\n                    animation: slideOut 0.3s ease-in;\n                }\n                \n                @keyframes slideIn {\n                    from { transform: translateX(100%); opacity: 0; }\n                    to { transform: translateX(0); opacity: 1; }\n                }\n                \n                @keyframes slideOut {\n                    from { transform: translateX(0); opacity: 1; }\n                    to { transform: translateX(100%); opacity: 0; }\n                }\n\n                .form-grid {\n                    display: grid;\n                    grid-template-columns: 1fr 1fr;\n                    gap: 1rem;\n                }\n\n                @media (max-width: 640px) {\n                    .form-grid {\n                        grid-template-columns: 1fr;\n                    }\n                }\n            </style>\n            <!-- Fixed Header -->\n        <div class=\"fixed top-0 left-0 right-0 bg-white shadow-sm z-50\">\n            <div class=\"container mx-auto px-4 py-4 flex items-center justify-between\">\n                \n                <!-- Mobile Menu Button (Left) -->\n                <div class=\"flex items-center md:hidden\">\n                    <button id=\"mobile-menu-button\" type=\"button\" class=\"text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-200 p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                        <span class=\"sr-only\">Open main menu</span>\n                        <!-- Hamburger icon -->\n                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                        </svg>\n                    </button>\n                </div>\n\n                <!-- Logo (Center on mobile, Left on desktop) -->\n                <div class=\"flex items-center justify-center md:justify-start flex-1 md:flex-none\">\n                    <div class=\"text-xl font-bold text-gray-800 flex items-center\">\n                        <img src=\"./pinjemin.png\" class=\"mr-2 h-16 inline-block\" alt=\"Pinjemin Logo\">\n                    </div>\n                </div>\n\n                <!-- Desktop Navigation (Hidden on mobile) -->\n                <nav class=\"hidden md:flex items-center space-x-8 flex-1 justify-center\">\n                    <a href=\"/#/\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\">\n                        Beranda\n                    </a>\n                </nav>\n\n                <!-- Right Section: Auth Links -->\n                <div class=\"flex items-center space-x-3\">\n                    <!-- Authentication Links -->\n                    <div class=\"auth-links flex items-center space-x-2\">\n                        <a href=\"/#/login\" class=\"text-sm font-medium text-gray-700 hover:text-blue-600 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all duration-200\">\n                            Sign In\n                        </a>\n                        <a href=\"/#/register\" class=\"text-sm font-medium bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-all duration-200\">\n                            Register\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Mobile Drawer Overlay -->\n        <div id=\"drawer-overlay\" class=\"fixed inset-0 bg-black bg-opacity-50 z-40 hidden md:hidden transition-opacity duration-300\"></div>\n\n        <!-- Mobile Drawer Menu -->\n        <div id=\"mobile-drawer\" class=\"fixed top-0 left-0 h-full w-80 bg-white shadow-xl z-50 transform -translate-x-full transition-transform duration-300 ease-in-out md:hidden\">\n            <!-- Drawer Header -->\n            <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n                <div class=\"flex items-center space-x-3\">\n                    <img src=\"./pinjemin.png\" class=\"h-8\" alt=\"Pinjemin Logo\">\n                    <span class=\"text-lg font-bold text-gray-800\">Pinjemin</span>\n                </div>\n                <button id=\"close-drawer-button\" class=\"text-gray-400 hover:text-gray-600 focus:outline-none p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                    </svg>\n                </button>\n            </div>\n\n            <!-- Drawer Content -->\n            <div class=\"flex flex-col h-full overflow-y-auto\">\n                <!-- Auth Links -->\n                <div class=\"drawer-auth-links border-b border-gray-200 p-4\">\n                    <div class=\"space-y-3\">\n                        <a href=\"/#/login\" class=\"flex items-center justify-center w-full py-3 text-blue-600 border border-blue-600 rounded-lg hover:bg-blue-50 transition-colors duration-200 font-medium\">\n                            Sign In\n                        </a>\n                        <a href=\"/#/register\" class=\"flex items-center justify-center w-full py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 font-medium\">\n                            Register\n                        </a>\n                    </div>\n                </div>\n\n                <!-- Navigation Links -->\n                <nav class=\"flex-1 px-4 py-4\">\n                    <ul class=\"space-y-2\">\n                        <li>\n                            <a href=\"/#/\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path>\n                                </svg>\n                                Beranda\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n            \n            <div class=\"min-h-screen flex items-center justify-center p-4 mt-32\">\n                <div class=\"bg-white rounded-2xl shadow-2xl p-8 w-full max-w-lg\">\n                    <!-- Logo -->\n                    <div class=\"text-center mb-6\">\n                        <img class=\"mx-auto h-16 w-16 rounded-xl object-cover shadow-lg\" src=\"./pinjemin.png\" alt=\"Pinjemin\">\n                        <h2 class=\"mt-4 text-2xl font-bold text-gray-900\">Create Account</h2>\n                        <p class=\"mt-1 text-sm text-gray-600\">Join us and start your journey</p>\n                    </div>\n\n                    <!-- Form -->\n                    <form id=\"register-form\" class=\"space-y-4\">\n                        <div>\n                            <label for=\"name\" class=\"block text-sm font-medium text-gray-700 mb-1\">Full Name</label>\n                            <input \n                                id=\"name\" \n                                name=\"name\" \n                                type=\"text\" \n                                autocomplete=\"name\" \n                                required \n                                class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                placeholder=\"Enter your full name\"\n                            >\n                        </div>\n\n                        <div>\n                            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email Address</label>\n                            <input \n                                id=\"email\" \n                                name=\"email\" \n                                type=\"email\" \n                                autocomplete=\"email\" \n                                required \n                                class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                placeholder=\"Enter your email\"\n                            >\n                        </div>\n\n                        <div class=\"form-grid\">\n                            <div>\n                                <label for=\"province\" class=\"block text-sm font-medium text-gray-700 mb-1\">Province</label>\n                                <select \n                                    id=\"province\" \n                                    name=\"province_name\" \n                                    required \n                                    class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                >\n                                    <option value=\"\">Select Province</option>\n                                </select>\n                            </div>\n\n                            <div>\n                                <label for=\"city\" class=\"block text-sm font-medium text-gray-700 mb-1\">City</label>\n                                <select \n                                    id=\"city\" \n                                    name=\"city_name\" \n                                    required \n                                    disabled \n                                    class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white disabled:opacity-50 disabled:cursor-not-allowed\"\n                                >\n                                    <option value=\"\">Select City</option>\n                                </select>\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                            <input \n                                id=\"password\" \n                                name=\"password\" \n                                type=\"password\" \n                                autocomplete=\"new-password\" \n                                required \n                                class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                placeholder=\"Create a password\"\n                            >\n                        </div>\n\n                        <div>\n                            <label for=\"retype-password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Confirm Password</label>\n                            <input \n                                id=\"retype-password\" \n                                name=\"retype-password\" \n                                type=\"password\" \n                                autocomplete=\"new-password\" \n                                required \n                                class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                placeholder=\"Confirm your password\"\n                            >\n                        </div>\n\n                        <button \n                            type=\"submit\" \n                            id=\"submit-btn\"\n                            class=\"w-full bg-gradient-to-r from-purple-600 to-indigo-600 text-white py-2.5 px-4 rounded-lg font-semibold hover:from-purple-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transform hover:-translate-y-0.5 transition-all duration-200 disabled:opacity-70 disabled:cursor-not-allowed disabled:transform-none flex items-center justify-center min-h-[44px]\"\n                        >\n                            <span id=\"btn-content\">Create Account</span>\n                        </button>\n                    </form>\n\n                    <!-- Login Link -->\n                    <p class=\"mt-6 text-center text-sm text-gray-600\">\n                        Already have an account?\n                        <a href=\"/#/login\" class=\"font-semibold text-purple-600 hover:text-purple-500 transition-colors duration-200\">Sign in here</a>\n                    </p>\n                </div>\n            </div>\n            \n            <!-- Toast Container -->\n            <div id=\"toast-container\" class=\"fixed top-4 right-4 z-50 space-y-2\"></div>\n        ";
    }
  }, {
    key: "showToast",
    value: function showToast(title, message) {
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "success";
      var toastContainer = this.querySelector("#toast-container");
      var toast = document.createElement("div");
      var bgColor = type === "success" ? "bg-green-500" : "bg-red-500";
      var icon = type === "success" ? "✓" : "✕";
      toast.className = "".concat(bgColor, " text-white px-6 py-4 rounded-lg shadow-lg flex items-center min-w-[320px] toast-slide-in");
      toast.innerHTML = "\n            <div class=\"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-white bg-opacity-20 rounded-full mr-3\">\n                <span class=\"text-sm font-bold\">".concat(icon, "</span>\n            </div>\n            <div class=\"flex-1\">\n                <div class=\"font-semibold text-sm\">").concat(title, "</div>\n                <div class=\"text-xs opacity-90 mt-1\">").concat(message, "</div>\n            </div>\n        ");
      toastContainer.appendChild(toast);

      // Auto remove after 4 seconds
      setTimeout(function () {
        toast.classList.remove("toast-slide-in");
        toast.classList.add("toast-slide-out");
        setTimeout(function () {
          if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
          }
        }, 300);
      }, 4000);
    }
  }, {
    key: "setLoading",
    value: function setLoading(loading) {
      this.isLoading = loading;
      var submitBtn = this.querySelector("#submit-btn");
      var btnContent = this.querySelector("#btn-content");
      if (loading) {
        submitBtn.disabled = true;
        btnContent.textContent = "Creating Account...";
      } else {
        submitBtn.disabled = false;
        btnContent.textContent = "Create Account";
      }
    }
  }, {
    key: "fetchProvinces",
    value: function () {
      var _fetchProvinces = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {
        var provinceSelect, response, provinces;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              provinceSelect = this.querySelector("#province");
              provinceSelect.innerHTML = '<option value="">Select Province</option>';
              _context.prev = 2;
              _context.next = 5;
              return fetch("https://kanglerian.my.id/api-wilayah-indonesia/api/provinces.json");
            case 5:
              response = _context.sent;
              _context.next = 8;
              return response.json();
            case 8:
              provinces = _context.sent;
              this.populateProvincesDropdown(provinces);
              _context.next = 16;
              break;
            case 12:
              _context.prev = 12;
              _context.t0 = _context["catch"](2);
              console.error("Error fetching provinces:", _context.t0);
              this.showToast("Error", "Failed to load provinces. Please try again later.", "error");
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[2, 12]]);
      }));
      function fetchProvinces() {
        return _fetchProvinces.apply(this, arguments);
      }
      return fetchProvinces;
    }()
  }, {
    key: "populateProvincesDropdown",
    value: function populateProvincesDropdown(provinces) {
      var provinceSelect = this.querySelector("#province");
      if (provinceSelect) {
        provinces.forEach(function (province) {
          var option = document.createElement("option");
          option.value = province.id;
          option.textContent = province.name;
          provinceSelect.appendChild(option);
        });
      }
    }
  }, {
    key: "setupProvinceChangeListener",
    value: function setupProvinceChangeListener() {
      var provinceSelect = this.querySelector("#province");
      if (provinceSelect) {
        provinceSelect.addEventListener("change", this.handleProvinceChange);
      }
    }
  }, {
    key: "handleProvinceChange",
    value: function handleProvinceChange(event) {
      var provinceId = event.target.value;
      var citySelect = this.querySelector("#city");
      citySelect.innerHTML = '<option value="">Select City</option>';
      citySelect.disabled = true;
      if (provinceId) {
        this.fetchCitiesByProvinceId(provinceId);
      }
    }
  }, {
    key: "fetchCitiesByProvinceId",
    value: function () {
      var _fetchCitiesByProvinceId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(provinceId) {
        var citySelect, response, cities;
        return _regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              citySelect = this.querySelector("#city");
              citySelect.disabled = true;
              _context2.prev = 2;
              _context2.next = 5;
              return fetch("https://kanglerian.my.id/api-wilayah-indonesia/api/regencies/".concat(provinceId, ".json"));
            case 5:
              response = _context2.sent;
              _context2.next = 8;
              return response.json();
            case 8:
              cities = _context2.sent;
              this.populateCitiesDropdown(cities);
              citySelect.disabled = false;
              _context2.next = 18;
              break;
            case 13:
              _context2.prev = 13;
              _context2.t0 = _context2["catch"](2);
              console.error("Error fetching cities for province ".concat(provinceId, ":"), _context2.t0);
              this.showToast("Error", "Failed to load cities. Please try again later.", "error");
              citySelect.disabled = true;
            case 18:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[2, 13]]);
      }));
      function fetchCitiesByProvinceId(_x) {
        return _fetchCitiesByProvinceId.apply(this, arguments);
      }
      return fetchCitiesByProvinceId;
    }()
  }, {
    key: "populateCitiesDropdown",
    value: function populateCitiesDropdown(cities) {
      var citySelect = this.querySelector("#city");
      if (citySelect) {
        cities.forEach(function (city) {
          var option = document.createElement("option");
          option.value = city.id;
          option.textContent = city.name;
          citySelect.appendChild(option);
        });
      }
    }
  }, {
    key: "setupFormSubmission",
    value: function setupFormSubmission() {
      var _this3 = this;
      var form = this.querySelector("#register-form");
      form.addEventListener("submit", /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(event) {
          var token, formData, data, provinceSelect, citySelect, selectedProvinceOption, selectedCityOption, provinceName, cityName, response, result, loginEvent, errorMessage, _errorMessage;
          return _regeneratorRuntime().wrap(function _callee3$(_context3) {
            while (1) switch (_context3.prev = _context3.next) {
              case 0:
                event.preventDefault();

                // Check if user is already logged in
                token = localStorage.getItem("token");
                if (!token) {
                  _context3.next = 5;
                  break;
                }
                window.location.href = "/#/home";
                return _context3.abrupt("return");
              case 5:
                if (!_this3.isLoading) {
                  _context3.next = 7;
                  break;
                }
                return _context3.abrupt("return");
              case 7:
                formData = new FormData(form);
                data = Object.fromEntries(formData.entries()); // Validate password match
                if (!(data.password !== data["retype-password"])) {
                  _context3.next = 12;
                  break;
                }
                _this3.showToast("Password Mismatch", "Passwords do not match. Please try again.", "error");
                return _context3.abrupt("return");
              case 12:
                delete data["retype-password"];

                // Get province and city names
                provinceSelect = _this3.querySelector("#province");
                citySelect = _this3.querySelector("#city");
                selectedProvinceOption = provinceSelect.options[provinceSelect.selectedIndex];
                selectedCityOption = citySelect.options[citySelect.selectedIndex];
                provinceName = selectedProvinceOption ? selectedProvinceOption.textContent : "";
                cityName = selectedCityOption ? selectedCityOption.textContent : "";
                data.province_name = provinceName;
                data.city_name = cityName;
                console.log("Sending data to API:", data);
                _this3.setLoading(true);
                _context3.prev = 23;
                _context3.next = 26;
                return fetch("http://localhost:5000/api/auth/register", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify(data)
                });
              case 26:
                response = _context3.sent;
                _context3.next = 29;
                return response.json();
              case 29:
                result = _context3.sent;
                if (response.ok) {
                  if (result.status === "success") {
                    console.log("Registration successful:", result);
                    localStorage.setItem("token", result.token);
                    localStorage.setItem("user", JSON.stringify(result.data.user));

                    // Dispatch a custom event to notify other components
                    loginEvent = new CustomEvent("userLoggedIn", {
                      detail: {
                        user: result.data.user
                      }
                    });
                    window.dispatchEvent(loginEvent);
                    _this3.showToast("Registration Successful!", "Welcome! Redirecting to login...", "success");

                    // Redirect after showing toast
                    setTimeout(function () {
                      window.location.href = "/#/login";
                    }, 1500);
                  } else {
                    console.error("Registration failed (API error):", result.message, result.errors);
                    errorMessage = result.message + (result.errors ? "\n" + result.errors.map(function (e) {
                      return e.msg;
                    }).join(", ") : "");
                    _this3.showToast("Registration Failed", errorMessage, "error");
                  }
                } else {
                  console.error("Registration failed (HTTP error):", response.status, result.message, result.errors);
                  _errorMessage = result.message + (result.errors ? "\n" + result.errors.map(function (e) {
                    return e.msg;
                  }).join(", ") : "An unexpected error occurred.");
                  _this3.showToast("Registration Failed", _errorMessage, "error");
                }
                _context3.next = 37;
                break;
              case 33:
                _context3.prev = 33;
                _context3.t0 = _context3["catch"](23);
                console.error("Error during registration API call:", _context3.t0);
                _this3.showToast("Connection Error", "Unable to connect to server. Please try again.", "error");
              case 37:
                _context3.prev = 37;
                _this3.setLoading(false);
                return _context3.finish(37);
              case 40:
              case "end":
                return _context3.stop();
            }
          }, _callee3, null, [[23, 33, 37, 40]]);
        }));
        return function (_x2) {
          return _ref.apply(this, arguments);
        };
      }());
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(HTMLElement));
customElements.define("register-page", RegisterPage);

/***/ }),

/***/ 314:
/***/ ((module) => {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ 407:
/***/ (() => {

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == _typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var LoginPage = /*#__PURE__*/function (_HTMLElement) {
  function LoginPage() {
    var _this;
    _classCallCheck(this, LoginPage);
    _this = _callSuper(this, LoginPage);
    _defineProperty(_this, "openDrawer", function () {
      var mobileDrawer = _this.querySelector("#mobile-drawer");
      var drawerOverlay = _this.querySelector("#drawer-overlay");
      if (mobileDrawer && drawerOverlay) {
        // Show overlay
        drawerOverlay.classList.remove("hidden");
        // Force reflow before adding transform classes for smooth animation
        drawerOverlay.offsetHeight;

        // Slide in drawer
        mobileDrawer.classList.remove("-translate-x-full");

        // Prevent body scroll when drawer is open
        document.body.style.overflow = "hidden";
        console.log("Drawer opened");
      }
    });
    _defineProperty(_this, "closeDrawer", function () {
      var mobileDrawer = _this.querySelector("#mobile-drawer");
      var drawerOverlay = _this.querySelector("#drawer-overlay");
      if (mobileDrawer && drawerOverlay) {
        // Slide out drawer
        mobileDrawer.classList.add("-translate-x-full");

        // Hide overlay after animation completes
        setTimeout(function () {
          drawerOverlay.classList.add("hidden");
        }, 300); // Match transition duration

        // Restore body scroll
        document.body.style.overflow = "";
        console.log("Drawer closed");
      }
    });
    _this.isLoading = false;
    return _this;
  }
  _inherits(LoginPage, _HTMLElement);
  return _createClass(LoginPage, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      // Check if user is already logged in
      var token = localStorage.getItem("token");
      if (token) {
        // User is already logged in, redirect to home
        window.location.href = "/#/home";
        return;
      }
      this.render();
      this.setupMobileMenuToggle();
      this.setupFormSubmission();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      // Remove mobile menu listeners
      var mobileMenuButton = this.querySelector("#mobile-menu-button");
      if (mobileMenuButton && this._mobileMenuButtonHandler) {
        mobileMenuButton.removeEventListener("click", this._mobileMenuButtonHandler);
        this._mobileMenuButtonHandler = null;
      }

      // Remove drawer overlay listener
      if (this._drawerOverlayHandler) {
        document.removeEventListener("click", this._drawerOverlayHandler);
        this._drawerOverlayHandler = null;
      }
    }
  }, {
    key: "setupMobileMenuToggle",
    value: function setupMobileMenuToggle() {
      var _this2 = this;
      console.log("Setting up mobile drawer toggle...");
      var mobileMenuButton = this.querySelector("#mobile-menu-button");
      var mobileDrawer = this.querySelector("#mobile-drawer");
      var drawerOverlay = this.querySelector("#drawer-overlay");
      var closeDrawerButton = this.querySelector("#close-drawer-button");
      if (mobileMenuButton && mobileDrawer && drawerOverlay) {
        console.log("Mobile drawer elements found. Setting up listeners.");

        // Open drawer
        this._mobileMenuButtonHandler = function (event) {
          console.log("Mobile menu button clicked.");
          _this2.openDrawer();
        };
        mobileMenuButton.addEventListener("click", this._mobileMenuButtonHandler);

        // Close drawer via close button
        if (closeDrawerButton) {
          closeDrawerButton.addEventListener("click", function () {
            _this2.closeDrawer();
          });
        }

        // Close drawer via overlay click
        this._drawerOverlayHandler = function (event) {
          if (event.target === drawerOverlay) {
            _this2.closeDrawer();
          }
        };
        drawerOverlay.addEventListener("click", this._drawerOverlayHandler);

        // Close drawer when clicking navigation links
        var drawerLinks = mobileDrawer.querySelectorAll("a");
        drawerLinks.forEach(function (link) {
          link.addEventListener("click", function () {
            console.log("Drawer link clicked, closing drawer.");
            _this2.closeDrawer();
          });
        });

        // Close drawer on escape key
        document.addEventListener("keydown", function (event) {
          if (event.key === "Escape" && !mobileDrawer.classList.contains("-translate-x-full")) {
            _this2.closeDrawer();
          }
        });
      } else {
        console.error("Mobile drawer elements not found:", {
          mobileMenuButton: mobileMenuButton,
          mobileDrawer: mobileDrawer,
          drawerOverlay: drawerOverlay
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      this.innerHTML = "\n            <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n                .toast-slide-in {\n                    animation: slideIn 0.3s ease-out;\n                }\n                \n                .toast-slide-out {\n                    animation: slideOut 0.3s ease-in;\n                }\n                \n                @keyframes slideIn {\n                    from { transform: translateX(100%); opacity: 0; }\n                    to { transform: translateX(0); opacity: 1; }\n                }\n                \n                @keyframes slideOut {\n                    from { transform: translateX(0); opacity: 1; }\n                    to { transform: translateX(100%); opacity: 0; }\n                }\n            </style>\n            <!-- Fixed Header -->\n        <div class=\"fixed top-0 left-0 right-0 bg-white shadow-sm z-50\">\n            <div class=\"container mx-auto px-4 py-4 flex items-center justify-between\">\n                \n                <!-- Mobile Menu Button (Left) -->\n                <div class=\"flex items-center md:hidden\">\n                    <button id=\"mobile-menu-button\" type=\"button\" class=\"text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-200 p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                        <span class=\"sr-only\">Open main menu</span>\n                        <!-- Hamburger icon -->\n                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                        </svg>\n                    </button>\n                </div>\n\n                <!-- Logo (Center on mobile, Left on desktop) -->\n                <div class=\"flex items-center justify-center md:justify-start flex-1 md:flex-none\">\n                    <div class=\"text-xl font-bold text-gray-800 flex items-center\">\n                        <img src=\"./pinjemin.png\" class=\"mr-2 h-16 inline-block\" alt=\"Pinjemin Logo\">\n                    </div>\n                </div>\n\n                <!-- Desktop Navigation (Hidden on mobile) -->\n                <nav class=\"hidden md:flex items-center space-x-8 flex-1 justify-center\">\n                    <a href=\"/#/\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\">\n                        Beranda\n                    </a>\n                </nav>\n\n                <!-- Right Section: Auth Links -->\n                <div class=\"flex items-center space-x-3\">\n                    <!-- Authentication Links -->\n                    <div class=\"auth-links flex items-center space-x-2\">\n                        <a href=\"/#/login\" class=\"text-sm font-medium text-gray-700 hover:text-blue-600 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all duration-200\">\n                            Sign In\n                        </a>\n                        <a href=\"/#/register\" class=\"text-sm font-medium bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-all duration-200\">\n                            Register\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- Mobile Drawer Overlay -->\n        <div id=\"drawer-overlay\" class=\"fixed inset-0 bg-black bg-opacity-50 z-40 hidden md:hidden transition-opacity duration-300\"></div>\n\n        <!-- Mobile Drawer Menu -->\n        <div id=\"mobile-drawer\" class=\"fixed top-0 left-0 h-full w-80 bg-white shadow-xl z-50 transform -translate-x-full transition-transform duration-300 ease-in-out md:hidden\">\n            <!-- Drawer Header -->\n            <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n                <div class=\"flex items-center space-x-3\">\n                    <img src=\"./pinjemin.png\" class=\"h-8\" alt=\"Pinjemin Logo\">\n                    <span class=\"text-lg font-bold text-gray-800\">Pinjemin</span>\n                </div>\n                <button id=\"close-drawer-button\" class=\"text-gray-400 hover:text-gray-600 focus:outline-none p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                    <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                    </svg>\n                </button>\n            </div>\n\n            <!-- Drawer Content -->\n            <div class=\"flex flex-col h-full overflow-y-auto\">\n                <!-- Auth Links -->\n                <div class=\"drawer-auth-links border-b border-gray-200 p-4\">\n                    <div class=\"space-y-3\">\n                        <a href=\"/#/login\" class=\"flex items-center justify-center w-full py-3 text-blue-600 border border-blue-600 rounded-lg hover:bg-blue-50 transition-colors duration-200 font-medium\">\n                            Sign In\n                        </a>\n                        <a href=\"/#/register\" class=\"flex items-center justify-center w-full py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 font-medium\">\n                            Register\n                        </a>\n                    </div>\n                </div>\n\n                <!-- Navigation Links -->\n                <nav class=\"flex-1 px-4 py-4\">\n                    <ul class=\"space-y-2\">\n                        <li>\n                            <a href=\"/#/\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path>\n                                </svg>\n                                Beranda\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        </div>\n            \n            <div class=\"min-h-screen flex items-center justify-center p-4 py-8 mt-8\">\n                <div class=\"bg-white rounded-2xl shadow-2xl p-8 w-full max-w-md\">\n                    <!-- Logo -->\n                    <div class=\"text-center mb-6\">\n                        <img class=\"mx-auto h-16 w-16 rounded-xl object-cover shadow-lg\" src=\"./pinjemin.png\" alt=\"Pinjemin\">\n                        <h2 class=\"mt-4 text-2xl font-bold text-gray-900\">Welcome Back</h2>\n                        <p class=\"mt-1 text-sm text-gray-600\">Sign in to your account</p>\n                    </div>\n\n                    <!-- Form -->\n                    <form id=\"login-form\" class=\"space-y-4\">\n                        <div>\n                            <label for=\"email\" class=\"block text-sm font-medium text-gray-700 mb-1\">Email Address</label>\n                            <input \n                                id=\"email\" \n                                name=\"email\" \n                                type=\"email\" \n                                autocomplete=\"email\" \n                                required \n                                class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                placeholder=\"Enter your email\"\n                            >\n                        </div>\n\n                        <div>\n                            <label for=\"password\" class=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                            <input \n                                id=\"password\" \n                                name=\"password\" \n                                type=\"password\" \n                                autocomplete=\"current-password\" \n                                required \n                                class=\"w-full px-4 py-2.5 border-2 border-gray-200 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-purple-500 transition-all duration-200 bg-gray-50 focus:bg-white\"\n                                placeholder=\"Enter your password\"\n                            >\n                        </div>\n\n                        <button \n                            type=\"submit\" \n                            id=\"submit-btn\"\n                            class=\"w-full bg-gradient-to-r from-purple-600 to-indigo-600 text-white py-2.5 px-4 rounded-lg font-semibold hover:from-purple-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 transform hover:-translate-y-0.5 transition-all duration-200 disabled:opacity-70 disabled:cursor-not-allowed disabled:transform-none flex items-center justify-center min-h-[44px]\"\n                        >\n                            <span id=\"btn-content\">Sign In</span>\n                        </button>\n                    </form>\n\n                    <!-- Register Link -->\n                    <p class=\"mt-6 text-center text-sm text-gray-600\">\n                        Don't have an account?\n                        <a href=\"/#/register\" class=\"font-semibold text-purple-600 hover:text-purple-500 transition-colors duration-200\">Create one here</a>\n                    </p>\n                </div>\n            </div>\n            \n            <!-- Toast Container -->\n            <div id=\"toast-container\" class=\"fixed top-4 right-4 z-50 space-y-2\"></div>\n        ";
    }
  }, {
    key: "showToast",
    value: function showToast(title, message) {
      var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "success";
      var toastContainer = this.querySelector("#toast-container");
      var toast = document.createElement("div");
      var bgColor = type === "success" ? "bg-green-500" : "bg-red-500";
      var icon = type === "success" ? "✓" : "✕";
      toast.className = "".concat(bgColor, " text-white px-6 py-4 rounded-lg shadow-lg flex items-center min-w-[320px] toast-slide-in");
      toast.innerHTML = "\n            <div class=\"flex-shrink-0 w-6 h-6 flex items-center justify-center bg-white bg-opacity-20 rounded-full mr-3\">\n                <span class=\"text-sm font-bold\">".concat(icon, "</span>\n            </div>\n            <div class=\"flex-1\">\n                <div class=\"font-semibold text-sm\">").concat(title, "</div>\n                <div class=\"text-xs opacity-90 mt-1\">").concat(message, "</div>\n            </div>\n        ");
      toastContainer.appendChild(toast);

      // Auto remove after 4 seconds
      setTimeout(function () {
        toast.classList.remove("toast-slide-in");
        toast.classList.add("toast-slide-out");
        setTimeout(function () {
          if (toast.parentNode) {
            toast.parentNode.removeChild(toast);
          }
        }, 300);
      }, 4000);
    }
  }, {
    key: "setLoading",
    value: function setLoading(loading) {
      this.isLoading = loading;
      var submitBtn = this.querySelector("#submit-btn");
      var btnContent = this.querySelector("#btn-content");
      if (loading) {
        submitBtn.disabled = true;
        btnContent.textContent = "Signing In...";
      } else {
        submitBtn.disabled = false;
        btnContent.textContent = "Sign In";
      }
    }
  }, {
    key: "setupFormSubmission",
    value: function setupFormSubmission() {
      var _this3 = this;
      var form = this.querySelector("#login-form");
      form.addEventListener("submit", /*#__PURE__*/function () {
        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {
          var token, formData, data, response, result, loginEvent;
          return _regeneratorRuntime().wrap(function _callee$(_context) {
            while (1) switch (_context.prev = _context.next) {
              case 0:
                event.preventDefault();

                // Check if user is already logged in
                token = localStorage.getItem("token");
                if (!token) {
                  _context.next = 5;
                  break;
                }
                window.location.href = "/#/home";
                return _context.abrupt("return");
              case 5:
                if (!_this3.isLoading) {
                  _context.next = 7;
                  break;
                }
                return _context.abrupt("return");
              case 7:
                formData = new FormData(form);
                data = Object.fromEntries(formData.entries());
                console.log("Sending login data to API:", data);
                _this3.setLoading(true);
                _context.prev = 11;
                _context.next = 14;
                return fetch("http://localhost:5000/api/auth/login", {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json"
                  },
                  body: JSON.stringify(data)
                });
              case 14:
                response = _context.sent;
                _context.next = 17;
                return response.json();
              case 17:
                result = _context.sent;
                if (response.ok) {
                  if (result.status === "success") {
                    console.log("Login successful:", result);

                    // Store token and user data in localStorage
                    localStorage.setItem("token", result.token);
                    localStorage.setItem("user", JSON.stringify(result.data.user));

                    // Dispatch a custom event to notify other components
                    loginEvent = new CustomEvent("userLoggedIn", {
                      detail: {
                        user: result.data.user
                      }
                    });
                    window.dispatchEvent(loginEvent);

                    // Show success toast
                    _this3.showToast("Login Successful!", "Welcome back! Redirecting to dashboard...", "success");

                    // Redirect after a short delay to show the toast
                    setTimeout(function () {
                      window.location.href = "/#/home";
                    }, 1500);
                  } else {
                    console.error("Login failed (API error):", result.message);
                    _this3.showToast("Login Failed", result.message || "Invalid credentials", "error");
                  }
                } else {
                  console.error("Login failed (HTTP error):", response.status, result.message);
                  _this3.showToast("Login Failed", result.message || "Please check your credentials", "error");
                }
                _context.next = 25;
                break;
              case 21:
                _context.prev = 21;
                _context.t0 = _context["catch"](11);
                console.error("Error during login API call:", _context.t0);
                _this3.showToast("Connection Error", "Unable to connect to server. Please try again.", "error");
              case 25:
                _context.prev = 25;
                _this3.setLoading(false);
                return _context.finish(25);
              case 28:
              case "end":
                return _context.stop();
            }
          }, _callee, null, [[11, 21, 25, 28]]);
        }));
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }());
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(HTMLElement));
customElements.define("login-page", LoginPage);

/***/ }),

/***/ 424:
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   A: () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(601);
/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(314);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `// extracted by mini-css-extract-plugin
export {};`, ""]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ 465:
/***/ (function(module) {

/*!
* sweetalert2 v11.22.0
* Released under the MIT License.
*/
(function (global, factory) {
   true ? module.exports = factory() :
  0;
})(this, (function () { 'use strict';

  function _assertClassBrand(e, t, n) {
    if ("function" == typeof e ? e === t : e.has(t)) return arguments.length < 3 ? t : n;
    throw new TypeError("Private element is not present on this object");
  }
  function _checkPrivateRedeclaration(e, t) {
    if (t.has(e)) throw new TypeError("Cannot initialize the same private elements twice on an object");
  }
  function _classPrivateFieldGet2(s, a) {
    return s.get(_assertClassBrand(s, a));
  }
  function _classPrivateFieldInitSpec(e, t, a) {
    _checkPrivateRedeclaration(e, t), t.set(e, a);
  }
  function _classPrivateFieldSet2(s, a, r) {
    return s.set(_assertClassBrand(s, a), r), r;
  }

  const RESTORE_FOCUS_TIMEOUT = 100;

  /** @type {GlobalState} */
  const globalState = {};
  const focusPreviousActiveElement = () => {
    if (globalState.previousActiveElement instanceof HTMLElement) {
      globalState.previousActiveElement.focus();
      globalState.previousActiveElement = null;
    } else if (document.body) {
      document.body.focus();
    }
  };

  /**
   * Restore previous active (focused) element
   *
   * @param {boolean} returnFocus
   * @returns {Promise<void>}
   */
  const restoreActiveElement = returnFocus => {
    return new Promise(resolve => {
      if (!returnFocus) {
        return resolve();
      }
      const x = window.scrollX;
      const y = window.scrollY;
      globalState.restoreFocusTimeout = setTimeout(() => {
        focusPreviousActiveElement();
        resolve();
      }, RESTORE_FOCUS_TIMEOUT); // issues/900

      window.scrollTo(x, y);
    });
  };

  const swalPrefix = 'swal2-';

  /**
   * @typedef {Record<SwalClass, string>} SwalClasses
   */

  /**
   * @typedef {'success' | 'warning' | 'info' | 'question' | 'error'} SwalIcon
   * @typedef {Record<SwalIcon, string>} SwalIcons
   */

  /** @type {SwalClass[]} */
  const classNames = ['container', 'shown', 'height-auto', 'iosfix', 'popup', 'modal', 'no-backdrop', 'no-transition', 'toast', 'toast-shown', 'show', 'hide', 'close', 'title', 'html-container', 'actions', 'confirm', 'deny', 'cancel', 'footer', 'icon', 'icon-content', 'image', 'input', 'file', 'range', 'select', 'radio', 'checkbox', 'label', 'textarea', 'inputerror', 'input-label', 'validation-message', 'progress-steps', 'active-progress-step', 'progress-step', 'progress-step-line', 'loader', 'loading', 'styled', 'top', 'top-start', 'top-end', 'top-left', 'top-right', 'center', 'center-start', 'center-end', 'center-left', 'center-right', 'bottom', 'bottom-start', 'bottom-end', 'bottom-left', 'bottom-right', 'grow-row', 'grow-column', 'grow-fullscreen', 'rtl', 'timer-progress-bar', 'timer-progress-bar-container', 'scrollbar-measure', 'icon-success', 'icon-warning', 'icon-info', 'icon-question', 'icon-error', 'draggable', 'dragging'];
  const swalClasses = classNames.reduce((acc, className) => {
    acc[className] = swalPrefix + className;
    return acc;
  }, /** @type {SwalClasses} */{});

  /** @type {SwalIcon[]} */
  const icons = ['success', 'warning', 'info', 'question', 'error'];
  const iconTypes = icons.reduce((acc, icon) => {
    acc[icon] = swalPrefix + icon;
    return acc;
  }, /** @type {SwalIcons} */{});

  const consolePrefix = 'SweetAlert2:';

  /**
   * Capitalize the first letter of a string
   *
   * @param {string} str
   * @returns {string}
   */
  const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);

  /**
   * Standardize console warnings
   *
   * @param {string | string[]} message
   */
  const warn = message => {
    console.warn(`${consolePrefix} ${typeof message === 'object' ? message.join(' ') : message}`);
  };

  /**
   * Standardize console errors
   *
   * @param {string} message
   */
  const error = message => {
    console.error(`${consolePrefix} ${message}`);
  };

  /**
   * Private global state for `warnOnce`
   *
   * @type {string[]}
   * @private
   */
  const previousWarnOnceMessages = [];

  /**
   * Show a console warning, but only if it hasn't already been shown
   *
   * @param {string} message
   */
  const warnOnce = message => {
    if (!previousWarnOnceMessages.includes(message)) {
      previousWarnOnceMessages.push(message);
      warn(message);
    }
  };

  /**
   * Show a one-time console warning about deprecated params/methods
   *
   * @param {string} deprecatedParam
   * @param {string?} useInstead
   */
  const warnAboutDeprecation = (deprecatedParam, useInstead = null) => {
    warnOnce(`"${deprecatedParam}" is deprecated and will be removed in the next major release.${useInstead ? ` Use "${useInstead}" instead.` : ''}`);
  };

  /**
   * If `arg` is a function, call it (with no arguments or context) and return the result.
   * Otherwise, just pass the value through
   *
   * @param {Function | any} arg
   * @returns {any}
   */
  const callIfFunction = arg => typeof arg === 'function' ? arg() : arg;

  /**
   * @param {any} arg
   * @returns {boolean}
   */
  const hasToPromiseFn = arg => arg && typeof arg.toPromise === 'function';

  /**
   * @param {any} arg
   * @returns {Promise<any>}
   */
  const asPromise = arg => hasToPromiseFn(arg) ? arg.toPromise() : Promise.resolve(arg);

  /**
   * @param {any} arg
   * @returns {boolean}
   */
  const isPromise = arg => arg && Promise.resolve(arg) === arg;

  /**
   * Gets the popup container which contains the backdrop and the popup itself.
   *
   * @returns {HTMLElement | null}
   */
  const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);

  /**
   * @param {string} selectorString
   * @returns {HTMLElement | null}
   */
  const elementBySelector = selectorString => {
    const container = getContainer();
    return container ? container.querySelector(selectorString) : null;
  };

  /**
   * @param {string} className
   * @returns {HTMLElement | null}
   */
  const elementByClass = className => {
    return elementBySelector(`.${className}`);
  };

  /**
   * @returns {HTMLElement | null}
   */
  const getPopup = () => elementByClass(swalClasses.popup);

  /**
   * @returns {HTMLElement | null}
   */
  const getIcon = () => elementByClass(swalClasses.icon);

  /**
   * @returns {HTMLElement | null}
   */
  const getIconContent = () => elementByClass(swalClasses['icon-content']);

  /**
   * @returns {HTMLElement | null}
   */
  const getTitle = () => elementByClass(swalClasses.title);

  /**
   * @returns {HTMLElement | null}
   */
  const getHtmlContainer = () => elementByClass(swalClasses['html-container']);

  /**
   * @returns {HTMLElement | null}
   */
  const getImage = () => elementByClass(swalClasses.image);

  /**
   * @returns {HTMLElement | null}
   */
  const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);

  /**
   * @returns {HTMLElement | null}
   */
  const getValidationMessage = () => elementByClass(swalClasses['validation-message']);

  /**
   * @returns {HTMLButtonElement | null}
   */
  const getConfirmButton = () => (/** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`));

  /**
   * @returns {HTMLButtonElement | null}
   */
  const getCancelButton = () => (/** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`));

  /**
   * @returns {HTMLButtonElement | null}
   */
  const getDenyButton = () => (/** @type {HTMLButtonElement} */elementBySelector(`.${swalClasses.actions} .${swalClasses.deny}`));

  /**
   * @returns {HTMLElement | null}
   */
  const getInputLabel = () => elementByClass(swalClasses['input-label']);

  /**
   * @returns {HTMLElement | null}
   */
  const getLoader = () => elementBySelector(`.${swalClasses.loader}`);

  /**
   * @returns {HTMLElement | null}
   */
  const getActions = () => elementByClass(swalClasses.actions);

  /**
   * @returns {HTMLElement | null}
   */
  const getFooter = () => elementByClass(swalClasses.footer);

  /**
   * @returns {HTMLElement | null}
   */
  const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);

  /**
   * @returns {HTMLElement | null}
   */
  const getCloseButton = () => elementByClass(swalClasses.close);

  // https://github.com/jkup/focusable/blob/master/index.js
  const focusable = `
  a[href],
  area[href],
  input:not([disabled]),
  select:not([disabled]),
  textarea:not([disabled]),
  button:not([disabled]),
  iframe,
  object,
  embed,
  [tabindex="0"],
  [contenteditable],
  audio[controls],
  video[controls],
  summary
`;
  /**
   * @returns {HTMLElement[]}
   */
  const getFocusableElements = () => {
    const popup = getPopup();
    if (!popup) {
      return [];
    }
    /** @type {NodeListOf<HTMLElement>} */
    const focusableElementsWithTabindex = popup.querySelectorAll('[tabindex]:not([tabindex="-1"]):not([tabindex="0"])');
    const focusableElementsWithTabindexSorted = Array.from(focusableElementsWithTabindex)
    // sort according to tabindex
    .sort((a, b) => {
      const tabindexA = parseInt(a.getAttribute('tabindex') || '0');
      const tabindexB = parseInt(b.getAttribute('tabindex') || '0');
      if (tabindexA > tabindexB) {
        return 1;
      } else if (tabindexA < tabindexB) {
        return -1;
      }
      return 0;
    });

    /** @type {NodeListOf<HTMLElement>} */
    const otherFocusableElements = popup.querySelectorAll(focusable);
    const otherFocusableElementsFiltered = Array.from(otherFocusableElements).filter(el => el.getAttribute('tabindex') !== '-1');
    return [...new Set(focusableElementsWithTabindexSorted.concat(otherFocusableElementsFiltered))].filter(el => isVisible$1(el));
  };

  /**
   * @returns {boolean}
   */
  const isModal = () => {
    return hasClass(document.body, swalClasses.shown) && !hasClass(document.body, swalClasses['toast-shown']) && !hasClass(document.body, swalClasses['no-backdrop']);
  };

  /**
   * @returns {boolean}
   */
  const isToast = () => {
    const popup = getPopup();
    if (!popup) {
      return false;
    }
    return hasClass(popup, swalClasses.toast);
  };

  /**
   * @returns {boolean}
   */
  const isLoading = () => {
    const popup = getPopup();
    if (!popup) {
      return false;
    }
    return popup.hasAttribute('data-loading');
  };

  /**
   * Securely set innerHTML of an element
   * https://github.com/sweetalert2/sweetalert2/issues/1926
   *
   * @param {HTMLElement} elem
   * @param {string} html
   */
  const setInnerHtml = (elem, html) => {
    elem.textContent = '';
    if (html) {
      const parser = new DOMParser();
      const parsed = parser.parseFromString(html, `text/html`);
      const head = parsed.querySelector('head');
      if (head) {
        Array.from(head.childNodes).forEach(child => {
          elem.appendChild(child);
        });
      }
      const body = parsed.querySelector('body');
      if (body) {
        Array.from(body.childNodes).forEach(child => {
          if (child instanceof HTMLVideoElement || child instanceof HTMLAudioElement) {
            elem.appendChild(child.cloneNode(true)); // https://github.com/sweetalert2/sweetalert2/issues/2507
          } else {
            elem.appendChild(child);
          }
        });
      }
    }
  };

  /**
   * @param {HTMLElement} elem
   * @param {string} className
   * @returns {boolean}
   */
  const hasClass = (elem, className) => {
    if (!className) {
      return false;
    }
    const classList = className.split(/\s+/);
    for (let i = 0; i < classList.length; i++) {
      if (!elem.classList.contains(classList[i])) {
        return false;
      }
    }
    return true;
  };

  /**
   * @param {HTMLElement} elem
   * @param {SweetAlertOptions} params
   */
  const removeCustomClasses = (elem, params) => {
    Array.from(elem.classList).forEach(className => {
      if (!Object.values(swalClasses).includes(className) && !Object.values(iconTypes).includes(className) && !Object.values(params.showClass || {}).includes(className)) {
        elem.classList.remove(className);
      }
    });
  };

  /**
   * @param {HTMLElement} elem
   * @param {SweetAlertOptions} params
   * @param {string} className
   */
  const applyCustomClass = (elem, params, className) => {
    removeCustomClasses(elem, params);
    if (!params.customClass) {
      return;
    }
    const customClass = params.customClass[(/** @type {keyof SweetAlertCustomClass} */className)];
    if (!customClass) {
      return;
    }
    if (typeof customClass !== 'string' && !customClass.forEach) {
      warn(`Invalid type of customClass.${className}! Expected string or iterable object, got "${typeof customClass}"`);
      return;
    }
    addClass(elem, customClass);
  };

  /**
   * @param {HTMLElement} popup
   * @param {import('./renderers/renderInput').InputClass | SweetAlertInput} inputClass
   * @returns {HTMLInputElement | null}
   */
  const getInput$1 = (popup, inputClass) => {
    if (!inputClass) {
      return null;
    }
    switch (inputClass) {
      case 'select':
      case 'textarea':
      case 'file':
        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses[inputClass]}`);
      case 'checkbox':
        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.checkbox} input`);
      case 'radio':
        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:checked`) || popup.querySelector(`.${swalClasses.popup} > .${swalClasses.radio} input:first-child`);
      case 'range':
        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.range} input`);
      default:
        return popup.querySelector(`.${swalClasses.popup} > .${swalClasses.input}`);
    }
  };

  /**
   * @param {HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement} input
   */
  const focusInput = input => {
    input.focus();

    // place cursor at end of text in text input
    if (input.type !== 'file') {
      // http://stackoverflow.com/a/2345915
      const val = input.value;
      input.value = '';
      input.value = val;
    }
  };

  /**
   * @param {HTMLElement | HTMLElement[] | null} target
   * @param {string | string[] | readonly string[] | undefined} classList
   * @param {boolean} condition
   */
  const toggleClass = (target, classList, condition) => {
    if (!target || !classList) {
      return;
    }
    if (typeof classList === 'string') {
      classList = classList.split(/\s+/).filter(Boolean);
    }
    classList.forEach(className => {
      if (Array.isArray(target)) {
        target.forEach(elem => {
          if (condition) {
            elem.classList.add(className);
          } else {
            elem.classList.remove(className);
          }
        });
      } else {
        if (condition) {
          target.classList.add(className);
        } else {
          target.classList.remove(className);
        }
      }
    });
  };

  /**
   * @param {HTMLElement | HTMLElement[] | null} target
   * @param {string | string[] | readonly string[] | undefined} classList
   */
  const addClass = (target, classList) => {
    toggleClass(target, classList, true);
  };

  /**
   * @param {HTMLElement | HTMLElement[] | null} target
   * @param {string | string[] | readonly string[] | undefined} classList
   */
  const removeClass = (target, classList) => {
    toggleClass(target, classList, false);
  };

  /**
   * Get direct child of an element by class name
   *
   * @param {HTMLElement} elem
   * @param {string} className
   * @returns {HTMLElement | undefined}
   */
  const getDirectChildByClass = (elem, className) => {
    const children = Array.from(elem.children);
    for (let i = 0; i < children.length; i++) {
      const child = children[i];
      if (child instanceof HTMLElement && hasClass(child, className)) {
        return child;
      }
    }
  };

  /**
   * @param {HTMLElement} elem
   * @param {string} property
   * @param {*} value
   */
  const applyNumericalStyle = (elem, property, value) => {
    if (value === `${parseInt(value)}`) {
      value = parseInt(value);
    }
    if (value || parseInt(value) === 0) {
      elem.style.setProperty(property, typeof value === 'number' ? `${value}px` : value);
    } else {
      elem.style.removeProperty(property);
    }
  };

  /**
   * @param {HTMLElement | null} elem
   * @param {string} display
   */
  const show = (elem, display = 'flex') => {
    if (!elem) {
      return;
    }
    elem.style.display = display;
  };

  /**
   * @param {HTMLElement | null} elem
   */
  const hide = elem => {
    if (!elem) {
      return;
    }
    elem.style.display = 'none';
  };

  /**
   * @param {HTMLElement | null} elem
   * @param {string} display
   */
  const showWhenInnerHtmlPresent = (elem, display = 'block') => {
    if (!elem) {
      return;
    }
    new MutationObserver(() => {
      toggle(elem, elem.innerHTML, display);
    }).observe(elem, {
      childList: true,
      subtree: true
    });
  };

  /**
   * @param {HTMLElement} parent
   * @param {string} selector
   * @param {string} property
   * @param {string} value
   */
  const setStyle = (parent, selector, property, value) => {
    /** @type {HTMLElement | null} */
    const el = parent.querySelector(selector);
    if (el) {
      el.style.setProperty(property, value);
    }
  };

  /**
   * @param {HTMLElement} elem
   * @param {any} condition
   * @param {string} display
   */
  const toggle = (elem, condition, display = 'flex') => {
    if (condition) {
      show(elem, display);
    } else {
      hide(elem);
    }
  };

  /**
   * borrowed from jquery $(elem).is(':visible') implementation
   *
   * @param {HTMLElement | null} elem
   * @returns {boolean}
   */
  const isVisible$1 = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));

  /**
   * @returns {boolean}
   */
  const allButtonsAreHidden = () => !isVisible$1(getConfirmButton()) && !isVisible$1(getDenyButton()) && !isVisible$1(getCancelButton());

  /**
   * @param {HTMLElement} elem
   * @returns {boolean}
   */
  const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight);

  /**
   * @param {HTMLElement} element
   * @param {HTMLElement} stopElement
   * @returns {boolean}
   */
  const selfOrParentIsScrollable = (element, stopElement) => {
    let parent = element;
    while (parent && parent !== stopElement) {
      if (isScrollable(parent)) {
        return true;
      }
      parent = parent.parentElement;
    }
    return false;
  };

  /**
   * borrowed from https://stackoverflow.com/a/46352119
   *
   * @param {HTMLElement} elem
   * @returns {boolean}
   */
  const hasCssAnimation = elem => {
    const style = window.getComputedStyle(elem);
    const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');
    const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');
    return animDuration > 0 || transDuration > 0;
  };

  /**
   * @param {number} timer
   * @param {boolean} reset
   */
  const animateTimerProgressBar = (timer, reset = false) => {
    const timerProgressBar = getTimerProgressBar();
    if (!timerProgressBar) {
      return;
    }
    if (isVisible$1(timerProgressBar)) {
      if (reset) {
        timerProgressBar.style.transition = 'none';
        timerProgressBar.style.width = '100%';
      }
      setTimeout(() => {
        timerProgressBar.style.transition = `width ${timer / 1000}s linear`;
        timerProgressBar.style.width = '0%';
      }, 10);
    }
  };
  const stopTimerProgressBar = () => {
    const timerProgressBar = getTimerProgressBar();
    if (!timerProgressBar) {
      return;
    }
    const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
    timerProgressBar.style.removeProperty('transition');
    timerProgressBar.style.width = '100%';
    const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);
    const timerProgressBarPercent = timerProgressBarWidth / timerProgressBarFullWidth * 100;
    timerProgressBar.style.width = `${timerProgressBarPercent}%`;
  };

  /**
   * Detect Node env
   *
   * @returns {boolean}
   */
  const isNodeEnv = () => typeof window === 'undefined' || typeof document === 'undefined';

  const sweetHTML = `
 <div aria-labelledby="${swalClasses.title}" aria-describedby="${swalClasses['html-container']}" class="${swalClasses.popup}" tabindex="-1">
   <button type="button" class="${swalClasses.close}"></button>
   <ul class="${swalClasses['progress-steps']}"></ul>
   <div class="${swalClasses.icon}"></div>
   <img class="${swalClasses.image}" />
   <h2 class="${swalClasses.title}" id="${swalClasses.title}"></h2>
   <div class="${swalClasses['html-container']}" id="${swalClasses['html-container']}"></div>
   <input class="${swalClasses.input}" id="${swalClasses.input}" />
   <input type="file" class="${swalClasses.file}" />
   <div class="${swalClasses.range}">
     <input type="range" />
     <output></output>
   </div>
   <select class="${swalClasses.select}" id="${swalClasses.select}"></select>
   <div class="${swalClasses.radio}"></div>
   <label class="${swalClasses.checkbox}">
     <input type="checkbox" id="${swalClasses.checkbox}" />
     <span class="${swalClasses.label}"></span>
   </label>
   <textarea class="${swalClasses.textarea}" id="${swalClasses.textarea}"></textarea>
   <div class="${swalClasses['validation-message']}" id="${swalClasses['validation-message']}"></div>
   <div class="${swalClasses.actions}">
     <div class="${swalClasses.loader}"></div>
     <button type="button" class="${swalClasses.confirm}"></button>
     <button type="button" class="${swalClasses.deny}"></button>
     <button type="button" class="${swalClasses.cancel}"></button>
   </div>
   <div class="${swalClasses.footer}"></div>
   <div class="${swalClasses['timer-progress-bar-container']}">
     <div class="${swalClasses['timer-progress-bar']}"></div>
   </div>
 </div>
`.replace(/(^|\n)\s*/g, '');

  /**
   * @returns {boolean}
   */
  const resetOldContainer = () => {
    const oldContainer = getContainer();
    if (!oldContainer) {
      return false;
    }
    oldContainer.remove();
    removeClass([document.documentElement, document.body], [swalClasses['no-backdrop'], swalClasses['toast-shown'], swalClasses['has-column']]);
    return true;
  };
  const resetValidationMessage$1 = () => {
    globalState.currentInstance.resetValidationMessage();
  };
  const addInputChangeListeners = () => {
    const popup = getPopup();
    const input = getDirectChildByClass(popup, swalClasses.input);
    const file = getDirectChildByClass(popup, swalClasses.file);
    /** @type {HTMLInputElement} */
    const range = popup.querySelector(`.${swalClasses.range} input`);
    /** @type {HTMLOutputElement} */
    const rangeOutput = popup.querySelector(`.${swalClasses.range} output`);
    const select = getDirectChildByClass(popup, swalClasses.select);
    /** @type {HTMLInputElement} */
    const checkbox = popup.querySelector(`.${swalClasses.checkbox} input`);
    const textarea = getDirectChildByClass(popup, swalClasses.textarea);
    input.oninput = resetValidationMessage$1;
    file.onchange = resetValidationMessage$1;
    select.onchange = resetValidationMessage$1;
    checkbox.onchange = resetValidationMessage$1;
    textarea.oninput = resetValidationMessage$1;
    range.oninput = () => {
      resetValidationMessage$1();
      rangeOutput.value = range.value;
    };
    range.onchange = () => {
      resetValidationMessage$1();
      rangeOutput.value = range.value;
    };
  };

  /**
   * @param {string | HTMLElement} target
   * @returns {HTMLElement}
   */
  const getTarget = target => typeof target === 'string' ? document.querySelector(target) : target;

  /**
   * @param {SweetAlertOptions} params
   */
  const setupAccessibility = params => {
    const popup = getPopup();
    popup.setAttribute('role', params.toast ? 'alert' : 'dialog');
    popup.setAttribute('aria-live', params.toast ? 'polite' : 'assertive');
    if (!params.toast) {
      popup.setAttribute('aria-modal', 'true');
    }
  };

  /**
   * @param {HTMLElement} targetElement
   */
  const setupRTL = targetElement => {
    if (window.getComputedStyle(targetElement).direction === 'rtl') {
      addClass(getContainer(), swalClasses.rtl);
    }
  };

  /**
   * Add modal + backdrop + no-war message for Russians to DOM
   *
   * @param {SweetAlertOptions} params
   */
  const init = params => {
    // Clean up the old popup container if it exists
    const oldContainerExisted = resetOldContainer();
    if (isNodeEnv()) {
      error('SweetAlert2 requires document to initialize');
      return;
    }
    const container = document.createElement('div');
    container.className = swalClasses.container;
    if (oldContainerExisted) {
      addClass(container, swalClasses['no-transition']);
    }
    setInnerHtml(container, sweetHTML);
    container.dataset['swal2Theme'] = params.theme;
    const targetElement = getTarget(params.target);
    targetElement.appendChild(container);
    if (params.topLayer) {
      container.setAttribute('popover', '');
      container.showPopover();
    }
    setupAccessibility(params);
    setupRTL(targetElement);
    addInputChangeListeners();
  };

  /**
   * @param {HTMLElement | object | string} param
   * @param {HTMLElement} target
   */
  const parseHtmlToContainer = (param, target) => {
    // DOM element
    if (param instanceof HTMLElement) {
      target.appendChild(param);
    }

    // Object
    else if (typeof param === 'object') {
      handleObject(param, target);
    }

    // Plain string
    else if (param) {
      setInnerHtml(target, param);
    }
  };

  /**
   * @param {any} param
   * @param {HTMLElement} target
   */
  const handleObject = (param, target) => {
    // JQuery element(s)
    if (param.jquery) {
      handleJqueryElem(target, param);
    }

    // For other objects use their string representation
    else {
      setInnerHtml(target, param.toString());
    }
  };

  /**
   * @param {HTMLElement} target
   * @param {any} elem
   */
  const handleJqueryElem = (target, elem) => {
    target.textContent = '';
    if (0 in elem) {
      for (let i = 0; i in elem; i++) {
        target.appendChild(elem[i].cloneNode(true));
      }
    } else {
      target.appendChild(elem.cloneNode(true));
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderActions = (instance, params) => {
    const actions = getActions();
    const loader = getLoader();
    if (!actions || !loader) {
      return;
    }

    // Actions (buttons) wrapper
    if (!params.showConfirmButton && !params.showDenyButton && !params.showCancelButton) {
      hide(actions);
    } else {
      show(actions);
    }

    // Custom class
    applyCustomClass(actions, params, 'actions');

    // Render all the buttons
    renderButtons(actions, loader, params);

    // Loader
    setInnerHtml(loader, params.loaderHtml || '');
    applyCustomClass(loader, params, 'loader');
  };

  /**
   * @param {HTMLElement} actions
   * @param {HTMLElement} loader
   * @param {SweetAlertOptions} params
   */
  function renderButtons(actions, loader, params) {
    const confirmButton = getConfirmButton();
    const denyButton = getDenyButton();
    const cancelButton = getCancelButton();
    if (!confirmButton || !denyButton || !cancelButton) {
      return;
    }

    // Render buttons
    renderButton(confirmButton, 'confirm', params);
    renderButton(denyButton, 'deny', params);
    renderButton(cancelButton, 'cancel', params);
    handleButtonsStyling(confirmButton, denyButton, cancelButton, params);
    if (params.reverseButtons) {
      if (params.toast) {
        actions.insertBefore(cancelButton, confirmButton);
        actions.insertBefore(denyButton, confirmButton);
      } else {
        actions.insertBefore(cancelButton, loader);
        actions.insertBefore(denyButton, loader);
        actions.insertBefore(confirmButton, loader);
      }
    }
  }

  /**
   * @param {HTMLElement} confirmButton
   * @param {HTMLElement} denyButton
   * @param {HTMLElement} cancelButton
   * @param {SweetAlertOptions} params
   */
  function handleButtonsStyling(confirmButton, denyButton, cancelButton, params) {
    if (!params.buttonsStyling) {
      removeClass([confirmButton, denyButton, cancelButton], swalClasses.styled);
      return;
    }
    addClass([confirmButton, denyButton, cancelButton], swalClasses.styled);

    // Apply custom background colors to action buttons
    if (params.confirmButtonColor) {
      confirmButton.style.setProperty('--swal2-confirm-button-background-color', params.confirmButtonColor);
    }
    if (params.denyButtonColor) {
      denyButton.style.setProperty('--swal2-deny-button-background-color', params.denyButtonColor);
    }
    if (params.cancelButtonColor) {
      cancelButton.style.setProperty('--swal2-cancel-button-background-color', params.cancelButtonColor);
    }

    // Apply the outline color to action buttons
    applyOutlineColor(confirmButton);
    applyOutlineColor(denyButton);
    applyOutlineColor(cancelButton);
  }

  /**
   * @param {HTMLElement} button
   */
  function applyOutlineColor(button) {
    const buttonStyle = window.getComputedStyle(button);
    if (buttonStyle.getPropertyValue('--swal2-action-button-focus-box-shadow')) {
      // If the button already has a custom outline color, no need to change it
      return;
    }
    const outlineColor = buttonStyle.backgroundColor.replace(/rgba?\((\d+), (\d+), (\d+).*/, 'rgba($1, $2, $3, 0.5)');
    button.style.setProperty('--swal2-action-button-focus-box-shadow', buttonStyle.getPropertyValue('--swal2-outline').replace(/ rgba\(.*/, ` ${outlineColor}`));
  }

  /**
   * @param {HTMLElement} button
   * @param {'confirm' | 'deny' | 'cancel'} buttonType
   * @param {SweetAlertOptions} params
   */
  function renderButton(button, buttonType, params) {
    const buttonName = /** @type {'Confirm' | 'Deny' | 'Cancel'} */capitalizeFirstLetter(buttonType);
    toggle(button, params[`show${buttonName}Button`], 'inline-block');
    setInnerHtml(button, params[`${buttonType}ButtonText`] || ''); // Set caption text
    button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`] || ''); // ARIA label

    // Add buttons custom classes
    button.className = swalClasses[buttonType];
    applyCustomClass(button, params, `${buttonType}Button`);
  }

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderCloseButton = (instance, params) => {
    const closeButton = getCloseButton();
    if (!closeButton) {
      return;
    }
    setInnerHtml(closeButton, params.closeButtonHtml || '');

    // Custom class
    applyCustomClass(closeButton, params, 'closeButton');
    toggle(closeButton, params.showCloseButton);
    closeButton.setAttribute('aria-label', params.closeButtonAriaLabel || '');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderContainer = (instance, params) => {
    const container = getContainer();
    if (!container) {
      return;
    }
    handleBackdropParam(container, params.backdrop);
    handlePositionParam(container, params.position);
    handleGrowParam(container, params.grow);

    // Custom class
    applyCustomClass(container, params, 'container');
  };

  /**
   * @param {HTMLElement} container
   * @param {SweetAlertOptions['backdrop']} backdrop
   */
  function handleBackdropParam(container, backdrop) {
    if (typeof backdrop === 'string') {
      container.style.background = backdrop;
    } else if (!backdrop) {
      addClass([document.documentElement, document.body], swalClasses['no-backdrop']);
    }
  }

  /**
   * @param {HTMLElement} container
   * @param {SweetAlertOptions['position']} position
   */
  function handlePositionParam(container, position) {
    if (!position) {
      return;
    }
    if (position in swalClasses) {
      addClass(container, swalClasses[position]);
    } else {
      warn('The "position" parameter is not valid, defaulting to "center"');
      addClass(container, swalClasses.center);
    }
  }

  /**
   * @param {HTMLElement} container
   * @param {SweetAlertOptions['grow']} grow
   */
  function handleGrowParam(container, grow) {
    if (!grow) {
      return;
    }
    addClass(container, swalClasses[`grow-${grow}`]);
  }

  /**
   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */

  var privateProps = {
    innerParams: new WeakMap(),
    domCache: new WeakMap()
  };

  /// <reference path="../../../../sweetalert2.d.ts"/>


  /** @type {InputClass[]} */
  const inputClasses = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderInput = (instance, params) => {
    const popup = getPopup();
    if (!popup) {
      return;
    }
    const innerParams = privateProps.innerParams.get(instance);
    const rerender = !innerParams || params.input !== innerParams.input;
    inputClasses.forEach(inputClass => {
      const inputContainer = getDirectChildByClass(popup, swalClasses[inputClass]);
      if (!inputContainer) {
        return;
      }

      // set attributes
      setAttributes(inputClass, params.inputAttributes);

      // set class
      inputContainer.className = swalClasses[inputClass];
      if (rerender) {
        hide(inputContainer);
      }
    });
    if (params.input) {
      if (rerender) {
        showInput(params);
      }
      // set custom class
      setCustomClass(params);
    }
  };

  /**
   * @param {SweetAlertOptions} params
   */
  const showInput = params => {
    if (!params.input) {
      return;
    }
    if (!renderInputType[params.input]) {
      error(`Unexpected type of input! Expected ${Object.keys(renderInputType).join(' | ')}, got "${params.input}"`);
      return;
    }
    const inputContainer = getInputContainer(params.input);
    if (!inputContainer) {
      return;
    }
    const input = renderInputType[params.input](inputContainer, params);
    show(inputContainer);

    // input autofocus
    if (params.inputAutoFocus) {
      setTimeout(() => {
        focusInput(input);
      });
    }
  };

  /**
   * @param {HTMLInputElement} input
   */
  const removeAttributes = input => {
    for (let i = 0; i < input.attributes.length; i++) {
      const attrName = input.attributes[i].name;
      if (!['id', 'type', 'value', 'style'].includes(attrName)) {
        input.removeAttribute(attrName);
      }
    }
  };

  /**
   * @param {InputClass} inputClass
   * @param {SweetAlertOptions['inputAttributes']} inputAttributes
   */
  const setAttributes = (inputClass, inputAttributes) => {
    const popup = getPopup();
    if (!popup) {
      return;
    }
    const input = getInput$1(popup, inputClass);
    if (!input) {
      return;
    }
    removeAttributes(input);
    for (const attr in inputAttributes) {
      input.setAttribute(attr, inputAttributes[attr]);
    }
  };

  /**
   * @param {SweetAlertOptions} params
   */
  const setCustomClass = params => {
    if (!params.input) {
      return;
    }
    const inputContainer = getInputContainer(params.input);
    if (inputContainer) {
      applyCustomClass(inputContainer, params, 'input');
    }
  };

  /**
   * @param {HTMLInputElement | HTMLTextAreaElement} input
   * @param {SweetAlertOptions} params
   */
  const setInputPlaceholder = (input, params) => {
    if (!input.placeholder && params.inputPlaceholder) {
      input.placeholder = params.inputPlaceholder;
    }
  };

  /**
   * @param {Input} input
   * @param {Input} prependTo
   * @param {SweetAlertOptions} params
   */
  const setInputLabel = (input, prependTo, params) => {
    if (params.inputLabel) {
      const label = document.createElement('label');
      const labelClass = swalClasses['input-label'];
      label.setAttribute('for', input.id);
      label.className = labelClass;
      if (typeof params.customClass === 'object') {
        addClass(label, params.customClass.inputLabel);
      }
      label.innerText = params.inputLabel;
      prependTo.insertAdjacentElement('beforebegin', label);
    }
  };

  /**
   * @param {SweetAlertInput} inputType
   * @returns {HTMLElement | undefined}
   */
  const getInputContainer = inputType => {
    const popup = getPopup();
    if (!popup) {
      return;
    }
    return getDirectChildByClass(popup, swalClasses[(/** @type {SwalClass} */inputType)] || swalClasses.input);
  };

  /**
   * @param {HTMLInputElement | HTMLOutputElement | HTMLTextAreaElement} input
   * @param {SweetAlertOptions['inputValue']} inputValue
   */
  const checkAndSetInputValue = (input, inputValue) => {
    if (['string', 'number'].includes(typeof inputValue)) {
      input.value = `${inputValue}`;
    } else if (!isPromise(inputValue)) {
      warn(`Unexpected type of inputValue! Expected "string", "number" or "Promise", got "${typeof inputValue}"`);
    }
  };

  /** @type {Record<SweetAlertInput, (input: Input | HTMLElement, params: SweetAlertOptions) => Input>} */
  const renderInputType = {};

  /**
   * @param {HTMLInputElement} input
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = renderInputType.search = renderInputType.date = renderInputType['datetime-local'] = renderInputType.time = renderInputType.week = renderInputType.month = /** @type {(input: Input | HTMLElement, params: SweetAlertOptions) => Input} */
  (input, params) => {
    checkAndSetInputValue(input, params.inputValue);
    setInputLabel(input, input, params);
    setInputPlaceholder(input, params);
    input.type = params.input;
    return input;
  };

  /**
   * @param {HTMLInputElement} input
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.file = (input, params) => {
    setInputLabel(input, input, params);
    setInputPlaceholder(input, params);
    return input;
  };

  /**
   * @param {HTMLInputElement} range
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.range = (range, params) => {
    const rangeInput = range.querySelector('input');
    const rangeOutput = range.querySelector('output');
    checkAndSetInputValue(rangeInput, params.inputValue);
    rangeInput.type = params.input;
    checkAndSetInputValue(rangeOutput, params.inputValue);
    setInputLabel(rangeInput, range, params);
    return range;
  };

  /**
   * @param {HTMLSelectElement} select
   * @param {SweetAlertOptions} params
   * @returns {HTMLSelectElement}
   */
  renderInputType.select = (select, params) => {
    select.textContent = '';
    if (params.inputPlaceholder) {
      const placeholder = document.createElement('option');
      setInnerHtml(placeholder, params.inputPlaceholder);
      placeholder.value = '';
      placeholder.disabled = true;
      placeholder.selected = true;
      select.appendChild(placeholder);
    }
    setInputLabel(select, select, params);
    return select;
  };

  /**
   * @param {HTMLInputElement} radio
   * @returns {HTMLInputElement}
   */
  renderInputType.radio = radio => {
    radio.textContent = '';
    return radio;
  };

  /**
   * @param {HTMLLabelElement} checkboxContainer
   * @param {SweetAlertOptions} params
   * @returns {HTMLInputElement}
   */
  renderInputType.checkbox = (checkboxContainer, params) => {
    const checkbox = getInput$1(getPopup(), 'checkbox');
    checkbox.value = '1';
    checkbox.checked = Boolean(params.inputValue);
    const label = checkboxContainer.querySelector('span');
    setInnerHtml(label, params.inputPlaceholder || params.inputLabel);
    return checkbox;
  };

  /**
   * @param {HTMLTextAreaElement} textarea
   * @param {SweetAlertOptions} params
   * @returns {HTMLTextAreaElement}
   */
  renderInputType.textarea = (textarea, params) => {
    checkAndSetInputValue(textarea, params.inputValue);
    setInputPlaceholder(textarea, params);
    setInputLabel(textarea, textarea, params);

    /**
     * @param {HTMLElement} el
     * @returns {number}
     */
    const getMargin = el => parseInt(window.getComputedStyle(el).marginLeft) + parseInt(window.getComputedStyle(el).marginRight);

    // https://github.com/sweetalert2/sweetalert2/issues/2291
    setTimeout(() => {
      // https://github.com/sweetalert2/sweetalert2/issues/1699
      if ('MutationObserver' in window) {
        const initialPopupWidth = parseInt(window.getComputedStyle(getPopup()).width);
        const textareaResizeHandler = () => {
          // check if texarea is still in document (i.e. popup wasn't closed in the meantime)
          if (!document.body.contains(textarea)) {
            return;
          }
          const textareaWidth = textarea.offsetWidth + getMargin(textarea);
          if (textareaWidth > initialPopupWidth) {
            getPopup().style.width = `${textareaWidth}px`;
          } else {
            applyNumericalStyle(getPopup(), 'width', params.width);
          }
        };
        new MutationObserver(textareaResizeHandler).observe(textarea, {
          attributes: true,
          attributeFilter: ['style']
        });
      }
    });
    return textarea;
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderContent = (instance, params) => {
    const htmlContainer = getHtmlContainer();
    if (!htmlContainer) {
      return;
    }
    showWhenInnerHtmlPresent(htmlContainer);
    applyCustomClass(htmlContainer, params, 'htmlContainer');

    // Content as HTML
    if (params.html) {
      parseHtmlToContainer(params.html, htmlContainer);
      show(htmlContainer, 'block');
    }

    // Content as plain text
    else if (params.text) {
      htmlContainer.textContent = params.text;
      show(htmlContainer, 'block');
    }

    // No content
    else {
      hide(htmlContainer);
    }
    renderInput(instance, params);
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderFooter = (instance, params) => {
    const footer = getFooter();
    if (!footer) {
      return;
    }
    showWhenInnerHtmlPresent(footer);
    toggle(footer, params.footer, 'block');
    if (params.footer) {
      parseHtmlToContainer(params.footer, footer);
    }

    // Custom class
    applyCustomClass(footer, params, 'footer');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderIcon = (instance, params) => {
    const innerParams = privateProps.innerParams.get(instance);
    const icon = getIcon();
    if (!icon) {
      return;
    }

    // if the given icon already rendered, apply the styling without re-rendering the icon
    if (innerParams && params.icon === innerParams.icon) {
      // Custom or default content
      setContent(icon, params);
      applyStyles(icon, params);
      return;
    }
    if (!params.icon && !params.iconHtml) {
      hide(icon);
      return;
    }
    if (params.icon && Object.keys(iconTypes).indexOf(params.icon) === -1) {
      error(`Unknown icon! Expected "success", "error", "warning", "info" or "question", got "${params.icon}"`);
      hide(icon);
      return;
    }
    show(icon);

    // Custom or default content
    setContent(icon, params);
    applyStyles(icon, params);

    // Animate icon
    addClass(icon, params.showClass && params.showClass.icon);

    // Re-adjust the success icon on system theme change
    const colorSchemeQueryList = window.matchMedia('(prefers-color-scheme: dark)');
    colorSchemeQueryList.addEventListener('change', adjustSuccessIconBackgroundColor);
  };

  /**
   * @param {HTMLElement} icon
   * @param {SweetAlertOptions} params
   */
  const applyStyles = (icon, params) => {
    for (const [iconType, iconClassName] of Object.entries(iconTypes)) {
      if (params.icon !== iconType) {
        removeClass(icon, iconClassName);
      }
    }
    addClass(icon, params.icon && iconTypes[params.icon]);

    // Icon color
    setColor(icon, params);

    // Success icon background color
    adjustSuccessIconBackgroundColor();

    // Custom class
    applyCustomClass(icon, params, 'icon');
  };

  // Adjust success icon background color to match the popup background color
  const adjustSuccessIconBackgroundColor = () => {
    const popup = getPopup();
    if (!popup) {
      return;
    }
    const popupBackgroundColor = window.getComputedStyle(popup).getPropertyValue('background-color');
    /** @type {NodeListOf<HTMLElement>} */
    const successIconParts = popup.querySelectorAll('[class^=swal2-success-circular-line], .swal2-success-fix');
    for (let i = 0; i < successIconParts.length; i++) {
      successIconParts[i].style.backgroundColor = popupBackgroundColor;
    }
  };
  const successIconHtml = `
  <div class="swal2-success-circular-line-left"></div>
  <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>
  <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>
  <div class="swal2-success-circular-line-right"></div>
`;
  const errorIconHtml = `
  <span class="swal2-x-mark">
    <span class="swal2-x-mark-line-left"></span>
    <span class="swal2-x-mark-line-right"></span>
  </span>
`;

  /**
   * @param {HTMLElement} icon
   * @param {SweetAlertOptions} params
   */
  const setContent = (icon, params) => {
    if (!params.icon && !params.iconHtml) {
      return;
    }
    let oldContent = icon.innerHTML;
    let newContent = '';
    if (params.iconHtml) {
      newContent = iconContent(params.iconHtml);
    } else if (params.icon === 'success') {
      newContent = successIconHtml;
      oldContent = oldContent.replace(/ style=".*?"/g, ''); // undo adjustSuccessIconBackgroundColor()
    } else if (params.icon === 'error') {
      newContent = errorIconHtml;
    } else if (params.icon) {
      const defaultIconHtml = {
        question: '?',
        warning: '!',
        info: 'i'
      };
      newContent = iconContent(defaultIconHtml[params.icon]);
    }
    if (oldContent.trim() !== newContent.trim()) {
      setInnerHtml(icon, newContent);
    }
  };

  /**
   * @param {HTMLElement} icon
   * @param {SweetAlertOptions} params
   */
  const setColor = (icon, params) => {
    if (!params.iconColor) {
      return;
    }
    icon.style.color = params.iconColor;
    icon.style.borderColor = params.iconColor;
    for (const sel of ['.swal2-success-line-tip', '.swal2-success-line-long', '.swal2-x-mark-line-left', '.swal2-x-mark-line-right']) {
      setStyle(icon, sel, 'background-color', params.iconColor);
    }
    setStyle(icon, '.swal2-success-ring', 'border-color', params.iconColor);
  };

  /**
   * @param {string} content
   * @returns {string}
   */
  const iconContent = content => `<div class="${swalClasses['icon-content']}">${content}</div>`;

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderImage = (instance, params) => {
    const image = getImage();
    if (!image) {
      return;
    }
    if (!params.imageUrl) {
      hide(image);
      return;
    }
    show(image, '');

    // Src, alt
    image.setAttribute('src', params.imageUrl);
    image.setAttribute('alt', params.imageAlt || '');

    // Width, height
    applyNumericalStyle(image, 'width', params.imageWidth);
    applyNumericalStyle(image, 'height', params.imageHeight);

    // Class
    image.className = swalClasses.image;
    applyCustomClass(image, params, 'image');
  };

  let dragging = false;
  let mousedownX = 0;
  let mousedownY = 0;
  let initialX = 0;
  let initialY = 0;

  /**
   * @param {HTMLElement} popup
   */
  const addDraggableListeners = popup => {
    popup.addEventListener('mousedown', down);
    document.body.addEventListener('mousemove', move);
    popup.addEventListener('mouseup', up);
    popup.addEventListener('touchstart', down);
    document.body.addEventListener('touchmove', move);
    popup.addEventListener('touchend', up);
  };

  /**
   * @param {HTMLElement} popup
   */
  const removeDraggableListeners = popup => {
    popup.removeEventListener('mousedown', down);
    document.body.removeEventListener('mousemove', move);
    popup.removeEventListener('mouseup', up);
    popup.removeEventListener('touchstart', down);
    document.body.removeEventListener('touchmove', move);
    popup.removeEventListener('touchend', up);
  };

  /**
   * @param {MouseEvent | TouchEvent} event
   */
  const down = event => {
    const popup = getPopup();
    if (event.target === popup || getIcon().contains(/** @type {HTMLElement} */event.target)) {
      dragging = true;
      const clientXY = getClientXY(event);
      mousedownX = clientXY.clientX;
      mousedownY = clientXY.clientY;
      initialX = parseInt(popup.style.insetInlineStart) || 0;
      initialY = parseInt(popup.style.insetBlockStart) || 0;
      addClass(popup, 'swal2-dragging');
    }
  };

  /**
   * @param {MouseEvent | TouchEvent} event
   */
  const move = event => {
    const popup = getPopup();
    if (dragging) {
      let {
        clientX,
        clientY
      } = getClientXY(event);
      popup.style.insetInlineStart = `${initialX + (clientX - mousedownX)}px`;
      popup.style.insetBlockStart = `${initialY + (clientY - mousedownY)}px`;
    }
  };
  const up = () => {
    const popup = getPopup();
    dragging = false;
    removeClass(popup, 'swal2-dragging');
  };

  /**
   * @param {MouseEvent | TouchEvent} event
   * @returns {{ clientX: number, clientY: number }}
   */
  const getClientXY = event => {
    let clientX = 0,
      clientY = 0;
    if (event.type.startsWith('mouse')) {
      clientX = /** @type {MouseEvent} */event.clientX;
      clientY = /** @type {MouseEvent} */event.clientY;
    } else if (event.type.startsWith('touch')) {
      clientX = /** @type {TouchEvent} */event.touches[0].clientX;
      clientY = /** @type {TouchEvent} */event.touches[0].clientY;
    }
    return {
      clientX,
      clientY
    };
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderPopup = (instance, params) => {
    const container = getContainer();
    const popup = getPopup();
    if (!container || !popup) {
      return;
    }

    // Width
    // https://github.com/sweetalert2/sweetalert2/issues/2170
    if (params.toast) {
      applyNumericalStyle(container, 'width', params.width);
      popup.style.width = '100%';
      const loader = getLoader();
      if (loader) {
        popup.insertBefore(loader, getIcon());
      }
    } else {
      applyNumericalStyle(popup, 'width', params.width);
    }

    // Padding
    applyNumericalStyle(popup, 'padding', params.padding);

    // Color
    if (params.color) {
      popup.style.color = params.color;
    }

    // Background
    if (params.background) {
      popup.style.background = params.background;
    }
    hide(getValidationMessage());

    // Classes
    addClasses$1(popup, params);
    if (params.draggable && !params.toast) {
      addClass(popup, swalClasses.draggable);
      addDraggableListeners(popup);
    } else {
      removeClass(popup, swalClasses.draggable);
      removeDraggableListeners(popup);
    }
  };

  /**
   * @param {HTMLElement} popup
   * @param {SweetAlertOptions} params
   */
  const addClasses$1 = (popup, params) => {
    const showClass = params.showClass || {};
    // Default Class + showClass when updating Swal.update({})
    popup.className = `${swalClasses.popup} ${isVisible$1(popup) ? showClass.popup : ''}`;
    if (params.toast) {
      addClass([document.documentElement, document.body], swalClasses['toast-shown']);
      addClass(popup, swalClasses.toast);
    } else {
      addClass(popup, swalClasses.modal);
    }

    // Custom class
    applyCustomClass(popup, params, 'popup');
    // TODO: remove in the next major
    if (typeof params.customClass === 'string') {
      addClass(popup, params.customClass);
    }

    // Icon class (#1842)
    if (params.icon) {
      addClass(popup, swalClasses[`icon-${params.icon}`]);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderProgressSteps = (instance, params) => {
    const progressStepsContainer = getProgressSteps();
    if (!progressStepsContainer) {
      return;
    }
    const {
      progressSteps,
      currentProgressStep
    } = params;
    if (!progressSteps || progressSteps.length === 0 || currentProgressStep === undefined) {
      hide(progressStepsContainer);
      return;
    }
    show(progressStepsContainer);
    progressStepsContainer.textContent = '';
    if (currentProgressStep >= progressSteps.length) {
      warn('Invalid currentProgressStep parameter, it should be less than progressSteps.length ' + '(currentProgressStep like JS arrays starts from 0)');
    }
    progressSteps.forEach((step, index) => {
      const stepEl = createStepElement(step);
      progressStepsContainer.appendChild(stepEl);
      if (index === currentProgressStep) {
        addClass(stepEl, swalClasses['active-progress-step']);
      }
      if (index !== progressSteps.length - 1) {
        const lineEl = createLineElement(params);
        progressStepsContainer.appendChild(lineEl);
      }
    });
  };

  /**
   * @param {string} step
   * @returns {HTMLLIElement}
   */
  const createStepElement = step => {
    const stepEl = document.createElement('li');
    addClass(stepEl, swalClasses['progress-step']);
    setInnerHtml(stepEl, step);
    return stepEl;
  };

  /**
   * @param {SweetAlertOptions} params
   * @returns {HTMLLIElement}
   */
  const createLineElement = params => {
    const lineEl = document.createElement('li');
    addClass(lineEl, swalClasses['progress-step-line']);
    if (params.progressStepsDistance) {
      applyNumericalStyle(lineEl, 'width', params.progressStepsDistance);
    }
    return lineEl;
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const renderTitle = (instance, params) => {
    const title = getTitle();
    if (!title) {
      return;
    }
    showWhenInnerHtmlPresent(title);
    toggle(title, params.title || params.titleText, 'block');
    if (params.title) {
      parseHtmlToContainer(params.title, title);
    }
    if (params.titleText) {
      title.innerText = params.titleText;
    }

    // Custom class
    applyCustomClass(title, params, 'title');
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const render = (instance, params) => {
    renderPopup(instance, params);
    renderContainer(instance, params);
    renderProgressSteps(instance, params);
    renderIcon(instance, params);
    renderImage(instance, params);
    renderTitle(instance, params);
    renderCloseButton(instance, params);
    renderContent(instance, params);
    renderActions(instance, params);
    renderFooter(instance, params);
    const popup = getPopup();
    if (typeof params.didRender === 'function' && popup) {
      params.didRender(popup);
    }
    globalState.eventEmitter.emit('didRender', popup);
  };

  /*
   * Global function to determine if SweetAlert2 popup is shown
   */
  const isVisible = () => {
    return isVisible$1(getPopup());
  };

  /*
   * Global function to click 'Confirm' button
   */
  const clickConfirm = () => {
    var _dom$getConfirmButton;
    return (_dom$getConfirmButton = getConfirmButton()) === null || _dom$getConfirmButton === void 0 ? void 0 : _dom$getConfirmButton.click();
  };

  /*
   * Global function to click 'Deny' button
   */
  const clickDeny = () => {
    var _dom$getDenyButton;
    return (_dom$getDenyButton = getDenyButton()) === null || _dom$getDenyButton === void 0 ? void 0 : _dom$getDenyButton.click();
  };

  /*
   * Global function to click 'Cancel' button
   */
  const clickCancel = () => {
    var _dom$getCancelButton;
    return (_dom$getCancelButton = getCancelButton()) === null || _dom$getCancelButton === void 0 ? void 0 : _dom$getCancelButton.click();
  };

  /** @typedef {'cancel' | 'backdrop' | 'close' | 'esc' | 'timer'} DismissReason */

  /** @type {Record<DismissReason, DismissReason>} */
  const DismissReason = Object.freeze({
    cancel: 'cancel',
    backdrop: 'backdrop',
    close: 'close',
    esc: 'esc',
    timer: 'timer'
  });

  /**
   * @param {GlobalState} globalState
   */
  const removeKeydownHandler = globalState => {
    if (globalState.keydownTarget && globalState.keydownHandlerAdded) {
      globalState.keydownTarget.removeEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = false;
    }
  };

  /**
   * @param {GlobalState} globalState
   * @param {SweetAlertOptions} innerParams
   * @param {*} dismissWith
   */
  const addKeydownHandler = (globalState, innerParams, dismissWith) => {
    removeKeydownHandler(globalState);
    if (!innerParams.toast) {
      globalState.keydownHandler = e => keydownHandler(innerParams, e, dismissWith);
      globalState.keydownTarget = innerParams.keydownListenerCapture ? window : getPopup();
      globalState.keydownListenerCapture = innerParams.keydownListenerCapture;
      globalState.keydownTarget.addEventListener('keydown', globalState.keydownHandler, {
        capture: globalState.keydownListenerCapture
      });
      globalState.keydownHandlerAdded = true;
    }
  };

  /**
   * @param {number} index
   * @param {number} increment
   */
  const setFocus = (index, increment) => {
    var _dom$getPopup;
    const focusableElements = getFocusableElements();
    // search for visible elements and select the next possible match
    if (focusableElements.length) {
      index = index + increment;

      // shift + tab when .swal2-popup is focused
      if (index === -2) {
        index = focusableElements.length - 1;
      }

      // rollover to first item
      if (index === focusableElements.length) {
        index = 0;

        // go to last item
      } else if (index === -1) {
        index = focusableElements.length - 1;
      }
      focusableElements[index].focus();
      return;
    }
    // no visible focusable elements, focus the popup
    (_dom$getPopup = getPopup()) === null || _dom$getPopup === void 0 || _dom$getPopup.focus();
  };
  const arrowKeysNextButton = ['ArrowRight', 'ArrowDown'];
  const arrowKeysPreviousButton = ['ArrowLeft', 'ArrowUp'];

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {KeyboardEvent} event
   * @param {Function} dismissWith
   */
  const keydownHandler = (innerParams, event, dismissWith) => {
    if (!innerParams) {
      return; // This instance has already been destroyed
    }

    // Ignore keydown during IME composition
    // https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event#ignoring_keydown_during_ime_composition
    // https://github.com/sweetalert2/sweetalert2/issues/720
    // https://github.com/sweetalert2/sweetalert2/issues/2406
    if (event.isComposing || event.keyCode === 229) {
      return;
    }
    if (innerParams.stopKeydownPropagation) {
      event.stopPropagation();
    }

    // ENTER
    if (event.key === 'Enter') {
      handleEnter(event, innerParams);
    }

    // TAB
    else if (event.key === 'Tab') {
      handleTab(event);
    }

    // ARROWS - switch focus between buttons
    else if ([...arrowKeysNextButton, ...arrowKeysPreviousButton].includes(event.key)) {
      handleArrows(event.key);
    }

    // ESC
    else if (event.key === 'Escape') {
      handleEsc(event, innerParams, dismissWith);
    }
  };

  /**
   * @param {KeyboardEvent} event
   * @param {SweetAlertOptions} innerParams
   */
  const handleEnter = (event, innerParams) => {
    // https://github.com/sweetalert2/sweetalert2/issues/2386
    if (!callIfFunction(innerParams.allowEnterKey)) {
      return;
    }
    const input = getInput$1(getPopup(), innerParams.input);
    if (event.target && input && event.target instanceof HTMLElement && event.target.outerHTML === input.outerHTML) {
      if (['textarea', 'file'].includes(innerParams.input)) {
        return; // do not submit
      }
      clickConfirm();
      event.preventDefault();
    }
  };

  /**
   * @param {KeyboardEvent} event
   */
  const handleTab = event => {
    const targetElement = event.target;
    const focusableElements = getFocusableElements();
    let btnIndex = -1;
    for (let i = 0; i < focusableElements.length; i++) {
      if (targetElement === focusableElements[i]) {
        btnIndex = i;
        break;
      }
    }

    // Cycle to the next button
    if (!event.shiftKey) {
      setFocus(btnIndex, 1);
    }

    // Cycle to the prev button
    else {
      setFocus(btnIndex, -1);
    }
    event.stopPropagation();
    event.preventDefault();
  };

  /**
   * @param {string} key
   */
  const handleArrows = key => {
    const actions = getActions();
    const confirmButton = getConfirmButton();
    const denyButton = getDenyButton();
    const cancelButton = getCancelButton();
    if (!actions || !confirmButton || !denyButton || !cancelButton) {
      return;
    }
    /** @type HTMLElement[] */
    const buttons = [confirmButton, denyButton, cancelButton];
    if (document.activeElement instanceof HTMLElement && !buttons.includes(document.activeElement)) {
      return;
    }
    const sibling = arrowKeysNextButton.includes(key) ? 'nextElementSibling' : 'previousElementSibling';
    let buttonToFocus = document.activeElement;
    if (!buttonToFocus) {
      return;
    }
    for (let i = 0; i < actions.children.length; i++) {
      buttonToFocus = buttonToFocus[sibling];
      if (!buttonToFocus) {
        return;
      }
      if (buttonToFocus instanceof HTMLButtonElement && isVisible$1(buttonToFocus)) {
        break;
      }
    }
    if (buttonToFocus instanceof HTMLButtonElement) {
      buttonToFocus.focus();
    }
  };

  /**
   * @param {KeyboardEvent} event
   * @param {SweetAlertOptions} innerParams
   * @param {Function} dismissWith
   */
  const handleEsc = (event, innerParams, dismissWith) => {
    if (callIfFunction(innerParams.allowEscapeKey)) {
      event.preventDefault();
      dismissWith(DismissReason.esc);
    }
  };

  /**
   * This module contains `WeakMap`s for each effectively-"private  property" that a `Swal` has.
   * For example, to set the private property "foo" of `this` to "bar", you can `privateProps.foo.set(this, 'bar')`
   * This is the approach that Babel will probably take to implement private methods/fields
   *   https://github.com/tc39/proposal-private-methods
   *   https://github.com/babel/babel/pull/7555
   * Once we have the changes from that PR in Babel, and our core class fits reasonable in *one module*
   *   then we can use that language feature.
   */

  var privateMethods = {
    swalPromiseResolve: new WeakMap(),
    swalPromiseReject: new WeakMap()
  };

  // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/
  // Adding aria-hidden="true" to elements outside of the active modal dialog ensures that
  // elements not within the active modal dialog will not be surfaced if a user opens a screen
  // reader’s list of elements (headings, form controls, landmarks, etc.) in the document.

  const setAriaHidden = () => {
    const container = getContainer();
    const bodyChildren = Array.from(document.body.children);
    bodyChildren.forEach(el => {
      if (el.contains(container)) {
        return;
      }
      if (el.hasAttribute('aria-hidden')) {
        el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden') || '');
      }
      el.setAttribute('aria-hidden', 'true');
    });
  };
  const unsetAriaHidden = () => {
    const bodyChildren = Array.from(document.body.children);
    bodyChildren.forEach(el => {
      if (el.hasAttribute('data-previous-aria-hidden')) {
        el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden') || '');
        el.removeAttribute('data-previous-aria-hidden');
      } else {
        el.removeAttribute('aria-hidden');
      }
    });
  };

  // @ts-ignore
  const isSafariOrIOS = typeof window !== 'undefined' && !!window.GestureEvent; // true for Safari desktop + all iOS browsers https://stackoverflow.com/a/70585394

  /**
   * Fix iOS scrolling
   * http://stackoverflow.com/q/39626302
   */
  const iOSfix = () => {
    if (isSafariOrIOS && !hasClass(document.body, swalClasses.iosfix)) {
      const offset = document.body.scrollTop;
      document.body.style.top = `${offset * -1}px`;
      addClass(document.body, swalClasses.iosfix);
      lockBodyScroll();
    }
  };

  /**
   * https://github.com/sweetalert2/sweetalert2/issues/1246
   */
  const lockBodyScroll = () => {
    const container = getContainer();
    if (!container) {
      return;
    }
    /** @type {boolean} */
    let preventTouchMove;
    /**
     * @param {TouchEvent} event
     */
    container.ontouchstart = event => {
      preventTouchMove = shouldPreventTouchMove(event);
    };
    /**
     * @param {TouchEvent} event
     */
    container.ontouchmove = event => {
      if (preventTouchMove) {
        event.preventDefault();
        event.stopPropagation();
      }
    };
  };

  /**
   * @param {TouchEvent} event
   * @returns {boolean}
   */
  const shouldPreventTouchMove = event => {
    const target = event.target;
    const container = getContainer();
    const htmlContainer = getHtmlContainer();
    if (!container || !htmlContainer) {
      return false;
    }
    if (isStylus(event) || isZoom(event)) {
      return false;
    }
    if (target === container) {
      return true;
    }
    if (!isScrollable(container) && target instanceof HTMLElement && !selfOrParentIsScrollable(target, htmlContainer) &&
    // #2823
    target.tagName !== 'INPUT' &&
    // #1603
    target.tagName !== 'TEXTAREA' &&
    // #2266
    !(isScrollable(htmlContainer) &&
    // #1944
    htmlContainer.contains(target))) {
      return true;
    }
    return false;
  };

  /**
   * https://github.com/sweetalert2/sweetalert2/issues/1786
   *
   * @param {*} event
   * @returns {boolean}
   */
  const isStylus = event => {
    return event.touches && event.touches.length && event.touches[0].touchType === 'stylus';
  };

  /**
   * https://github.com/sweetalert2/sweetalert2/issues/1891
   *
   * @param {TouchEvent} event
   * @returns {boolean}
   */
  const isZoom = event => {
    return event.touches && event.touches.length > 1;
  };
  const undoIOSfix = () => {
    if (hasClass(document.body, swalClasses.iosfix)) {
      const offset = parseInt(document.body.style.top, 10);
      removeClass(document.body, swalClasses.iosfix);
      document.body.style.top = '';
      document.body.scrollTop = offset * -1;
    }
  };

  /**
   * Measure scrollbar width for padding body during modal show/hide
   * https://github.com/twbs/bootstrap/blob/master/js/src/modal.js
   *
   * @returns {number}
   */
  const measureScrollbar = () => {
    const scrollDiv = document.createElement('div');
    scrollDiv.className = swalClasses['scrollbar-measure'];
    document.body.appendChild(scrollDiv);
    const scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
    document.body.removeChild(scrollDiv);
    return scrollbarWidth;
  };

  /**
   * Remember state in cases where opening and handling a modal will fiddle with it.
   * @type {number | null}
   */
  let previousBodyPadding = null;

  /**
   * @param {string} initialBodyOverflow
   */
  const replaceScrollbarWithPadding = initialBodyOverflow => {
    // for queues, do not do this more than once
    if (previousBodyPadding !== null) {
      return;
    }
    // if the body has overflow
    if (document.body.scrollHeight > window.innerHeight || initialBodyOverflow === 'scroll' // https://github.com/sweetalert2/sweetalert2/issues/2663
    ) {
      // add padding so the content doesn't shift after removal of scrollbar
      previousBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right'));
      document.body.style.paddingRight = `${previousBodyPadding + measureScrollbar()}px`;
    }
  };
  const undoReplaceScrollbarWithPadding = () => {
    if (previousBodyPadding !== null) {
      document.body.style.paddingRight = `${previousBodyPadding}px`;
      previousBodyPadding = null;
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {HTMLElement} container
   * @param {boolean} returnFocus
   * @param {Function} didClose
   */
  function removePopupAndResetState(instance, container, returnFocus, didClose) {
    if (isToast()) {
      triggerDidCloseAndDispose(instance, didClose);
    } else {
      restoreActiveElement(returnFocus).then(() => triggerDidCloseAndDispose(instance, didClose));
      removeKeydownHandler(globalState);
    }

    // workaround for https://github.com/sweetalert2/sweetalert2/issues/2088
    // for some reason removing the container in Safari will scroll the document to bottom
    if (isSafariOrIOS) {
      container.setAttribute('style', 'display:none !important');
      container.removeAttribute('class');
      container.innerHTML = '';
    } else {
      container.remove();
    }
    if (isModal()) {
      undoReplaceScrollbarWithPadding();
      undoIOSfix();
      unsetAriaHidden();
    }
    removeBodyClasses();
  }

  /**
   * Remove SweetAlert2 classes from body
   */
  function removeBodyClasses() {
    removeClass([document.documentElement, document.body], [swalClasses.shown, swalClasses['height-auto'], swalClasses['no-backdrop'], swalClasses['toast-shown']]);
  }

  /**
   * Instance method to close sweetAlert
   *
   * @param {any} resolveValue
   */
  function close(resolveValue) {
    resolveValue = prepareResolveValue(resolveValue);
    const swalPromiseResolve = privateMethods.swalPromiseResolve.get(this);
    const didClose = triggerClosePopup(this);
    if (this.isAwaitingPromise) {
      // A swal awaiting for a promise (after a click on Confirm or Deny) cannot be dismissed anymore #2335
      if (!resolveValue.isDismissed) {
        handleAwaitingPromise(this);
        swalPromiseResolve(resolveValue);
      }
    } else if (didClose) {
      // Resolve Swal promise
      swalPromiseResolve(resolveValue);
    }
  }
  const triggerClosePopup = instance => {
    const popup = getPopup();
    if (!popup) {
      return false;
    }
    const innerParams = privateProps.innerParams.get(instance);
    if (!innerParams || hasClass(popup, innerParams.hideClass.popup)) {
      return false;
    }
    removeClass(popup, innerParams.showClass.popup);
    addClass(popup, innerParams.hideClass.popup);
    const backdrop = getContainer();
    removeClass(backdrop, innerParams.showClass.backdrop);
    addClass(backdrop, innerParams.hideClass.backdrop);
    handlePopupAnimation(instance, popup, innerParams);
    return true;
  };

  /**
   * @param {any} error
   */
  function rejectPromise(error) {
    const rejectPromise = privateMethods.swalPromiseReject.get(this);
    handleAwaitingPromise(this);
    if (rejectPromise) {
      // Reject Swal promise
      rejectPromise(error);
    }
  }

  /**
   * @param {SweetAlert} instance
   */
  const handleAwaitingPromise = instance => {
    if (instance.isAwaitingPromise) {
      delete instance.isAwaitingPromise;
      // The instance might have been previously partly destroyed, we must resume the destroy process in this case #2335
      if (!privateProps.innerParams.get(instance)) {
        instance._destroy();
      }
    }
  };

  /**
   * @param {any} resolveValue
   * @returns {SweetAlertResult}
   */
  const prepareResolveValue = resolveValue => {
    // When user calls Swal.close()
    if (typeof resolveValue === 'undefined') {
      return {
        isConfirmed: false,
        isDenied: false,
        isDismissed: true
      };
    }
    return Object.assign({
      isConfirmed: false,
      isDenied: false,
      isDismissed: false
    }, resolveValue);
  };

  /**
   * @param {SweetAlert} instance
   * @param {HTMLElement} popup
   * @param {SweetAlertOptions} innerParams
   */
  const handlePopupAnimation = (instance, popup, innerParams) => {
    var _globalState$eventEmi;
    const container = getContainer();
    // If animation is supported, animate
    const animationIsSupported = hasCssAnimation(popup);
    if (typeof innerParams.willClose === 'function') {
      innerParams.willClose(popup);
    }
    (_globalState$eventEmi = globalState.eventEmitter) === null || _globalState$eventEmi === void 0 || _globalState$eventEmi.emit('willClose', popup);
    if (animationIsSupported) {
      animatePopup(instance, popup, container, innerParams.returnFocus, innerParams.didClose);
    } else {
      // Otherwise, remove immediately
      removePopupAndResetState(instance, container, innerParams.returnFocus, innerParams.didClose);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {HTMLElement} popup
   * @param {HTMLElement} container
   * @param {boolean} returnFocus
   * @param {Function} didClose
   */
  const animatePopup = (instance, popup, container, returnFocus, didClose) => {
    globalState.swalCloseEventFinishedCallback = removePopupAndResetState.bind(null, instance, container, returnFocus, didClose);
    /**
     * @param {AnimationEvent | TransitionEvent} e
     */
    const swalCloseAnimationFinished = function (e) {
      if (e.target === popup) {
        var _globalState$swalClos;
        (_globalState$swalClos = globalState.swalCloseEventFinishedCallback) === null || _globalState$swalClos === void 0 || _globalState$swalClos.call(globalState);
        delete globalState.swalCloseEventFinishedCallback;
        popup.removeEventListener('animationend', swalCloseAnimationFinished);
        popup.removeEventListener('transitionend', swalCloseAnimationFinished);
      }
    };
    popup.addEventListener('animationend', swalCloseAnimationFinished);
    popup.addEventListener('transitionend', swalCloseAnimationFinished);
  };

  /**
   * @param {SweetAlert} instance
   * @param {Function} didClose
   */
  const triggerDidCloseAndDispose = (instance, didClose) => {
    setTimeout(() => {
      var _globalState$eventEmi2;
      if (typeof didClose === 'function') {
        didClose.bind(instance.params)();
      }
      (_globalState$eventEmi2 = globalState.eventEmitter) === null || _globalState$eventEmi2 === void 0 || _globalState$eventEmi2.emit('didClose');
      // instance might have been destroyed already
      if (instance._destroy) {
        instance._destroy();
      }
    });
  };

  /**
   * Shows loader (spinner), this is useful with AJAX requests.
   * By default the loader be shown instead of the "Confirm" button.
   *
   * @param {HTMLButtonElement | null} [buttonToReplace]
   */
  const showLoading = buttonToReplace => {
    let popup = getPopup();
    if (!popup) {
      new Swal();
    }
    popup = getPopup();
    if (!popup) {
      return;
    }
    const loader = getLoader();
    if (isToast()) {
      hide(getIcon());
    } else {
      replaceButton(popup, buttonToReplace);
    }
    show(loader);
    popup.setAttribute('data-loading', 'true');
    popup.setAttribute('aria-busy', 'true');
    popup.focus();
  };

  /**
   * @param {HTMLElement} popup
   * @param {HTMLButtonElement | null} [buttonToReplace]
   */
  const replaceButton = (popup, buttonToReplace) => {
    const actions = getActions();
    const loader = getLoader();
    if (!actions || !loader) {
      return;
    }
    if (!buttonToReplace && isVisible$1(getConfirmButton())) {
      buttonToReplace = getConfirmButton();
    }
    show(actions);
    if (buttonToReplace) {
      hide(buttonToReplace);
      loader.setAttribute('data-button-to-replace', buttonToReplace.className);
      actions.insertBefore(loader, buttonToReplace);
    }
    addClass([popup, actions], swalClasses.loading);
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const handleInputOptionsAndValue = (instance, params) => {
    if (params.input === 'select' || params.input === 'radio') {
      handleInputOptions(instance, params);
    } else if (['text', 'email', 'number', 'tel', 'textarea'].some(i => i === params.input) && (hasToPromiseFn(params.inputValue) || isPromise(params.inputValue))) {
      showLoading(getConfirmButton());
      handleInputValue(instance, params);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} innerParams
   * @returns {SweetAlertInputValue}
   */
  const getInputValue = (instance, innerParams) => {
    const input = instance.getInput();
    if (!input) {
      return null;
    }
    switch (innerParams.input) {
      case 'checkbox':
        return getCheckboxValue(input);
      case 'radio':
        return getRadioValue(input);
      case 'file':
        return getFileValue(input);
      default:
        return innerParams.inputAutoTrim ? input.value.trim() : input.value;
    }
  };

  /**
   * @param {HTMLInputElement} input
   * @returns {number}
   */
  const getCheckboxValue = input => input.checked ? 1 : 0;

  /**
   * @param {HTMLInputElement} input
   * @returns {string | null}
   */
  const getRadioValue = input => input.checked ? input.value : null;

  /**
   * @param {HTMLInputElement} input
   * @returns {FileList | File | null}
   */
  const getFileValue = input => input.files && input.files.length ? input.getAttribute('multiple') !== null ? input.files : input.files[0] : null;

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const handleInputOptions = (instance, params) => {
    const popup = getPopup();
    if (!popup) {
      return;
    }
    /**
     * @param {Record<string, any>} inputOptions
     */
    const processInputOptions = inputOptions => {
      if (params.input === 'select') {
        populateSelectOptions(popup, formatInputOptions(inputOptions), params);
      } else if (params.input === 'radio') {
        populateRadioOptions(popup, formatInputOptions(inputOptions), params);
      }
    };
    if (hasToPromiseFn(params.inputOptions) || isPromise(params.inputOptions)) {
      showLoading(getConfirmButton());
      asPromise(params.inputOptions).then(inputOptions => {
        instance.hideLoading();
        processInputOptions(inputOptions);
      });
    } else if (typeof params.inputOptions === 'object') {
      processInputOptions(params.inputOptions);
    } else {
      error(`Unexpected type of inputOptions! Expected object, Map or Promise, got ${typeof params.inputOptions}`);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertOptions} params
   */
  const handleInputValue = (instance, params) => {
    const input = instance.getInput();
    if (!input) {
      return;
    }
    hide(input);
    asPromise(params.inputValue).then(inputValue => {
      input.value = params.input === 'number' ? `${parseFloat(inputValue) || 0}` : `${inputValue}`;
      show(input);
      input.focus();
      instance.hideLoading();
    }).catch(err => {
      error(`Error in inputValue promise: ${err}`);
      input.value = '';
      show(input);
      input.focus();
      instance.hideLoading();
    });
  };

  /**
   * @param {HTMLElement} popup
   * @param {InputOptionFlattened[]} inputOptions
   * @param {SweetAlertOptions} params
   */
  function populateSelectOptions(popup, inputOptions, params) {
    const select = getDirectChildByClass(popup, swalClasses.select);
    if (!select) {
      return;
    }
    /**
     * @param {HTMLElement} parent
     * @param {string} optionLabel
     * @param {string} optionValue
     */
    const renderOption = (parent, optionLabel, optionValue) => {
      const option = document.createElement('option');
      option.value = optionValue;
      setInnerHtml(option, optionLabel);
      option.selected = isSelected(optionValue, params.inputValue);
      parent.appendChild(option);
    };
    inputOptions.forEach(inputOption => {
      const optionValue = inputOption[0];
      const optionLabel = inputOption[1];
      // <optgroup> spec:
      // https://www.w3.org/TR/html401/interact/forms.html#h-17.6
      // "...all OPTGROUP elements must be specified directly within a SELECT element (i.e., groups may not be nested)..."
      // check whether this is a <optgroup>
      if (Array.isArray(optionLabel)) {
        // if it is an array, then it is an <optgroup>
        const optgroup = document.createElement('optgroup');
        optgroup.label = optionValue;
        optgroup.disabled = false; // not configurable for now
        select.appendChild(optgroup);
        optionLabel.forEach(o => renderOption(optgroup, o[1], o[0]));
      } else {
        // case of <option>
        renderOption(select, optionLabel, optionValue);
      }
    });
    select.focus();
  }

  /**
   * @param {HTMLElement} popup
   * @param {InputOptionFlattened[]} inputOptions
   * @param {SweetAlertOptions} params
   */
  function populateRadioOptions(popup, inputOptions, params) {
    const radio = getDirectChildByClass(popup, swalClasses.radio);
    if (!radio) {
      return;
    }
    inputOptions.forEach(inputOption => {
      const radioValue = inputOption[0];
      const radioLabel = inputOption[1];
      const radioInput = document.createElement('input');
      const radioLabelElement = document.createElement('label');
      radioInput.type = 'radio';
      radioInput.name = swalClasses.radio;
      radioInput.value = radioValue;
      if (isSelected(radioValue, params.inputValue)) {
        radioInput.checked = true;
      }
      const label = document.createElement('span');
      setInnerHtml(label, radioLabel);
      label.className = swalClasses.label;
      radioLabelElement.appendChild(radioInput);
      radioLabelElement.appendChild(label);
      radio.appendChild(radioLabelElement);
    });
    const radios = radio.querySelectorAll('input');
    if (radios.length) {
      radios[0].focus();
    }
  }

  /**
   * Converts `inputOptions` into an array of `[value, label]`s
   *
   * @param {Record<string, any>} inputOptions
   * @typedef {string[]} InputOptionFlattened
   * @returns {InputOptionFlattened[]}
   */
  const formatInputOptions = inputOptions => {
    /** @type {InputOptionFlattened[]} */
    const result = [];
    if (inputOptions instanceof Map) {
      inputOptions.forEach((value, key) => {
        let valueFormatted = value;
        if (typeof valueFormatted === 'object') {
          // case of <optgroup>
          valueFormatted = formatInputOptions(valueFormatted);
        }
        result.push([key, valueFormatted]);
      });
    } else {
      Object.keys(inputOptions).forEach(key => {
        let valueFormatted = inputOptions[key];
        if (typeof valueFormatted === 'object') {
          // case of <optgroup>
          valueFormatted = formatInputOptions(valueFormatted);
        }
        result.push([key, valueFormatted]);
      });
    }
    return result;
  };

  /**
   * @param {string} optionValue
   * @param {SweetAlertInputValue} inputValue
   * @returns {boolean}
   */
  const isSelected = (optionValue, inputValue) => {
    return !!inputValue && inputValue.toString() === optionValue.toString();
  };

  /**
   * @param {SweetAlert} instance
   */
  const handleConfirmButtonClick = instance => {
    const innerParams = privateProps.innerParams.get(instance);
    instance.disableButtons();
    if (innerParams.input) {
      handleConfirmOrDenyWithInput(instance, 'confirm');
    } else {
      confirm(instance, true);
    }
  };

  /**
   * @param {SweetAlert} instance
   */
  const handleDenyButtonClick = instance => {
    const innerParams = privateProps.innerParams.get(instance);
    instance.disableButtons();
    if (innerParams.returnInputValueOnDeny) {
      handleConfirmOrDenyWithInput(instance, 'deny');
    } else {
      deny(instance, false);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {Function} dismissWith
   */
  const handleCancelButtonClick = (instance, dismissWith) => {
    instance.disableButtons();
    dismissWith(DismissReason.cancel);
  };

  /**
   * @param {SweetAlert} instance
   * @param {'confirm' | 'deny'} type
   */
  const handleConfirmOrDenyWithInput = (instance, type) => {
    const innerParams = privateProps.innerParams.get(instance);
    if (!innerParams.input) {
      error(`The "input" parameter is needed to be set when using returnInputValueOn${capitalizeFirstLetter(type)}`);
      return;
    }
    const input = instance.getInput();
    const inputValue = getInputValue(instance, innerParams);
    if (innerParams.inputValidator) {
      handleInputValidator(instance, inputValue, type);
    } else if (input && !input.checkValidity()) {
      instance.enableButtons();
      instance.showValidationMessage(innerParams.validationMessage || input.validationMessage);
    } else if (type === 'deny') {
      deny(instance, inputValue);
    } else {
      confirm(instance, inputValue);
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {SweetAlertInputValue} inputValue
   * @param {'confirm' | 'deny'} type
   */
  const handleInputValidator = (instance, inputValue, type) => {
    const innerParams = privateProps.innerParams.get(instance);
    instance.disableInput();
    const validationPromise = Promise.resolve().then(() => asPromise(innerParams.inputValidator(inputValue, innerParams.validationMessage)));
    validationPromise.then(validationMessage => {
      instance.enableButtons();
      instance.enableInput();
      if (validationMessage) {
        instance.showValidationMessage(validationMessage);
      } else if (type === 'deny') {
        deny(instance, inputValue);
      } else {
        confirm(instance, inputValue);
      }
    });
  };

  /**
   * @param {SweetAlert} instance
   * @param {any} value
   */
  const deny = (instance, value) => {
    const innerParams = privateProps.innerParams.get(instance || undefined);
    if (innerParams.showLoaderOnDeny) {
      showLoading(getDenyButton());
    }
    if (innerParams.preDeny) {
      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preDeny's promise is received
      const preDenyPromise = Promise.resolve().then(() => asPromise(innerParams.preDeny(value, innerParams.validationMessage)));
      preDenyPromise.then(preDenyValue => {
        if (preDenyValue === false) {
          instance.hideLoading();
          handleAwaitingPromise(instance);
        } else {
          instance.close({
            isDenied: true,
            value: typeof preDenyValue === 'undefined' ? value : preDenyValue
          });
        }
      }).catch(error => rejectWith(instance || undefined, error));
    } else {
      instance.close({
        isDenied: true,
        value
      });
    }
  };

  /**
   * @param {SweetAlert} instance
   * @param {any} value
   */
  const succeedWith = (instance, value) => {
    instance.close({
      isConfirmed: true,
      value
    });
  };

  /**
   *
   * @param {SweetAlert} instance
   * @param {string} error
   */
  const rejectWith = (instance, error) => {
    instance.rejectPromise(error);
  };

  /**
   *
   * @param {SweetAlert} instance
   * @param {any} value
   */
  const confirm = (instance, value) => {
    const innerParams = privateProps.innerParams.get(instance || undefined);
    if (innerParams.showLoaderOnConfirm) {
      showLoading();
    }
    if (innerParams.preConfirm) {
      instance.resetValidationMessage();
      instance.isAwaitingPromise = true; // Flagging the instance as awaiting a promise so it's own promise's reject/resolve methods doesn't get destroyed until the result from this preConfirm's promise is received
      const preConfirmPromise = Promise.resolve().then(() => asPromise(innerParams.preConfirm(value, innerParams.validationMessage)));
      preConfirmPromise.then(preConfirmValue => {
        if (isVisible$1(getValidationMessage()) || preConfirmValue === false) {
          instance.hideLoading();
          handleAwaitingPromise(instance);
        } else {
          succeedWith(instance, typeof preConfirmValue === 'undefined' ? value : preConfirmValue);
        }
      }).catch(error => rejectWith(instance || undefined, error));
    } else {
      succeedWith(instance, value);
    }
  };

  /**
   * Hides loader and shows back the button which was hidden by .showLoading()
   */
  function hideLoading() {
    // do nothing if popup is closed
    const innerParams = privateProps.innerParams.get(this);
    if (!innerParams) {
      return;
    }
    const domCache = privateProps.domCache.get(this);
    hide(domCache.loader);
    if (isToast()) {
      if (innerParams.icon) {
        show(getIcon());
      }
    } else {
      showRelatedButton(domCache);
    }
    removeClass([domCache.popup, domCache.actions], swalClasses.loading);
    domCache.popup.removeAttribute('aria-busy');
    domCache.popup.removeAttribute('data-loading');
    domCache.confirmButton.disabled = false;
    domCache.denyButton.disabled = false;
    domCache.cancelButton.disabled = false;
  }
  const showRelatedButton = domCache => {
    const buttonToReplace = domCache.popup.getElementsByClassName(domCache.loader.getAttribute('data-button-to-replace'));
    if (buttonToReplace.length) {
      show(buttonToReplace[0], 'inline-block');
    } else if (allButtonsAreHidden()) {
      hide(domCache.actions);
    }
  };

  /**
   * Gets the input DOM node, this method works with input parameter.
   *
   * @returns {HTMLInputElement | null}
   */
  function getInput() {
    const innerParams = privateProps.innerParams.get(this);
    const domCache = privateProps.domCache.get(this);
    if (!domCache) {
      return null;
    }
    return getInput$1(domCache.popup, innerParams.input);
  }

  /**
   * @param {SweetAlert} instance
   * @param {string[]} buttons
   * @param {boolean} disabled
   */
  function setButtonsDisabled(instance, buttons, disabled) {
    const domCache = privateProps.domCache.get(instance);
    buttons.forEach(button => {
      domCache[button].disabled = disabled;
    });
  }

  /**
   * @param {HTMLInputElement | null} input
   * @param {boolean} disabled
   */
  function setInputDisabled(input, disabled) {
    const popup = getPopup();
    if (!popup || !input) {
      return;
    }
    if (input.type === 'radio') {
      /** @type {NodeListOf<HTMLInputElement>} */
      const radios = popup.querySelectorAll(`[name="${swalClasses.radio}"]`);
      for (let i = 0; i < radios.length; i++) {
        radios[i].disabled = disabled;
      }
    } else {
      input.disabled = disabled;
    }
  }

  /**
   * Enable all the buttons
   * @this {SweetAlert}
   */
  function enableButtons() {
    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], false);
  }

  /**
   * Disable all the buttons
   * @this {SweetAlert}
   */
  function disableButtons() {
    setButtonsDisabled(this, ['confirmButton', 'denyButton', 'cancelButton'], true);
  }

  /**
   * Enable the input field
   * @this {SweetAlert}
   */
  function enableInput() {
    setInputDisabled(this.getInput(), false);
  }

  /**
   * Disable the input field
   * @this {SweetAlert}
   */
  function disableInput() {
    setInputDisabled(this.getInput(), true);
  }

  /**
   * Show block with validation message
   *
   * @param {string} error
   * @this {SweetAlert}
   */
  function showValidationMessage(error) {
    const domCache = privateProps.domCache.get(this);
    const params = privateProps.innerParams.get(this);
    setInnerHtml(domCache.validationMessage, error);
    domCache.validationMessage.className = swalClasses['validation-message'];
    if (params.customClass && params.customClass.validationMessage) {
      addClass(domCache.validationMessage, params.customClass.validationMessage);
    }
    show(domCache.validationMessage);
    const input = this.getInput();
    if (input) {
      input.setAttribute('aria-invalid', 'true');
      input.setAttribute('aria-describedby', swalClasses['validation-message']);
      focusInput(input);
      addClass(input, swalClasses.inputerror);
    }
  }

  /**
   * Hide block with validation message
   *
   * @this {SweetAlert}
   */
  function resetValidationMessage() {
    const domCache = privateProps.domCache.get(this);
    if (domCache.validationMessage) {
      hide(domCache.validationMessage);
    }
    const input = this.getInput();
    if (input) {
      input.removeAttribute('aria-invalid');
      input.removeAttribute('aria-describedby');
      removeClass(input, swalClasses.inputerror);
    }
  }

  const defaultParams = {
    title: '',
    titleText: '',
    text: '',
    html: '',
    footer: '',
    icon: undefined,
    iconColor: undefined,
    iconHtml: undefined,
    template: undefined,
    toast: false,
    draggable: false,
    animation: true,
    theme: 'light',
    showClass: {
      popup: 'swal2-show',
      backdrop: 'swal2-backdrop-show',
      icon: 'swal2-icon-show'
    },
    hideClass: {
      popup: 'swal2-hide',
      backdrop: 'swal2-backdrop-hide',
      icon: 'swal2-icon-hide'
    },
    customClass: {},
    target: 'body',
    color: undefined,
    backdrop: true,
    heightAuto: true,
    allowOutsideClick: true,
    allowEscapeKey: true,
    allowEnterKey: true,
    stopKeydownPropagation: true,
    keydownListenerCapture: false,
    showConfirmButton: true,
    showDenyButton: false,
    showCancelButton: false,
    preConfirm: undefined,
    preDeny: undefined,
    confirmButtonText: 'OK',
    confirmButtonAriaLabel: '',
    confirmButtonColor: undefined,
    denyButtonText: 'No',
    denyButtonAriaLabel: '',
    denyButtonColor: undefined,
    cancelButtonText: 'Cancel',
    cancelButtonAriaLabel: '',
    cancelButtonColor: undefined,
    buttonsStyling: true,
    reverseButtons: false,
    focusConfirm: true,
    focusDeny: false,
    focusCancel: false,
    returnFocus: true,
    showCloseButton: false,
    closeButtonHtml: '&times;',
    closeButtonAriaLabel: 'Close this dialog',
    loaderHtml: '',
    showLoaderOnConfirm: false,
    showLoaderOnDeny: false,
    imageUrl: undefined,
    imageWidth: undefined,
    imageHeight: undefined,
    imageAlt: '',
    timer: undefined,
    timerProgressBar: false,
    width: undefined,
    padding: undefined,
    background: undefined,
    input: undefined,
    inputPlaceholder: '',
    inputLabel: '',
    inputValue: '',
    inputOptions: {},
    inputAutoFocus: true,
    inputAutoTrim: true,
    inputAttributes: {},
    inputValidator: undefined,
    returnInputValueOnDeny: false,
    validationMessage: undefined,
    grow: false,
    position: 'center',
    progressSteps: [],
    currentProgressStep: undefined,
    progressStepsDistance: undefined,
    willOpen: undefined,
    didOpen: undefined,
    didRender: undefined,
    willClose: undefined,
    didClose: undefined,
    didDestroy: undefined,
    scrollbarPadding: true,
    topLayer: false
  };
  const updatableParams = ['allowEscapeKey', 'allowOutsideClick', 'background', 'buttonsStyling', 'cancelButtonAriaLabel', 'cancelButtonColor', 'cancelButtonText', 'closeButtonAriaLabel', 'closeButtonHtml', 'color', 'confirmButtonAriaLabel', 'confirmButtonColor', 'confirmButtonText', 'currentProgressStep', 'customClass', 'denyButtonAriaLabel', 'denyButtonColor', 'denyButtonText', 'didClose', 'didDestroy', 'draggable', 'footer', 'hideClass', 'html', 'icon', 'iconColor', 'iconHtml', 'imageAlt', 'imageHeight', 'imageUrl', 'imageWidth', 'preConfirm', 'preDeny', 'progressSteps', 'returnFocus', 'reverseButtons', 'showCancelButton', 'showCloseButton', 'showConfirmButton', 'showDenyButton', 'text', 'title', 'titleText', 'theme', 'willClose'];

  /** @type {Record<string, string | undefined>} */
  const deprecatedParams = {
    allowEnterKey: undefined
  };
  const toastIncompatibleParams = ['allowOutsideClick', 'allowEnterKey', 'backdrop', 'draggable', 'focusConfirm', 'focusDeny', 'focusCancel', 'returnFocus', 'heightAuto', 'keydownListenerCapture'];

  /**
   * Is valid parameter
   *
   * @param {string} paramName
   * @returns {boolean}
   */
  const isValidParameter = paramName => {
    return Object.prototype.hasOwnProperty.call(defaultParams, paramName);
  };

  /**
   * Is valid parameter for Swal.update() method
   *
   * @param {string} paramName
   * @returns {boolean}
   */
  const isUpdatableParameter = paramName => {
    return updatableParams.indexOf(paramName) !== -1;
  };

  /**
   * Is deprecated parameter
   *
   * @param {string} paramName
   * @returns {string | undefined}
   */
  const isDeprecatedParameter = paramName => {
    return deprecatedParams[paramName];
  };

  /**
   * @param {string} param
   */
  const checkIfParamIsValid = param => {
    if (!isValidParameter(param)) {
      warn(`Unknown parameter "${param}"`);
    }
  };

  /**
   * @param {string} param
   */
  const checkIfToastParamIsValid = param => {
    if (toastIncompatibleParams.includes(param)) {
      warn(`The parameter "${param}" is incompatible with toasts`);
    }
  };

  /**
   * @param {string} param
   */
  const checkIfParamIsDeprecated = param => {
    const isDeprecated = isDeprecatedParameter(param);
    if (isDeprecated) {
      warnAboutDeprecation(param, isDeprecated);
    }
  };

  /**
   * Show relevant warnings for given params
   *
   * @param {SweetAlertOptions} params
   */
  const showWarningsForParams = params => {
    if (params.backdrop === false && params.allowOutsideClick) {
      warn('"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`');
    }
    if (params.theme && !['light', 'dark', 'auto', 'minimal', 'borderless', 'embed-iframe', 'bulma', 'bulma-light', 'bulma-dark'].includes(params.theme)) {
      warn(`Invalid theme "${params.theme}"`);
    }
    for (const param in params) {
      checkIfParamIsValid(param);
      if (params.toast) {
        checkIfToastParamIsValid(param);
      }
      checkIfParamIsDeprecated(param);
    }
  };

  /**
   * Updates popup parameters.
   *
   * @param {SweetAlertOptions} params
   */
  function update(params) {
    const container = getContainer();
    const popup = getPopup();
    const innerParams = privateProps.innerParams.get(this);
    if (!popup || hasClass(popup, innerParams.hideClass.popup)) {
      warn(`You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup.`);
      return;
    }
    const validUpdatableParams = filterValidParams(params);
    const updatedParams = Object.assign({}, innerParams, validUpdatableParams);
    showWarningsForParams(updatedParams);
    container.dataset['swal2Theme'] = updatedParams.theme;
    render(this, updatedParams);
    privateProps.innerParams.set(this, updatedParams);
    Object.defineProperties(this, {
      params: {
        value: Object.assign({}, this.params, params),
        writable: false,
        enumerable: true
      }
    });
  }

  /**
   * @param {SweetAlertOptions} params
   * @returns {SweetAlertOptions}
   */
  const filterValidParams = params => {
    const validUpdatableParams = {};
    Object.keys(params).forEach(param => {
      if (isUpdatableParameter(param)) {
        validUpdatableParams[param] = params[param];
      } else {
        warn(`Invalid parameter to update: ${param}`);
      }
    });
    return validUpdatableParams;
  };

  /**
   * Dispose the current SweetAlert2 instance
   */
  function _destroy() {
    const domCache = privateProps.domCache.get(this);
    const innerParams = privateProps.innerParams.get(this);
    if (!innerParams) {
      disposeWeakMaps(this); // The WeakMaps might have been partly destroyed, we must recall it to dispose any remaining WeakMaps #2335
      return; // This instance has already been destroyed
    }

    // Check if there is another Swal closing
    if (domCache.popup && globalState.swalCloseEventFinishedCallback) {
      globalState.swalCloseEventFinishedCallback();
      delete globalState.swalCloseEventFinishedCallback;
    }
    if (typeof innerParams.didDestroy === 'function') {
      innerParams.didDestroy();
    }
    globalState.eventEmitter.emit('didDestroy');
    disposeSwal(this);
  }

  /**
   * @param {SweetAlert} instance
   */
  const disposeSwal = instance => {
    disposeWeakMaps(instance);
    // Unset this.params so GC will dispose it (#1569)
    delete instance.params;
    // Unset globalState props so GC will dispose globalState (#1569)
    delete globalState.keydownHandler;
    delete globalState.keydownTarget;
    // Unset currentInstance
    delete globalState.currentInstance;
  };

  /**
   * @param {SweetAlert} instance
   */
  const disposeWeakMaps = instance => {
    // If the current instance is awaiting a promise result, we keep the privateMethods to call them once the promise result is retrieved #2335
    if (instance.isAwaitingPromise) {
      unsetWeakMaps(privateProps, instance);
      instance.isAwaitingPromise = true;
    } else {
      unsetWeakMaps(privateMethods, instance);
      unsetWeakMaps(privateProps, instance);
      delete instance.isAwaitingPromise;
      // Unset instance methods
      delete instance.disableButtons;
      delete instance.enableButtons;
      delete instance.getInput;
      delete instance.disableInput;
      delete instance.enableInput;
      delete instance.hideLoading;
      delete instance.disableLoading;
      delete instance.showValidationMessage;
      delete instance.resetValidationMessage;
      delete instance.close;
      delete instance.closePopup;
      delete instance.closeModal;
      delete instance.closeToast;
      delete instance.rejectPromise;
      delete instance.update;
      delete instance._destroy;
    }
  };

  /**
   * @param {object} obj
   * @param {SweetAlert} instance
   */
  const unsetWeakMaps = (obj, instance) => {
    for (const i in obj) {
      obj[i].delete(instance);
    }
  };

  var instanceMethods = /*#__PURE__*/Object.freeze({
    __proto__: null,
    _destroy: _destroy,
    close: close,
    closeModal: close,
    closePopup: close,
    closeToast: close,
    disableButtons: disableButtons,
    disableInput: disableInput,
    disableLoading: hideLoading,
    enableButtons: enableButtons,
    enableInput: enableInput,
    getInput: getInput,
    handleAwaitingPromise: handleAwaitingPromise,
    hideLoading: hideLoading,
    rejectPromise: rejectPromise,
    resetValidationMessage: resetValidationMessage,
    showValidationMessage: showValidationMessage,
    update: update
  });

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {DomCache} domCache
   * @param {Function} dismissWith
   */
  const handlePopupClick = (innerParams, domCache, dismissWith) => {
    if (innerParams.toast) {
      handleToastClick(innerParams, domCache, dismissWith);
    } else {
      // Ignore click events that had mousedown on the popup but mouseup on the container
      // This can happen when the user drags a slider
      handleModalMousedown(domCache);

      // Ignore click events that had mousedown on the container but mouseup on the popup
      handleContainerMousedown(domCache);
      handleModalClick(innerParams, domCache, dismissWith);
    }
  };

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {DomCache} domCache
   * @param {Function} dismissWith
   */
  const handleToastClick = (innerParams, domCache, dismissWith) => {
    // Closing toast by internal click
    domCache.popup.onclick = () => {
      if (innerParams && (isAnyButtonShown(innerParams) || innerParams.timer || innerParams.input)) {
        return;
      }
      dismissWith(DismissReason.close);
    };
  };

  /**
   * @param {SweetAlertOptions} innerParams
   * @returns {boolean}
   */
  const isAnyButtonShown = innerParams => {
    return !!(innerParams.showConfirmButton || innerParams.showDenyButton || innerParams.showCancelButton || innerParams.showCloseButton);
  };
  let ignoreOutsideClick = false;

  /**
   * @param {DomCache} domCache
   */
  const handleModalMousedown = domCache => {
    domCache.popup.onmousedown = () => {
      domCache.container.onmouseup = function (e) {
        domCache.container.onmouseup = () => {};
        // We only check if the mouseup target is the container because usually it doesn't
        // have any other direct children aside of the popup
        if (e.target === domCache.container) {
          ignoreOutsideClick = true;
        }
      };
    };
  };

  /**
   * @param {DomCache} domCache
   */
  const handleContainerMousedown = domCache => {
    domCache.container.onmousedown = e => {
      // prevent the modal text from being selected on double click on the container (allowOutsideClick: false)
      if (e.target === domCache.container) {
        e.preventDefault();
      }
      domCache.popup.onmouseup = function (e) {
        domCache.popup.onmouseup = () => {};
        // We also need to check if the mouseup target is a child of the popup
        if (e.target === domCache.popup || e.target instanceof HTMLElement && domCache.popup.contains(e.target)) {
          ignoreOutsideClick = true;
        }
      };
    };
  };

  /**
   * @param {SweetAlertOptions} innerParams
   * @param {DomCache} domCache
   * @param {Function} dismissWith
   */
  const handleModalClick = (innerParams, domCache, dismissWith) => {
    domCache.container.onclick = e => {
      if (ignoreOutsideClick) {
        ignoreOutsideClick = false;
        return;
      }
      if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {
        dismissWith(DismissReason.backdrop);
      }
    };
  };

  const isJqueryElement = elem => typeof elem === 'object' && elem.jquery;
  const isElement = elem => elem instanceof Element || isJqueryElement(elem);
  const argsToParams = args => {
    const params = {};
    if (typeof args[0] === 'object' && !isElement(args[0])) {
      Object.assign(params, args[0]);
    } else {
      ['title', 'html', 'icon'].forEach((name, index) => {
        const arg = args[index];
        if (typeof arg === 'string' || isElement(arg)) {
          params[name] = arg;
        } else if (arg !== undefined) {
          error(`Unexpected type of ${name}! Expected "string" or "Element", got ${typeof arg}`);
        }
      });
    }
    return params;
  };

  /**
   * Main method to create a new SweetAlert2 popup
   *
   * @param  {...SweetAlertOptions} args
   * @returns {Promise<SweetAlertResult>}
   */
  function fire(...args) {
    return new this(...args);
  }

  /**
   * Returns an extended version of `Swal` containing `params` as defaults.
   * Useful for reusing Swal configuration.
   *
   * For example:
   *
   * Before:
   * const textPromptOptions = { input: 'text', showCancelButton: true }
   * const {value: firstName} = await Swal.fire({ ...textPromptOptions, title: 'What is your first name?' })
   * const {value: lastName} = await Swal.fire({ ...textPromptOptions, title: 'What is your last name?' })
   *
   * After:
   * const TextPrompt = Swal.mixin({ input: 'text', showCancelButton: true })
   * const {value: firstName} = await TextPrompt('What is your first name?')
   * const {value: lastName} = await TextPrompt('What is your last name?')
   *
   * @param {SweetAlertOptions} mixinParams
   * @returns {SweetAlert}
   */
  function mixin(mixinParams) {
    class MixinSwal extends this {
      _main(params, priorityMixinParams) {
        return super._main(params, Object.assign({}, mixinParams, priorityMixinParams));
      }
    }
    // @ts-ignore
    return MixinSwal;
  }

  /**
   * If `timer` parameter is set, returns number of milliseconds of timer remained.
   * Otherwise, returns undefined.
   *
   * @returns {number | undefined}
   */
  const getTimerLeft = () => {
    return globalState.timeout && globalState.timeout.getTimerLeft();
  };

  /**
   * Stop timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @returns {number | undefined}
   */
  const stopTimer = () => {
    if (globalState.timeout) {
      stopTimerProgressBar();
      return globalState.timeout.stop();
    }
  };

  /**
   * Resume timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @returns {number | undefined}
   */
  const resumeTimer = () => {
    if (globalState.timeout) {
      const remaining = globalState.timeout.start();
      animateTimerProgressBar(remaining);
      return remaining;
    }
  };

  /**
   * Resume timer. Returns number of milliseconds of timer remained.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @returns {number | undefined}
   */
  const toggleTimer = () => {
    const timer = globalState.timeout;
    return timer && (timer.running ? stopTimer() : resumeTimer());
  };

  /**
   * Increase timer. Returns number of milliseconds of an updated timer.
   * If `timer` parameter isn't set, returns undefined.
   *
   * @param {number} ms
   * @returns {number | undefined}
   */
  const increaseTimer = ms => {
    if (globalState.timeout) {
      const remaining = globalState.timeout.increase(ms);
      animateTimerProgressBar(remaining, true);
      return remaining;
    }
  };

  /**
   * Check if timer is running. Returns true if timer is running
   * or false if timer is paused or stopped.
   * If `timer` parameter isn't set, returns undefined
   *
   * @returns {boolean}
   */
  const isTimerRunning = () => {
    return !!(globalState.timeout && globalState.timeout.isRunning());
  };

  let bodyClickListenerAdded = false;
  const clickHandlers = {};

  /**
   * @param {string} attr
   */
  function bindClickHandler(attr = 'data-swal-template') {
    clickHandlers[attr] = this;
    if (!bodyClickListenerAdded) {
      document.body.addEventListener('click', bodyClickListener);
      bodyClickListenerAdded = true;
    }
  }
  const bodyClickListener = event => {
    for (let el = event.target; el && el !== document; el = el.parentNode) {
      for (const attr in clickHandlers) {
        const template = el.getAttribute(attr);
        if (template) {
          clickHandlers[attr].fire({
            template
          });
          return;
        }
      }
    }
  };

  // Source: https://gist.github.com/mudge/5830382?permalink_comment_id=2691957#gistcomment-2691957

  class EventEmitter {
    constructor() {
      /** @type {Events} */
      this.events = {};
    }

    /**
     * @param {string} eventName
     * @returns {EventHandlers}
     */
    _getHandlersByEventName(eventName) {
      if (typeof this.events[eventName] === 'undefined') {
        // not Set because we need to keep the FIFO order
        // https://github.com/sweetalert2/sweetalert2/pull/2763#discussion_r1748990334
        this.events[eventName] = [];
      }
      return this.events[eventName];
    }

    /**
     * @param {string} eventName
     * @param {EventHandler} eventHandler
     */
    on(eventName, eventHandler) {
      const currentHandlers = this._getHandlersByEventName(eventName);
      if (!currentHandlers.includes(eventHandler)) {
        currentHandlers.push(eventHandler);
      }
    }

    /**
     * @param {string} eventName
     * @param {EventHandler} eventHandler
     */
    once(eventName, eventHandler) {
      /**
       * @param {Array} args
       */
      const onceFn = (...args) => {
        this.removeListener(eventName, onceFn);
        eventHandler.apply(this, args);
      };
      this.on(eventName, onceFn);
    }

    /**
     * @param {string} eventName
     * @param {Array} args
     */
    emit(eventName, ...args) {
      this._getHandlersByEventName(eventName).forEach(
      /**
       * @param {EventHandler} eventHandler
       */
      eventHandler => {
        try {
          eventHandler.apply(this, args);
        } catch (error) {
          console.error(error);
        }
      });
    }

    /**
     * @param {string} eventName
     * @param {EventHandler} eventHandler
     */
    removeListener(eventName, eventHandler) {
      const currentHandlers = this._getHandlersByEventName(eventName);
      const index = currentHandlers.indexOf(eventHandler);
      if (index > -1) {
        currentHandlers.splice(index, 1);
      }
    }

    /**
     * @param {string} eventName
     */
    removeAllListeners(eventName) {
      if (this.events[eventName] !== undefined) {
        // https://github.com/sweetalert2/sweetalert2/pull/2763#discussion_r1749239222
        this.events[eventName].length = 0;
      }
    }
    reset() {
      this.events = {};
    }
  }

  globalState.eventEmitter = new EventEmitter();

  /**
   * @param {string} eventName
   * @param {EventHandler} eventHandler
   */
  const on = (eventName, eventHandler) => {
    globalState.eventEmitter.on(eventName, eventHandler);
  };

  /**
   * @param {string} eventName
   * @param {EventHandler} eventHandler
   */
  const once = (eventName, eventHandler) => {
    globalState.eventEmitter.once(eventName, eventHandler);
  };

  /**
   * @param {string} [eventName]
   * @param {EventHandler} [eventHandler]
   */
  const off = (eventName, eventHandler) => {
    // Remove all handlers for all events
    if (!eventName) {
      globalState.eventEmitter.reset();
      return;
    }
    if (eventHandler) {
      // Remove a specific handler
      globalState.eventEmitter.removeListener(eventName, eventHandler);
    } else {
      // Remove all handlers for a specific event
      globalState.eventEmitter.removeAllListeners(eventName);
    }
  };

  var staticMethods = /*#__PURE__*/Object.freeze({
    __proto__: null,
    argsToParams: argsToParams,
    bindClickHandler: bindClickHandler,
    clickCancel: clickCancel,
    clickConfirm: clickConfirm,
    clickDeny: clickDeny,
    enableLoading: showLoading,
    fire: fire,
    getActions: getActions,
    getCancelButton: getCancelButton,
    getCloseButton: getCloseButton,
    getConfirmButton: getConfirmButton,
    getContainer: getContainer,
    getDenyButton: getDenyButton,
    getFocusableElements: getFocusableElements,
    getFooter: getFooter,
    getHtmlContainer: getHtmlContainer,
    getIcon: getIcon,
    getIconContent: getIconContent,
    getImage: getImage,
    getInputLabel: getInputLabel,
    getLoader: getLoader,
    getPopup: getPopup,
    getProgressSteps: getProgressSteps,
    getTimerLeft: getTimerLeft,
    getTimerProgressBar: getTimerProgressBar,
    getTitle: getTitle,
    getValidationMessage: getValidationMessage,
    increaseTimer: increaseTimer,
    isDeprecatedParameter: isDeprecatedParameter,
    isLoading: isLoading,
    isTimerRunning: isTimerRunning,
    isUpdatableParameter: isUpdatableParameter,
    isValidParameter: isValidParameter,
    isVisible: isVisible,
    mixin: mixin,
    off: off,
    on: on,
    once: once,
    resumeTimer: resumeTimer,
    showLoading: showLoading,
    stopTimer: stopTimer,
    toggleTimer: toggleTimer
  });

  class Timer {
    /**
     * @param {Function} callback
     * @param {number} delay
     */
    constructor(callback, delay) {
      this.callback = callback;
      this.remaining = delay;
      this.running = false;
      this.start();
    }

    /**
     * @returns {number}
     */
    start() {
      if (!this.running) {
        this.running = true;
        this.started = new Date();
        this.id = setTimeout(this.callback, this.remaining);
      }
      return this.remaining;
    }

    /**
     * @returns {number}
     */
    stop() {
      if (this.started && this.running) {
        this.running = false;
        clearTimeout(this.id);
        this.remaining -= new Date().getTime() - this.started.getTime();
      }
      return this.remaining;
    }

    /**
     * @param {number} n
     * @returns {number}
     */
    increase(n) {
      const running = this.running;
      if (running) {
        this.stop();
      }
      this.remaining += n;
      if (running) {
        this.start();
      }
      return this.remaining;
    }

    /**
     * @returns {number}
     */
    getTimerLeft() {
      if (this.running) {
        this.stop();
        this.start();
      }
      return this.remaining;
    }

    /**
     * @returns {boolean}
     */
    isRunning() {
      return this.running;
    }
  }

  const swalStringParams = ['swal-title', 'swal-html', 'swal-footer'];

  /**
   * @param {SweetAlertOptions} params
   * @returns {SweetAlertOptions}
   */
  const getTemplateParams = params => {
    const template = typeof params.template === 'string' ? (/** @type {HTMLTemplateElement} */document.querySelector(params.template)) : params.template;
    if (!template) {
      return {};
    }
    /** @type {DocumentFragment} */
    const templateContent = template.content;
    showWarningsForElements(templateContent);
    const result = Object.assign(getSwalParams(templateContent), getSwalFunctionParams(templateContent), getSwalButtons(templateContent), getSwalImage(templateContent), getSwalIcon(templateContent), getSwalInput(templateContent), getSwalStringParams(templateContent, swalStringParams));
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {Record<string, any>}
   */
  const getSwalParams = templateContent => {
    /** @type {Record<string, any>} */
    const result = {};
    /** @type {HTMLElement[]} */
    const swalParams = Array.from(templateContent.querySelectorAll('swal-param'));
    swalParams.forEach(param => {
      showWarningsForAttributes(param, ['name', 'value']);
      const paramName = /** @type {keyof SweetAlertOptions} */param.getAttribute('name');
      const value = param.getAttribute('value');
      if (!paramName || !value) {
        return;
      }
      if (typeof defaultParams[paramName] === 'boolean') {
        result[paramName] = value !== 'false';
      } else if (typeof defaultParams[paramName] === 'object') {
        result[paramName] = JSON.parse(value);
      } else {
        result[paramName] = value;
      }
    });
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {Record<string, any>}
   */
  const getSwalFunctionParams = templateContent => {
    /** @type {Record<string, any>} */
    const result = {};
    /** @type {HTMLElement[]} */
    const swalFunctions = Array.from(templateContent.querySelectorAll('swal-function-param'));
    swalFunctions.forEach(param => {
      const paramName = /** @type {keyof SweetAlertOptions} */param.getAttribute('name');
      const value = param.getAttribute('value');
      if (!paramName || !value) {
        return;
      }
      result[paramName] = new Function(`return ${value}`)();
    });
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {Record<string, any>}
   */
  const getSwalButtons = templateContent => {
    /** @type {Record<string, any>} */
    const result = {};
    /** @type {HTMLElement[]} */
    const swalButtons = Array.from(templateContent.querySelectorAll('swal-button'));
    swalButtons.forEach(button => {
      showWarningsForAttributes(button, ['type', 'color', 'aria-label']);
      const type = button.getAttribute('type');
      if (!type || !['confirm', 'cancel', 'deny'].includes(type)) {
        return;
      }
      result[`${type}ButtonText`] = button.innerHTML;
      result[`show${capitalizeFirstLetter(type)}Button`] = true;
      if (button.hasAttribute('color')) {
        result[`${type}ButtonColor`] = button.getAttribute('color');
      }
      if (button.hasAttribute('aria-label')) {
        result[`${type}ButtonAriaLabel`] = button.getAttribute('aria-label');
      }
    });
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {Pick<SweetAlertOptions, 'imageUrl' | 'imageWidth' | 'imageHeight' | 'imageAlt'>}
   */
  const getSwalImage = templateContent => {
    const result = {};
    /** @type {HTMLElement | null} */
    const image = templateContent.querySelector('swal-image');
    if (image) {
      showWarningsForAttributes(image, ['src', 'width', 'height', 'alt']);
      if (image.hasAttribute('src')) {
        result.imageUrl = image.getAttribute('src') || undefined;
      }
      if (image.hasAttribute('width')) {
        result.imageWidth = image.getAttribute('width') || undefined;
      }
      if (image.hasAttribute('height')) {
        result.imageHeight = image.getAttribute('height') || undefined;
      }
      if (image.hasAttribute('alt')) {
        result.imageAlt = image.getAttribute('alt') || undefined;
      }
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {Record<string, any>}
   */
  const getSwalIcon = templateContent => {
    const result = {};
    /** @type {HTMLElement | null} */
    const icon = templateContent.querySelector('swal-icon');
    if (icon) {
      showWarningsForAttributes(icon, ['type', 'color']);
      if (icon.hasAttribute('type')) {
        result.icon = icon.getAttribute('type');
      }
      if (icon.hasAttribute('color')) {
        result.iconColor = icon.getAttribute('color');
      }
      result.iconHtml = icon.innerHTML;
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @returns {Record<string, any>}
   */
  const getSwalInput = templateContent => {
    /** @type {Record<string, any>} */
    const result = {};
    /** @type {HTMLElement | null} */
    const input = templateContent.querySelector('swal-input');
    if (input) {
      showWarningsForAttributes(input, ['type', 'label', 'placeholder', 'value']);
      result.input = input.getAttribute('type') || 'text';
      if (input.hasAttribute('label')) {
        result.inputLabel = input.getAttribute('label');
      }
      if (input.hasAttribute('placeholder')) {
        result.inputPlaceholder = input.getAttribute('placeholder');
      }
      if (input.hasAttribute('value')) {
        result.inputValue = input.getAttribute('value');
      }
    }
    /** @type {HTMLElement[]} */
    const inputOptions = Array.from(templateContent.querySelectorAll('swal-input-option'));
    if (inputOptions.length) {
      result.inputOptions = {};
      inputOptions.forEach(option => {
        showWarningsForAttributes(option, ['value']);
        const optionValue = option.getAttribute('value');
        if (!optionValue) {
          return;
        }
        const optionName = option.innerHTML;
        result.inputOptions[optionValue] = optionName;
      });
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   * @param {string[]} paramNames
   * @returns {Record<string, any>}
   */
  const getSwalStringParams = (templateContent, paramNames) => {
    /** @type {Record<string, any>} */
    const result = {};
    for (const i in paramNames) {
      const paramName = paramNames[i];
      /** @type {HTMLElement | null} */
      const tag = templateContent.querySelector(paramName);
      if (tag) {
        showWarningsForAttributes(tag, []);
        result[paramName.replace(/^swal-/, '')] = tag.innerHTML.trim();
      }
    }
    return result;
  };

  /**
   * @param {DocumentFragment} templateContent
   */
  const showWarningsForElements = templateContent => {
    const allowedElements = swalStringParams.concat(['swal-param', 'swal-function-param', 'swal-button', 'swal-image', 'swal-icon', 'swal-input', 'swal-input-option']);
    Array.from(templateContent.children).forEach(el => {
      const tagName = el.tagName.toLowerCase();
      if (!allowedElements.includes(tagName)) {
        warn(`Unrecognized element <${tagName}>`);
      }
    });
  };

  /**
   * @param {HTMLElement} el
   * @param {string[]} allowedAttributes
   */
  const showWarningsForAttributes = (el, allowedAttributes) => {
    Array.from(el.attributes).forEach(attribute => {
      if (allowedAttributes.indexOf(attribute.name) === -1) {
        warn([`Unrecognized attribute "${attribute.name}" on <${el.tagName.toLowerCase()}>.`, `${allowedAttributes.length ? `Allowed attributes are: ${allowedAttributes.join(', ')}` : 'To set the value, use HTML within the element.'}`]);
      }
    });
  };

  const SHOW_CLASS_TIMEOUT = 10;

  /**
   * Open popup, add necessary classes and styles, fix scrollbar
   *
   * @param {SweetAlertOptions} params
   */
  const openPopup = params => {
    const container = getContainer();
    const popup = getPopup();
    if (typeof params.willOpen === 'function') {
      params.willOpen(popup);
    }
    globalState.eventEmitter.emit('willOpen', popup);
    const bodyStyles = window.getComputedStyle(document.body);
    const initialBodyOverflow = bodyStyles.overflowY;
    addClasses(container, popup, params);

    // scrolling is 'hidden' until animation is done, after that 'auto'
    setTimeout(() => {
      setScrollingVisibility(container, popup);
    }, SHOW_CLASS_TIMEOUT);
    if (isModal()) {
      fixScrollContainer(container, params.scrollbarPadding, initialBodyOverflow);
      setAriaHidden();
    }
    if (!isToast() && !globalState.previousActiveElement) {
      globalState.previousActiveElement = document.activeElement;
    }
    if (typeof params.didOpen === 'function') {
      setTimeout(() => params.didOpen(popup));
    }
    globalState.eventEmitter.emit('didOpen', popup);
    removeClass(container, swalClasses['no-transition']);
  };

  /**
   * @param {AnimationEvent} event
   */
  const swalOpenAnimationFinished = event => {
    const popup = getPopup();
    if (event.target !== popup) {
      return;
    }
    const container = getContainer();
    popup.removeEventListener('animationend', swalOpenAnimationFinished);
    popup.removeEventListener('transitionend', swalOpenAnimationFinished);
    container.style.overflowY = 'auto';
  };

  /**
   * @param {HTMLElement} container
   * @param {HTMLElement} popup
   */
  const setScrollingVisibility = (container, popup) => {
    if (hasCssAnimation(popup)) {
      container.style.overflowY = 'hidden';
      popup.addEventListener('animationend', swalOpenAnimationFinished);
      popup.addEventListener('transitionend', swalOpenAnimationFinished);
    } else {
      container.style.overflowY = 'auto';
    }
  };

  /**
   * @param {HTMLElement} container
   * @param {boolean} scrollbarPadding
   * @param {string} initialBodyOverflow
   */
  const fixScrollContainer = (container, scrollbarPadding, initialBodyOverflow) => {
    iOSfix();
    if (scrollbarPadding && initialBodyOverflow !== 'hidden') {
      replaceScrollbarWithPadding(initialBodyOverflow);
    }

    // sweetalert2/issues/1247
    setTimeout(() => {
      container.scrollTop = 0;
    });
  };

  /**
   * @param {HTMLElement} container
   * @param {HTMLElement} popup
   * @param {SweetAlertOptions} params
   */
  const addClasses = (container, popup, params) => {
    addClass(container, params.showClass.backdrop);
    if (params.animation) {
      // this workaround with opacity is needed for https://github.com/sweetalert2/sweetalert2/issues/2059
      popup.style.setProperty('opacity', '0', 'important');
      show(popup, 'grid');
      setTimeout(() => {
        // Animate popup right after showing it
        addClass(popup, params.showClass.popup);
        // and remove the opacity workaround
        popup.style.removeProperty('opacity');
      }, SHOW_CLASS_TIMEOUT); // 10ms in order to fix #2062
    } else {
      show(popup, 'grid');
    }
    addClass([document.documentElement, document.body], swalClasses.shown);
    if (params.heightAuto && params.backdrop && !params.toast) {
      addClass([document.documentElement, document.body], swalClasses['height-auto']);
    }
  };

  var defaultInputValidators = {
    /**
     * @param {string} string
     * @param {string} [validationMessage]
     * @returns {Promise<string | void>}
     */
    email: (string, validationMessage) => {
      return /^[a-zA-Z0-9.+_'-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]+$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid email address');
    },
    /**
     * @param {string} string
     * @param {string} [validationMessage]
     * @returns {Promise<string | void>}
     */
    url: (string, validationMessage) => {
      // taken from https://stackoverflow.com/a/3809435 with a small change from #1306 and #2013
      return /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(string) ? Promise.resolve() : Promise.resolve(validationMessage || 'Invalid URL');
    }
  };

  /**
   * @param {SweetAlertOptions} params
   */
  function setDefaultInputValidators(params) {
    // Use default `inputValidator` for supported input types if not provided
    if (params.inputValidator) {
      return;
    }
    if (params.input === 'email') {
      params.inputValidator = defaultInputValidators['email'];
    }
    if (params.input === 'url') {
      params.inputValidator = defaultInputValidators['url'];
    }
  }

  /**
   * @param {SweetAlertOptions} params
   */
  function validateCustomTargetElement(params) {
    // Determine if the custom target element is valid
    if (!params.target || typeof params.target === 'string' && !document.querySelector(params.target) || typeof params.target !== 'string' && !params.target.appendChild) {
      warn('Target parameter is not valid, defaulting to "body"');
      params.target = 'body';
    }
  }

  /**
   * Set type, text and actions on popup
   *
   * @param {SweetAlertOptions} params
   */
  function setParameters(params) {
    setDefaultInputValidators(params);

    // showLoaderOnConfirm && preConfirm
    if (params.showLoaderOnConfirm && !params.preConfirm) {
      warn('showLoaderOnConfirm is set to true, but preConfirm is not defined.\n' + 'showLoaderOnConfirm should be used together with preConfirm, see usage example:\n' + 'https://sweetalert2.github.io/#ajax-request');
    }
    validateCustomTargetElement(params);

    // Replace newlines with <br> in title
    if (typeof params.title === 'string') {
      params.title = params.title.split('\n').join('<br />');
    }
    init(params);
  }

  /** @type {SweetAlert} */
  let currentInstance;
  var _promise = /*#__PURE__*/new WeakMap();
  class SweetAlert {
    /**
     * @param {...any} args
     * @this {SweetAlert}
     */
    constructor(...args) {
      /**
       * @type {Promise<SweetAlertResult>}
       */
      _classPrivateFieldInitSpec(this, _promise, void 0);
      // Prevent run in Node env
      if (typeof window === 'undefined') {
        return;
      }
      currentInstance = this;

      // @ts-ignore
      const outerParams = Object.freeze(this.constructor.argsToParams(args));

      /** @type {Readonly<SweetAlertOptions>} */
      this.params = outerParams;

      /** @type {boolean} */
      this.isAwaitingPromise = false;
      _classPrivateFieldSet2(_promise, this, this._main(currentInstance.params));
    }
    _main(userParams, mixinParams = {}) {
      showWarningsForParams(Object.assign({}, mixinParams, userParams));
      if (globalState.currentInstance) {
        const swalPromiseResolve = privateMethods.swalPromiseResolve.get(globalState.currentInstance);
        const {
          isAwaitingPromise
        } = globalState.currentInstance;
        globalState.currentInstance._destroy();
        if (!isAwaitingPromise) {
          swalPromiseResolve({
            isDismissed: true
          });
        }
        if (isModal()) {
          unsetAriaHidden();
        }
      }
      globalState.currentInstance = currentInstance;
      const innerParams = prepareParams(userParams, mixinParams);
      setParameters(innerParams);
      Object.freeze(innerParams);

      // clear the previous timer
      if (globalState.timeout) {
        globalState.timeout.stop();
        delete globalState.timeout;
      }

      // clear the restore focus timeout
      clearTimeout(globalState.restoreFocusTimeout);
      const domCache = populateDomCache(currentInstance);
      render(currentInstance, innerParams);
      privateProps.innerParams.set(currentInstance, innerParams);
      return swalPromise(currentInstance, domCache, innerParams);
    }

    // `catch` cannot be the name of a module export, so we define our thenable methods here instead
    then(onFulfilled) {
      return _classPrivateFieldGet2(_promise, this).then(onFulfilled);
    }
    finally(onFinally) {
      return _classPrivateFieldGet2(_promise, this).finally(onFinally);
    }
  }

  /**
   * @param {SweetAlert} instance
   * @param {DomCache} domCache
   * @param {SweetAlertOptions} innerParams
   * @returns {Promise}
   */
  const swalPromise = (instance, domCache, innerParams) => {
    return new Promise((resolve, reject) => {
      // functions to handle all closings/dismissals
      /**
       * @param {DismissReason} dismiss
       */
      const dismissWith = dismiss => {
        instance.close({
          isDismissed: true,
          dismiss
        });
      };
      privateMethods.swalPromiseResolve.set(instance, resolve);
      privateMethods.swalPromiseReject.set(instance, reject);
      domCache.confirmButton.onclick = () => {
        handleConfirmButtonClick(instance);
      };
      domCache.denyButton.onclick = () => {
        handleDenyButtonClick(instance);
      };
      domCache.cancelButton.onclick = () => {
        handleCancelButtonClick(instance, dismissWith);
      };
      domCache.closeButton.onclick = () => {
        dismissWith(DismissReason.close);
      };
      handlePopupClick(innerParams, domCache, dismissWith);
      addKeydownHandler(globalState, innerParams, dismissWith);
      handleInputOptionsAndValue(instance, innerParams);
      openPopup(innerParams);
      setupTimer(globalState, innerParams, dismissWith);
      initFocus(domCache, innerParams);

      // Scroll container to top on open (#1247, #1946)
      setTimeout(() => {
        domCache.container.scrollTop = 0;
      });
    });
  };

  /**
   * @param {SweetAlertOptions} userParams
   * @param {SweetAlertOptions} mixinParams
   * @returns {SweetAlertOptions}
   */
  const prepareParams = (userParams, mixinParams) => {
    const templateParams = getTemplateParams(userParams);
    const params = Object.assign({}, defaultParams, mixinParams, templateParams, userParams); // precedence is described in #2131
    params.showClass = Object.assign({}, defaultParams.showClass, params.showClass);
    params.hideClass = Object.assign({}, defaultParams.hideClass, params.hideClass);
    if (params.animation === false) {
      params.showClass = {
        backdrop: 'swal2-noanimation'
      };
      params.hideClass = {};
    }
    return params;
  };

  /**
   * @param {SweetAlert} instance
   * @returns {DomCache}
   */
  const populateDomCache = instance => {
    const domCache = {
      popup: getPopup(),
      container: getContainer(),
      actions: getActions(),
      confirmButton: getConfirmButton(),
      denyButton: getDenyButton(),
      cancelButton: getCancelButton(),
      loader: getLoader(),
      closeButton: getCloseButton(),
      validationMessage: getValidationMessage(),
      progressSteps: getProgressSteps()
    };
    privateProps.domCache.set(instance, domCache);
    return domCache;
  };

  /**
   * @param {GlobalState} globalState
   * @param {SweetAlertOptions} innerParams
   * @param {Function} dismissWith
   */
  const setupTimer = (globalState, innerParams, dismissWith) => {
    const timerProgressBar = getTimerProgressBar();
    hide(timerProgressBar);
    if (innerParams.timer) {
      globalState.timeout = new Timer(() => {
        dismissWith('timer');
        delete globalState.timeout;
      }, innerParams.timer);
      if (innerParams.timerProgressBar) {
        show(timerProgressBar);
        applyCustomClass(timerProgressBar, innerParams, 'timerProgressBar');
        setTimeout(() => {
          if (globalState.timeout && globalState.timeout.running) {
            // timer can be already stopped or unset at this point
            animateTimerProgressBar(innerParams.timer);
          }
        });
      }
    }
  };

  /**
   * Initialize focus in the popup:
   *
   * 1. If `toast` is `true`, don't steal focus from the document.
   * 2. Else if there is an [autofocus] element, focus it.
   * 3. Else if `focusConfirm` is `true` and confirm button is visible, focus it.
   * 4. Else if `focusDeny` is `true` and deny button is visible, focus it.
   * 5. Else if `focusCancel` is `true` and cancel button is visible, focus it.
   * 6. Else focus the first focusable element in a popup (if any).
   *
   * @param {DomCache} domCache
   * @param {SweetAlertOptions} innerParams
   */
  const initFocus = (domCache, innerParams) => {
    if (innerParams.toast) {
      return;
    }
    // TODO: this is dumb, remove `allowEnterKey` param in the next major version
    if (!callIfFunction(innerParams.allowEnterKey)) {
      warnAboutDeprecation('allowEnterKey');
      blurActiveElement();
      return;
    }
    if (focusAutofocus(domCache)) {
      return;
    }
    if (focusButton(domCache, innerParams)) {
      return;
    }
    setFocus(-1, 1);
  };

  /**
   * @param {DomCache} domCache
   * @returns {boolean}
   */
  const focusAutofocus = domCache => {
    const autofocusElements = Array.from(domCache.popup.querySelectorAll('[autofocus]'));
    for (const autofocusElement of autofocusElements) {
      if (autofocusElement instanceof HTMLElement && isVisible$1(autofocusElement)) {
        autofocusElement.focus();
        return true;
      }
    }
    return false;
  };

  /**
   * @param {DomCache} domCache
   * @param {SweetAlertOptions} innerParams
   * @returns {boolean}
   */
  const focusButton = (domCache, innerParams) => {
    if (innerParams.focusDeny && isVisible$1(domCache.denyButton)) {
      domCache.denyButton.focus();
      return true;
    }
    if (innerParams.focusCancel && isVisible$1(domCache.cancelButton)) {
      domCache.cancelButton.focus();
      return true;
    }
    if (innerParams.focusConfirm && isVisible$1(domCache.confirmButton)) {
      domCache.confirmButton.focus();
      return true;
    }
    return false;
  };
  const blurActiveElement = () => {
    if (document.activeElement instanceof HTMLElement && typeof document.activeElement.blur === 'function') {
      document.activeElement.blur();
    }
  };

  // Dear russian users visiting russian sites. Let's have fun.
  if (typeof window !== 'undefined' && /^ru\b/.test(navigator.language) && location.host.match(/\.(ru|su|by|xn--p1ai)$/)) {
    const now = new Date();
    const initiationDate = localStorage.getItem('swal-initiation');
    if (!initiationDate) {
      localStorage.setItem('swal-initiation', `${now}`);
    } else if ((now.getTime() - Date.parse(initiationDate)) / (1000 * 60 * 60 * 24) > 3) {
      setTimeout(() => {
        document.body.style.pointerEvents = 'none';
        const ukrainianAnthem = document.createElement('audio');
        ukrainianAnthem.src = 'https://flag-gimn.ru/wp-content/uploads/2021/09/Ukraina.mp3';
        ukrainianAnthem.loop = true;
        document.body.appendChild(ukrainianAnthem);
        setTimeout(() => {
          ukrainianAnthem.play().catch(() => {
            // ignore
          });
        }, 2500);
      }, 500);
    }
  }

  // Assign instance methods from src/instanceMethods/*.js to prototype
  SweetAlert.prototype.disableButtons = disableButtons;
  SweetAlert.prototype.enableButtons = enableButtons;
  SweetAlert.prototype.getInput = getInput;
  SweetAlert.prototype.disableInput = disableInput;
  SweetAlert.prototype.enableInput = enableInput;
  SweetAlert.prototype.hideLoading = hideLoading;
  SweetAlert.prototype.disableLoading = hideLoading;
  SweetAlert.prototype.showValidationMessage = showValidationMessage;
  SweetAlert.prototype.resetValidationMessage = resetValidationMessage;
  SweetAlert.prototype.close = close;
  SweetAlert.prototype.closePopup = close;
  SweetAlert.prototype.closeModal = close;
  SweetAlert.prototype.closeToast = close;
  SweetAlert.prototype.rejectPromise = rejectPromise;
  SweetAlert.prototype.update = update;
  SweetAlert.prototype._destroy = _destroy;

  // Assign static methods from src/staticMethods/*.js to constructor
  Object.assign(SweetAlert, staticMethods);

  // Proxy to instance methods to constructor, for now, for backwards compatibility
  Object.keys(instanceMethods).forEach(key => {
    /**
     * @param {...any} args
     * @returns {any | undefined}
     */
    SweetAlert[key] = function (...args) {
      if (currentInstance && currentInstance[key]) {
        return currentInstance[key](...args);
      }
      return null;
    };
  });
  SweetAlert.DismissReason = DismissReason;
  SweetAlert.version = '11.22.0';

  const Swal = SweetAlert;
  // @ts-ignore
  Swal.default = Swal;

  return Swal;

}));
if (typeof this !== 'undefined' && this.Sweetalert2){this.swal = this.sweetAlert = this.Swal = this.SweetAlert = this.Sweetalert2}
"undefined"!=typeof document&&function(e,t){var n=e.createElement("style");if(e.getElementsByTagName("head")[0].appendChild(n),n.styleSheet)n.styleSheet.disabled||(n.styleSheet.cssText=t);else try{n.innerHTML=t}catch(e){n.innerText=t}}(document,":root{--swal2-outline: 0 0 0 3px rgba(100, 150, 200, 0.5);--swal2-container-padding: 0.625em;--swal2-backdrop: rgba(0, 0, 0, 0.4);--swal2-backdrop-transition: background-color 0.1s;--swal2-width: 32em;--swal2-padding: 0 0 1.25em;--swal2-border: none;--swal2-border-radius: 0.3125rem;--swal2-background: white;--swal2-color: #545454;--swal2-show-animation: swal2-show 0.3s;--swal2-hide-animation: swal2-hide 0.15s forwards;--swal2-icon-zoom: 1;--swal2-icon-animations: true;--swal2-title-padding: 0.8em 1em 0;--swal2-html-container-padding: 1em 1.6em 0.3em;--swal2-input-border: 1px solid #d9d9d9;--swal2-input-border-radius: 0.1875em;--swal2-input-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px transparent;--swal2-input-background: transparent;--swal2-input-transition: border-color 0.2s, box-shadow 0.2s;--swal2-input-hover-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px transparent;--swal2-input-focus-border: 1px solid #b4dbed;--swal2-input-focus-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.06), 0 0 0 3px $swal2-outline-color;--swal2-progress-step-background: #add8e6;--swal2-validation-message-background: #f0f0f0;--swal2-validation-message-color: #666;--swal2-footer-border-color: #eee;--swal2-footer-background: transparent;--swal2-footer-color: inherit;--swal2-close-button-position: initial;--swal2-close-button-inset: auto;--swal2-close-button-font-size: 2.5em;--swal2-close-button-color: #ccc;--swal2-close-button-transition: color 0.2s, box-shadow 0.2s;--swal2-close-button-outline: initial;--swal2-close-button-box-shadow: inset 0 0 0 3px transparent;--swal2-close-button-focus-box-shadow: inset var(--swal2-outline);--swal2-close-button-hover-transform: none;--swal2-actions-justify-content: center;--swal2-actions-width: auto;--swal2-actions-margin: 1.25em auto 0;--swal2-actions-padding: 0;--swal2-actions-border-radius: 0;--swal2-actions-background: transparent;--swal2-action-button-transition: background-color 0.2s, box-shadow 0.2s;--swal2-action-button-hover: black 10%;--swal2-action-button-active: black 10%;--swal2-confirm-button-box-shadow: none;--swal2-confirm-button-border-radius: 0.25em;--swal2-confirm-button-background-color: #7066e0;--swal2-confirm-button-color: #fff;--swal2-deny-button-box-shadow: none;--swal2-deny-button-border-radius: 0.25em;--swal2-deny-button-background-color: #dc3741;--swal2-deny-button-color: #fff;--swal2-cancel-button-box-shadow: none;--swal2-cancel-button-border-radius: 0.25em;--swal2-cancel-button-background-color: #6e7881;--swal2-cancel-button-color: #fff;--swal2-toast-show-animation: swal2-toast-show 0.5s;--swal2-toast-hide-animation: swal2-toast-hide 0.1s forwards;--swal2-toast-border: none;--swal2-toast-box-shadow: 0 0 1px hsl(0deg 0% 0% / 0.075), 0 1px 2px hsl(0deg 0% 0% / 0.075), 1px 2px 4px hsl(0deg 0% 0% / 0.075), 1px 3px 8px hsl(0deg 0% 0% / 0.075), 2px 4px 16px hsl(0deg 0% 0% / 0.075)}[data-swal2-theme=dark]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}@media(prefers-color-scheme: dark){[data-swal2-theme=auto]{--swal2-dark-theme-black: #19191a;--swal2-dark-theme-white: #e1e1e1;--swal2-background: var(--swal2-dark-theme-black);--swal2-color: var(--swal2-dark-theme-white);--swal2-footer-border-color: #555;--swal2-input-background: color-mix(in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10%);--swal2-validation-message-background: color-mix( in srgb, var(--swal2-dark-theme-black), var(--swal2-dark-theme-white) 10% );--swal2-validation-message-color: var(--swal2-dark-theme-white)}}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto !important}body.swal2-no-backdrop .swal2-container{background-color:rgba(0,0,0,0) !important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px var(--swal2-backdrop)}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:rgba(0,0,0,0);pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{inset:0 auto auto 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{inset:0 0 auto auto}body.swal2-toast-shown .swal2-container.swal2-top-start,body.swal2-toast-shown .swal2-container.swal2-top-left{inset:0 auto auto 0}body.swal2-toast-shown .swal2-container.swal2-center-start,body.swal2-toast-shown .swal2-container.swal2-center-left{inset:50% auto auto 0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{inset:50% auto auto 50%;transform:translate(-50%, -50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{inset:50% 0 auto auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-start,body.swal2-toast-shown .swal2-container.swal2-bottom-left{inset:auto auto 0 0}body.swal2-toast-shown .swal2-container.swal2-bottom{inset:auto auto 0 50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{inset:auto 0 0 auto}@media print{body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown){overflow-y:scroll !important}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop,.swal2-toast-shown) .swal2-container{position:static !important}}div:where(.swal2-container){display:grid;position:fixed;z-index:1060;inset:0;box-sizing:border-box;grid-template-areas:\"top-start     top            top-end\" \"center-start  center         center-end\" \"bottom-start  bottom-center  bottom-end\";grid-template-rows:minmax(min-content, auto) minmax(min-content, auto) minmax(min-content, auto);height:100%;padding:var(--swal2-container-padding);overflow-x:hidden;transition:var(--swal2-backdrop-transition);-webkit-overflow-scrolling:touch}div:where(.swal2-container).swal2-backdrop-show,div:where(.swal2-container).swal2-noanimation{background:var(--swal2-backdrop)}div:where(.swal2-container).swal2-backdrop-hide{background:rgba(0,0,0,0) !important}div:where(.swal2-container).swal2-top-start,div:where(.swal2-container).swal2-center-start,div:where(.swal2-container).swal2-bottom-start{grid-template-columns:minmax(0, 1fr) auto auto}div:where(.swal2-container).swal2-top,div:where(.swal2-container).swal2-center,div:where(.swal2-container).swal2-bottom{grid-template-columns:auto minmax(0, 1fr) auto}div:where(.swal2-container).swal2-top-end,div:where(.swal2-container).swal2-center-end,div:where(.swal2-container).swal2-bottom-end{grid-template-columns:auto auto minmax(0, 1fr)}div:where(.swal2-container).swal2-top-start>.swal2-popup{align-self:start}div:where(.swal2-container).swal2-top>.swal2-popup{grid-column:2;place-self:start center}div:where(.swal2-container).swal2-top-end>.swal2-popup,div:where(.swal2-container).swal2-top-right>.swal2-popup{grid-column:3;place-self:start end}div:where(.swal2-container).swal2-center-start>.swal2-popup,div:where(.swal2-container).swal2-center-left>.swal2-popup{grid-row:2;align-self:center}div:where(.swal2-container).swal2-center>.swal2-popup{grid-column:2;grid-row:2;place-self:center center}div:where(.swal2-container).swal2-center-end>.swal2-popup,div:where(.swal2-container).swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;place-self:center end}div:where(.swal2-container).swal2-bottom-start>.swal2-popup,div:where(.swal2-container).swal2-bottom-left>.swal2-popup{grid-column:1;grid-row:3;align-self:end}div:where(.swal2-container).swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;place-self:end center}div:where(.swal2-container).swal2-bottom-end>.swal2-popup,div:where(.swal2-container).swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;place-self:end end}div:where(.swal2-container).swal2-grow-row>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-column:1/4;width:100%}div:where(.swal2-container).swal2-grow-column>.swal2-popup,div:where(.swal2-container).swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}div:where(.swal2-container).swal2-no-transition{transition:none !important}div:where(.swal2-container)[popover]{width:auto;border:0}div:where(.swal2-container) div:where(.swal2-popup){display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0, 100%);width:var(--swal2-width);max-width:100%;padding:var(--swal2-padding);border:var(--swal2-border);border-radius:var(--swal2-border-radius);background:var(--swal2-background);color:var(--swal2-color);font-family:inherit;font-size:1rem;container-name:swal2-popup}div:where(.swal2-container) div:where(.swal2-popup):focus{outline:none}div:where(.swal2-container) div:where(.swal2-popup).swal2-loading{overflow-y:hidden}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable{cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-draggable div:where(.swal2-icon){cursor:grab}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging{cursor:grabbing}div:where(.swal2-container) div:where(.swal2-popup).swal2-dragging div:where(.swal2-icon){cursor:grabbing}div:where(.swal2-container) h2:where(.swal2-title){position:relative;max-width:100%;margin:0;padding:var(--swal2-title-padding);color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word;cursor:initial}div:where(.swal2-container) div:where(.swal2-actions){display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:var(--swal2-actions-justify-content);width:var(--swal2-actions-width);margin:var(--swal2-actions-margin);padding:var(--swal2-actions-padding);border-radius:var(--swal2-actions-border-radius);background:var(--swal2-actions-background)}div:where(.swal2-container) div:where(.swal2-loader){display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 rgba(0,0,0,0) #2778c4 rgba(0,0,0,0)}div:where(.swal2-container) button:where(.swal2-styled){margin:.3125em;padding:.625em 1.1em;transition:var(--swal2-action-button-transition);border:none;box-shadow:0 0 0 3px rgba(0,0,0,0);font-weight:500}div:where(.swal2-container) button:where(.swal2-styled):not([disabled]){cursor:pointer}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm){border-radius:var(--swal2-confirm-button-border-radius);background:initial;background-color:var(--swal2-confirm-button-background-color);box-shadow:var(--swal2-confirm-button-box-shadow);color:var(--swal2-confirm-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):hover{background-color:color-mix(in srgb, var(--swal2-confirm-button-background-color), var(--swal2-action-button-hover))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-confirm):active{background-color:color-mix(in srgb, var(--swal2-confirm-button-background-color), var(--swal2-action-button-active))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny){border-radius:var(--swal2-deny-button-border-radius);background:initial;background-color:var(--swal2-deny-button-background-color);box-shadow:var(--swal2-deny-button-box-shadow);color:var(--swal2-deny-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):hover{background-color:color-mix(in srgb, var(--swal2-deny-button-background-color), var(--swal2-action-button-hover))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-deny):active{background-color:color-mix(in srgb, var(--swal2-deny-button-background-color), var(--swal2-action-button-active))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel){border-radius:var(--swal2-cancel-button-border-radius);background:initial;background-color:var(--swal2-cancel-button-background-color);box-shadow:var(--swal2-cancel-button-box-shadow);color:var(--swal2-cancel-button-color);font-size:1em}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):hover{background-color:color-mix(in srgb, var(--swal2-cancel-button-background-color), var(--swal2-action-button-hover))}div:where(.swal2-container) button:where(.swal2-styled):where(.swal2-cancel):active{background-color:color-mix(in srgb, var(--swal2-cancel-button-background-color), var(--swal2-action-button-active))}div:where(.swal2-container) button:where(.swal2-styled):focus-visible{outline:none;box-shadow:var(--swal2-action-button-focus-box-shadow)}div:where(.swal2-container) button:where(.swal2-styled)[disabled]:not(.swal2-loading){opacity:.4}div:where(.swal2-container) button:where(.swal2-styled)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-footer){margin:1em 0 0;padding:1em 1em 0;border-top:1px solid var(--swal2-footer-border-color);background:var(--swal2-footer-background);color:var(--swal2-footer-color);font-size:1em;text-align:center;cursor:initial}div:where(.swal2-container) .swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto !important;overflow:hidden;border-bottom-right-radius:var(--swal2-border-radius);border-bottom-left-radius:var(--swal2-border-radius)}div:where(.swal2-container) div:where(.swal2-timer-progress-bar){width:100%;height:.25em;background:rgba(0,0,0,.2)}div:where(.swal2-container) img:where(.swal2-image){max-width:100%;margin:2em auto 1em;cursor:initial}div:where(.swal2-container) button:where(.swal2-close){position:var(--swal2-close-button-position);inset:var(--swal2-close-button-inset);z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:var(--swal2-close-button-transition);border:none;border-radius:var(--swal2-border-radius);outline:var(--swal2-close-button-outline);background:rgba(0,0,0,0);color:var(--swal2-close-button-color);font-family:monospace;font-size:var(--swal2-close-button-font-size);cursor:pointer;justify-self:end}div:where(.swal2-container) button:where(.swal2-close):hover{transform:var(--swal2-close-button-hover-transform);background:rgba(0,0,0,0);color:#f27474}div:where(.swal2-container) button:where(.swal2-close):focus-visible{outline:none;box-shadow:var(--swal2-close-button-focus-box-shadow)}div:where(.swal2-container) button:where(.swal2-close)::-moz-focus-inner{border:0}div:where(.swal2-container) div:where(.swal2-html-container){z-index:1;justify-content:center;margin:0;padding:var(--swal2-html-container-padding);overflow:auto;color:inherit;font-size:1.125em;font-weight:normal;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word;cursor:initial}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea),div:where(.swal2-container) select:where(.swal2-select),div:where(.swal2-container) div:where(.swal2-radio),div:where(.swal2-container) label:where(.swal2-checkbox){margin:1em 2em 3px}div:where(.swal2-container) input:where(.swal2-input),div:where(.swal2-container) input:where(.swal2-file),div:where(.swal2-container) textarea:where(.swal2-textarea){box-sizing:border-box;width:auto;transition:var(--swal2-input-transition);border:var(--swal2-input-border);border-radius:var(--swal2-input-border-radius);background:var(--swal2-input-background);box-shadow:var(--swal2-input-box-shadow);color:inherit;font-size:1.125em}div:where(.swal2-container) input:where(.swal2-input).swal2-inputerror,div:where(.swal2-container) input:where(.swal2-file).swal2-inputerror,div:where(.swal2-container) textarea:where(.swal2-textarea).swal2-inputerror{border-color:#f27474 !important;box-shadow:0 0 2px #f27474 !important}div:where(.swal2-container) input:where(.swal2-input):hover,div:where(.swal2-container) input:where(.swal2-file):hover,div:where(.swal2-container) textarea:where(.swal2-textarea):hover{box-shadow:var(--swal2-input-hover-box-shadow)}div:where(.swal2-container) input:where(.swal2-input):focus,div:where(.swal2-container) input:where(.swal2-file):focus,div:where(.swal2-container) textarea:where(.swal2-textarea):focus{border:var(--swal2-input-focus-border);outline:none;box-shadow:var(--swal2-input-focus-box-shadow)}div:where(.swal2-container) input:where(.swal2-input)::placeholder,div:where(.swal2-container) input:where(.swal2-file)::placeholder,div:where(.swal2-container) textarea:where(.swal2-textarea)::placeholder{color:#ccc}div:where(.swal2-container) .swal2-range{margin:1em 2em 3px;background:var(--swal2-background)}div:where(.swal2-container) .swal2-range input{width:80%}div:where(.swal2-container) .swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}div:where(.swal2-container) .swal2-range input,div:where(.swal2-container) .swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}div:where(.swal2-container) .swal2-input{height:2.625em;padding:0 .75em}div:where(.swal2-container) .swal2-file{width:75%;margin-right:auto;margin-left:auto;background:var(--swal2-input-background);font-size:1.125em}div:where(.swal2-container) .swal2-textarea{height:6.75em;padding:.75em}div:where(.swal2-container) .swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:var(--swal2-input-background);color:inherit;font-size:1.125em}div:where(.swal2-container) .swal2-radio,div:where(.swal2-container) .swal2-checkbox{align-items:center;justify-content:center;background:var(--swal2-background);color:inherit}div:where(.swal2-container) .swal2-radio label,div:where(.swal2-container) .swal2-checkbox label{margin:0 .6em;font-size:1.125em}div:where(.swal2-container) .swal2-radio input,div:where(.swal2-container) .swal2-checkbox input{flex-shrink:0;margin:0 .4em}div:where(.swal2-container) label:where(.swal2-input-label){display:flex;justify-content:center;margin:1em auto 0}div:where(.swal2-container) div:where(.swal2-validation-message){align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:var(--swal2-validation-message-background);color:var(--swal2-validation-message-color);font-size:1em;font-weight:300}div:where(.swal2-container) div:where(.swal2-validation-message)::before{content:\"!\";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}div:where(.swal2-container) .swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:rgba(0,0,0,0);font-weight:600}div:where(.swal2-container) .swal2-progress-steps li{display:inline-block;position:relative}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:var(--swal2-progress-step-background);color:#fff}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:var(--swal2-progress-step-background)}div:where(.swal2-container) .swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}div:where(.swal2-icon){position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;zoom:var(--swal2-icon-zoom);border:.25em solid rgba(0,0,0,0);border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;user-select:none}div:where(.swal2-icon) .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}div:where(.swal2-icon).swal2-error{border-color:#f27474;color:#f27474}div:where(.swal2-icon).swal2-error .swal2-x-mark{position:relative;flex-grow:1}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-error.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-error.swal2-icon-show .swal2-x-mark{animation:swal2-animate-error-x-mark .5s}}div:where(.swal2-icon).swal2-warning{border-color:#f8bb86;color:#f8bb86}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-warning.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-warning.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .5s}}div:where(.swal2-icon).swal2-info{border-color:#3fc3ee;color:#3fc3ee}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-info.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-info.swal2-icon-show .swal2-icon-content{animation:swal2-animate-i-mark .8s}}div:where(.swal2-icon).swal2-question{border-color:#87adbd;color:#87adbd}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-question.swal2-icon-show{animation:swal2-animate-error-icon .5s}div:where(.swal2-icon).swal2-question.swal2-icon-show .swal2-icon-content{animation:swal2-animate-question-mark .8s}}div:where(.swal2-icon).swal2-success{border-color:#a5dc86;color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;border-radius:50%}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}div:where(.swal2-icon).swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}div:where(.swal2-icon).swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-0.25em;left:-0.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}div:where(.swal2-icon).swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}div:where(.swal2-icon).swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}@container swal2-popup style(--swal2-icon-animations:true){div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-animate-success-line-tip .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-animate-success-line-long .75s}div:where(.swal2-icon).swal2-success.swal2-icon-show .swal2-success-circular-line-right{animation:swal2-rotate-success-circular-line 4.25s ease-in}}[class^=swal2]{-webkit-tap-highlight-color:rgba(0,0,0,0)}.swal2-show{animation:var(--swal2-show-animation)}.swal2-hide{animation:var(--swal2-hide-animation)}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}.swal2-toast{box-sizing:border-box;grid-column:1/4 !important;grid-row:1/4 !important;grid-template-columns:min-content auto min-content;padding:1em;overflow-y:hidden;border:var(--swal2-toast-border);background:var(--swal2-background);box-shadow:var(--swal2-toast-box-shadow);pointer-events:all}.swal2-toast>*{grid-column:2}.swal2-toast h2:where(.swal2-title){margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-toast .swal2-loading{justify-content:center}.swal2-toast input:where(.swal2-input){height:2em;margin:.5em;font-size:1em}.swal2-toast .swal2-validation-message{font-size:1em}.swal2-toast div:where(.swal2-footer){margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-toast button:where(.swal2-close){grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-toast div:where(.swal2-html-container){margin:.5em 1em;padding:0;overflow:initial;font-size:1em;text-align:initial}.swal2-toast div:where(.swal2-html-container):empty{padding:0}.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:bold}.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-toast div:where(.swal2-actions){justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-toast button:where(.swal2-styled){margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;border-radius:50%}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-0.8em;left:-0.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-0.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}@container swal2-popup style(--swal2-icon-animations:true){.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{animation:swal2-toast-animate-success-line-tip .75s}.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{animation:swal2-toast-animate-success-line-long .75s}}.swal2-toast.swal2-show{animation:var(--swal2-toast-show-animation)}.swal2-toast.swal2-hide{animation:var(--swal2-toast-hide-animation)}@keyframes swal2-show{0%{transform:scale(0.7)}45%{transform:scale(1.05)}80%{transform:scale(0.95)}100%{transform:scale(1)}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(0.5);opacity:0}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-0.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(0.4);opacity:0}50%{margin-top:1.625em;transform:scale(0.4);opacity:0}80%{margin-top:-0.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0deg);opacity:1}}@keyframes swal2-rotate-loading{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-toast-show{0%{transform:translateY(-0.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(0.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0deg)}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-0.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}");

/***/ }),

/***/ 540:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ 601:
/***/ ((module) => {

"use strict";


module.exports = function (i) {
  return i[1];
};

/***/ }),

/***/ 659:
/***/ ((module) => {

"use strict";


var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ 825:
/***/ ((module) => {

"use strict";


/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/nonce */
/******/ 	(() => {
/******/ 		__webpack_require__.nc = undefined;
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";

// NAMESPACE OBJECT: ./node_modules/socket.io-parser/build/esm/index.js
var socket_io_parser_build_esm_namespaceObject = {};
__webpack_require__.r(socket_io_parser_build_esm_namespaceObject);
__webpack_require__.d(socket_io_parser_build_esm_namespaceObject, {
  Decoder: () => (Decoder),
  Encoder: () => (Encoder),
  PacketType: () => (PacketType),
  protocol: () => (build_esm_protocol)
});

;// ./user/src/script/data/local/product.js
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var productData = [{
  id: 'hobby-1-1',
  category: 'Photography',
  name: 'Canon EOS 80D',
  description: 'DSLR camera for enthusiasts',
  price: 12000000,
  imageUrl: './pinjemin.png',
  type: 'buy' // 'buy' or 'rent'
}, {
  id: 'hobby-1-2',
  category: 'Photography',
  name: 'Sony Alpha a6000',
  description: 'Mirrorless camera with fast autofocus',
  price: 9000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '24 hours' // '12 hours' or '24 hours' (only if type is 'rent')
}, {
  id: 'hobby-2-1',
  category: 'Gaming',
  name: 'PlayStation 5',
  description: 'Next-gen gaming console',
  price: 8000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '24 hours'
}, {
  id: 'hobby-2-2',
  category: 'Gaming',
  name: 'Gaming PC',
  description: 'Custom-built high-end gaming PC',
  price: 25000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-3-1',
  category: 'Reading',
  name: 'Kindle Paperwhite',
  description: 'E-reader with adjustable warm light',
  price: 2000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-3-2',
  category: 'Reading',
  name: 'Noise Cancelling Headphones',
  description: 'Headphones for distraction-free reading',
  price: 3500000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-4-1',
  category: 'Cooking',
  name: 'KitchenAid Stand Mixer',
  description: 'Versatile stand mixer for baking',
  price: 7000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-4-2',
  category: 'Cooking',
  name: 'Sous Vide Immersion Circulator',
  description: 'Precision cooking device',
  price: 3000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '24 hours'
}, {
  id: 'hobby-5-1',
  category: 'Gardening',
  name: 'Gardening Tool Set',
  description: 'Complete gardening tool set',
  price: 1000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '12 hours'
}, {
  id: 'hobby-5-2',
  category: 'Gardening',
  name: 'Raised Garden Bed',
  description: 'Elevated garden bed',
  price: 2000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-6-1',
  category: 'Music',
  name: 'Acoustic Guitar',
  description: 'Beginner-friendly acoustic guitar',
  price: 1500000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '24 hours'
}, {
  id: 'hobby-6-2',
  category: 'Music',
  name: 'Headphones',
  description: 'Studio-quality headphones',
  price: 2500000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-7-1',
  category: 'Sports',
  name: 'Basketball',
  description: 'Official size basketball',
  price: 300000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-7-2',
  category: 'Sports',
  name: 'Tennis Racket',
  description: 'Lightweight tennis racket',
  price: 1200000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '12 hours'
}, {
  id: 'hobby-8-1',
  category: 'Drawing',
  name: 'Drawing Pencils',
  description: 'Set of drawing pencils',
  price: 200000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-8-2',
  category: 'Drawing',
  name: 'Easel',
  description: 'Adjustable easel',
  price: 1000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-9-1',
  category: 'Traveling',
  name: 'Backpack',
  description: 'Travel backpack',
  price: 1000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-9-2',
  category: 'Traveling',
  name: 'Camera',
  description: 'Compact camera',
  price: 3000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'rent',
  rentDuration: '24 hours'
}, {
  id: 'hobby-10-1',
  category: 'Writing',
  name: 'Laptop',
  description: 'Lightweight laptop',
  price: 8000000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}, {
  id: 'hobby-10-2',
  category: 'Writing',
  name: 'Keyboard',
  description: 'Mechanical keyboard',
  price: 1500000,
  imageUrl: 'https://via.placeholder.com/150',
  type: 'buy'
}];
console.log(productData);
var Products = /*#__PURE__*/function () {
  function Products() {
    _classCallCheck(this, Products);
  }
  return _createClass(Products, null, [{
    key: "getAll",
    value: function getAll() {
      return productData;
    }
  }, {
    key: "getByCategory",
    value: function getByCategory(category) {
      var loweredCaseCategory = category.toLowerCase();
      return productData.filter(function (product) {
        var loweredCaseProductCategory = (product.category || '').toLowerCase();
        return loweredCaseProductCategory.includes(loweredCaseCategory);
      });
    }
  }, {
    key: "getByType",
    value: function getByType(type) {
      var loweredCaseType = type.toLowerCase();
      return productData.filter(function (product) {
        var loweredCaseProductType = (product.type || '').toLowerCase();
        return loweredCaseProductType.includes(loweredCaseType);
      });
    }
  }, {
    key: "searchProduct",
    value: function searchProduct(query) {
      var loweredCaseQuery = query.toLowerCase();
      return productData.filter(function (product) {
        var loweredCaseProductName = (product.name || '').toLowerCase();
        return loweredCaseProductName.includes(loweredCaseQuery);
      });
    }
  }, {
    key: "addProduct",
    value: function addProduct(product) {
      productData.push(product);
    }
  }]);
}();
/* harmony default export */ const product = (Products);
;// ./user/src/script/utils/apiService.js
function apiService_typeof(o) { "@babel/helpers - typeof"; return apiService_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, apiService_typeof(o); }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == apiService_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(apiService_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
// Define your backend base URL
var BASE_URL = 'http://localhost:5000/api'; // <-- Pastikan URL ini benar

// Function to get the JWT token from localStorage
var getToken = function getToken() {
  return localStorage.getItem('token');
};

/**
 * Menghapus data autentikasi dari localStorage dan melakukan redirect ke halaman login.
 */
var clearAuthData = function clearAuthData() {
  localStorage.removeItem('token');
  localStorage.removeItem('user');
  // Dispatch event untuk memberi tahu komponen lain (misalnya navbar) bahwa pengguna telah logout
  var logoutEvent = new CustomEvent('userLoggedOut');
  window.dispatchEvent(logoutEvent);
  // Redirect ke halaman login
  window.location.hash = '#/login';
  alert('Sesi Anda telah berakhir. Silakan login kembali.'); // Beri tahu pengguna
};
var setAuthData = function setAuthData(token, user) {
  localStorage.setItem("token", token);
  localStorage.setItem("user", JSON.stringify(user));

  // Dispatch login event
  console.log("Dispatching userLoggedIn event...");
  window.dispatchEvent(new CustomEvent("userLoggedIn"));
};

/**
 * Melakukan permintaan terautentikasi ke API backend (dengan JSON body).
 * @param {string} endpoint - Endpoint API (misal '/auth/me').
 * @param {string} method - Metode HTTP (misal 'GET', 'POST', 'PATCH', 'DELETE').
 * @param {Object} [body=null] - Body permintaan dalam format JSON (untuk metode selain GET).
 * @returns {Promise<Object>} Respons dari API.
 */
var authenticatedRequest = /*#__PURE__*/function () {
  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(endpoint, method) {
    var body,
      url,
      token,
      options,
      response,
      errorBody,
      result,
      _args = arguments;
    return _regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          body = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;
          url = "".concat(BASE_URL).concat(endpoint);
          token = localStorage.getItem('token');
          options = {
            method: method,
            headers: {
              'Content-Type': 'application/json'
            }
          };
          if (token) {
            options.headers['Authorization'] = "Bearer ".concat(token);
          }
          if (body && method !== 'GET') {
            options.body = JSON.stringify(body);
          }
          _context.prev = 6;
          _context.next = 9;
          return fetch(url, options);
        case 9:
          response = _context.sent;
          if (response.ok) {
            _context.next = 19;
            break;
          }
          if (!(response.status === 401 || response.status === 403)) {
            _context.next = 14;
            break;
          }
          // Clear data autentikasi lama
          clearAuthData();
          // Redirect ke halaman login
          // window.location.hash = '#/login'; // Sudah di dalam clearAuthData
          // Lempar error atau return indikator agar pemanggil tahu request gagal
          throw new Error('Authentication failed or expired.');
        case 14:
          _context.next = 16;
          return response.json();
        case 16:
          errorBody = _context.sent;
          // Coba parse JSON error body
          console.error("HTTP error! Status: ".concat(response.status), errorBody);
          // Lempar error dengan informasi yang lebih detail jika tersedia
          throw new Error("HTTP error! Status: ".concat(response.status, ": ").concat(errorBody.message || 'Unknown error'));
        case 19:
          _context.next = 21;
          return response.json();
        case 21:
          result = _context.sent;
          return _context.abrupt("return", result);
        case 25:
          _context.prev = 25;
          _context.t0 = _context["catch"](6);
          console.error('Error during API request:', _context.t0);
          // Jika error bukan dari response.ok (misal network error, type error, etc.)
          // dan belum ditangani redirect 401/403, re-throw error
          throw _context.t0;
        case 29:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[6, 25]]);
  }));
  return function authenticatedRequest(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

/**
 * Wrapper untuk permintaan GET terautentikasi (juga bisa digunakan untuk endpoint tanpa auth).
 * @param {string} endpoint - Endpoint API.
 * @returns {Promise<Object>} Respons dari API.
 */
var apiGet = function apiGet(endpoint) {
  return authenticatedRequest(endpoint, 'GET');
};

/**
 * Wrapper untuk permintaan POST terautentikasi (JSON body).
 * @param {string} endpoint - Endpoint API.
 * @param {Object} body - Body permintaan.
 * @returns {Promise<Object>} Respons dari API.
 */
var apiPost = function apiPost(endpoint, body) {
  return authenticatedRequest(endpoint, 'POST', body);
};

/**
 * Wrapper untuk permintaan PATCH terautentikasi (JSON body).
 * Saat ini endpoint PATCH item butuh FormData, jadi wrapper ini mungkin hanya untuk endpoint PATCH lain.
 * Jika backend memungkinkan PATCH item dengan JSON tanpa file, ini bisa digunakan.
 * @param {string} endpoint - Endpoint API.
 * @param {Object} body - Body permintaan.
 * @returns {Promise<Object>} Respons dari API.
 */
var apiPatch = function apiPatch(endpoint, body) {
  return authenticatedRequest(endpoint, 'PATCH', body);
};

/**
 * Wrapper untuk permintaan DELETE terautentikasi.
 * @param {string} endpoint - Endpoint API.
 * @returns {Promise<Object>} Respons dari API.
 */
var apiDelete = function apiDelete(endpoint) {
  return authenticatedRequest(endpoint, 'DELETE');
};

/**
 * Melakukan permintaan POST atau PATCH yang memerlukan autentikasi dengan Content-Type multipart/form-data (untuk file upload).
 * @param {string} method - Metode HTTP ('POST' atau 'PATCH').
 * @param {string} endpoint - Endpoint API (misal '/items' atau '/items/:id').
 * @param {FormData} formData - Objek FormData yang berisi data form dan file.
 * @returns {Promise<Object>} Respons dari API.
 */
var apiFormDataRequest = /*#__PURE__*/function () {
  var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(method, endpoint, formData) {
    var url, token, options, response, errorBody, result;
    return _regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          url = "".concat(BASE_URL).concat(endpoint);
          token = localStorage.getItem('token');
          options = {
            method: method,
            // Menggunakan parameter method
            body: formData,
            // Gunakan objek FormData sebagai body
            headers: {
              // JANGAN set 'Content-Type': 'multipart/form-data' di sini.
              // Browser akan menanganinya secara otomatis saat menggunakan FormData,
              // termasuk boundary yang benar.
            }
          }; // Tambahkan header Authorization jika token ada
          if (token) {
            options.headers['Authorization'] = "Bearer ".concat(token);
          }
          _context2.prev = 4;
          _context2.next = 7;
          return fetch(url, options);
        case 7:
          response = _context2.sent;
          if (response.ok) {
            _context2.next = 17;
            break;
          }
          if (!(response.status === 401 || response.status === 403)) {
            _context2.next = 12;
            break;
          }
          // Clear data autentikasi lama
          clearAuthData();
          // Redirect ke halaman login
          // window.location.hash = '#/login'; // Sudah di dalam clearAuthData
          // Lempar error atau return indikator agar pemanggil tahu request gagal
          throw new Error('Authentication failed or expired.');
        case 12:
          _context2.next = 14;
          return response.json();
        case 14:
          errorBody = _context2.sent;
          // Coba parse JSON error body
          console.error("HTTP error! Status: ".concat(response.status), errorBody);
          // Lempar error dengan informasi yang lebih detail jika tersedia
          throw new Error("HTTP error! Status: ".concat(response.status, ": ").concat(errorBody.message || 'Unknown error'));
        case 17:
          _context2.next = 19;
          return response.json();
        case 19:
          result = _context2.sent;
          return _context2.abrupt("return", result);
        case 23:
          _context2.prev = 23;
          _context2.t0 = _context2["catch"](4);
          console.error('Error during API request:', _context2.t0);
          // Jika error bukan dari response.ok (misal network error, type error, etc.)
          // dan belum ditangani redirect 401/403, re-throw error
          throw _context2.t0;
        case 27:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[4, 23]]);
  }));
  return function apiFormDataRequest(_x3, _x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();

/**
 * Subscribe to push notifications
 * @param {Object} subscription - Push subscription object
 * @returns {Promise<Object>} - Response from API
 */
var subscribeNotification = function subscribeNotification(subscription) {
  return apiPost('/notifications/subscribe', subscription);
};

/**
 * Unsubscribe from push notifications
 * @param {string} endpoint - Subscription endpoint
 * @returns {Promise<Object>} - Response from API
 */
var unsubscribeNotification = function unsubscribeNotification(endpoint) {
  return apiPost('/notifications/unsubscribe', {
    endpoint: endpoint
  });
};

/**
 * Get unread notification count
 * @returns {Promise<Object>} - Response from API with unread count
 */
var getUnreadNotificationCount = function getUnreadNotificationCount() {
  return apiGet('/notifications/unread-count');
};

/**
 * Get user notifications
 * @param {number} page - Page number
 * @param {number} limit - Number of notifications per page
 * @returns {Promise<Object>} - Response from API with notifications
 */
var getNotifications = function getNotifications() {
  var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
  return apiGet("/notifications?page=".concat(page, "&limit=").concat(limit));
};

/**
 * Mark notification as read
 * @param {number} id - Notification ID
 * @returns {Promise<Object>} - Response from API
 */
var markNotificationAsRead = function markNotificationAsRead(id) {
  return apiPatch("/notifications/".concat(id, "/read"));
};

/**
 * Mark all notifications as read
 * @returns {Promise<Object>} - Response from API
 */
var markAllNotificationsAsRead = function markAllNotificationsAsRead() {
  return apiPatch('/notifications/read-all');
};

// Export semua fungsi yang tersedia dalam satu statement kolektif di akhir file

;// ./user/src/script/components/navbar/app-bar.js
function app_bar_typeof(o) { "@babel/helpers - typeof"; return app_bar_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, app_bar_typeof(o); }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function app_bar_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function app_bar_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, app_bar_toPropertyKey(o.key), o); } }
function app_bar_createClass(e, r, t) { return r && app_bar_defineProperties(e.prototype, r), t && app_bar_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }
function _possibleConstructorReturn(t, e) { if (e && ("object" == app_bar_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(t); }
function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function _inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && _setPrototypeOf(t, e); }
function _wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return _wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return _construct(t, arguments, _getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), _setPrototypeOf(Wrapper, t); }, _wrapNativeSuper(t); }
function _construct(t, e, r) { if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && _setPrototypeOf(p, r.prototype), p; }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function _isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function _setPrototypeOf(t, e) { return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, _setPrototypeOf(t, e); }
function _getPrototypeOf(t) { return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, _getPrototypeOf(t); }
function _defineProperty(e, r, t) { return (r = app_bar_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function app_bar_toPropertyKey(t) { var i = app_bar_toPrimitive(t, "string"); return "symbol" == app_bar_typeof(i) ? i : i + ""; }
function app_bar_toPrimitive(t, r) { if ("object" != app_bar_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != app_bar_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var AppBar = /*#__PURE__*/function (_HTMLElement) {
  function AppBar() {
    var _this;
    app_bar_classCallCheck(this, AppBar);
    _this = _callSuper(this, AppBar);
    // Methods defined with arrow functions are automatically bound
    // Toggle profile dropdown visibility
    _defineProperty(_this, "toggleProfileDropdown", function (event) {
      event.stopPropagation();
      var profileDropdownMenu = _this.querySelector('#profileDropdownMenu');
      if (profileDropdownMenu) {
        profileDropdownMenu.classList.toggle('hidden');
      }
    });
    // Hide profile dropdown when clicking outside
    _defineProperty(_this, "hideProfileDropdown", function (event) {
      var profileArea = _this.querySelector('.profile-area');
      var profileDropdownMenu = _this.querySelector('#profileDropdownMenu');
      if (profileArea && profileDropdownMenu && event.target && !profileArea.contains(event.target) && !profileDropdownMenu.contains(event.target)) {
        profileDropdownMenu.classList.add('hidden');
      }
    });
    _defineProperty(_this, "handleLogout", function () {
      clearAuthData();
      _this.closeDrawer(); // Close drawer after logout
    });
    _defineProperty(_this, "handleLoginStatusChange", function () {
      console.log('Login/Logout status change detected.');
      _this.updateNavbarBasedOnLoginStatus();
      _this.setupProfileDropdownToggle();
      _this.setupLogoutListener();
    });
    _defineProperty(_this, "openDrawer", function () {
      var mobileDrawer = _this.querySelector('#mobile-drawer');
      var drawerOverlay = _this.querySelector('#drawer-overlay');
      if (mobileDrawer && drawerOverlay) {
        // Show overlay
        drawerOverlay.classList.remove('hidden');
        // Force reflow before adding transform classes for smooth animation
        drawerOverlay.offsetHeight;

        // Slide in drawer
        mobileDrawer.classList.remove('-translate-x-full');

        // Prevent body scroll when drawer is open
        document.body.style.overflow = 'hidden';
        console.log('Drawer opened');
      }
    });
    _defineProperty(_this, "closeDrawer", function () {
      var mobileDrawer = _this.querySelector('#mobile-drawer');
      var drawerOverlay = _this.querySelector('#drawer-overlay');
      if (mobileDrawer && drawerOverlay) {
        // Slide out drawer
        mobileDrawer.classList.add('-translate-x-full');

        // Hide overlay after animation completes
        setTimeout(function () {
          drawerOverlay.classList.add('hidden');
        }, 300); // Match transition duration

        // Restore body scroll
        document.body.style.overflow = '';
        console.log('Drawer closed');
      }
    });
    return _this;
  }
  _inherits(AppBar, _HTMLElement);
  return app_bar_createClass(AppBar, [{
    key: "_emptyContent",
    value: function _emptyContent() {
      this.innerHTML = "";
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      console.log('AppBar Component Connected');
      this.render();
      this._setupCategoryDropdownToggle();
      this.setupProfileDropdownToggle();
      this.setupLogoutListener();
      this.setupMobileMenuToggle();

      // Add event listeners for login/logout
      window.addEventListener('userLoggedIn', this.handleLoginStatusChange);
      window.addEventListener('userLoggedOut', this.handleLoginStatusChange);

      // Check login status on first load
      this.updateNavbarBasedOnLoginStatus();

      // Add body padding to compensate for fixed header
      this.addBodyPadding();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      console.log('AppBar Component Disconnected');

      // Remove event listeners
      window.removeEventListener('userLoggedIn', this.handleLoginStatusChange);
      window.removeEventListener('userLoggedOut', this.handleLoginStatusChange);

      // Remove profile dropdown listeners
      var profileArea = this.querySelector('.profile-area');
      if (profileArea) {
        profileArea.removeEventListener('click', this.toggleProfileDropdown);
      }
      document.removeEventListener('click', this.hideProfileDropdown);

      // Remove logout listener
      var profileDropdownMenu = this.querySelector('#profileDropdownMenu');
      if (profileDropdownMenu && this.handleLogoutClickDelegate) {
        profileDropdownMenu.removeEventListener('click', this.handleLogoutClickDelegate);
      }

      // Remove mobile menu listeners
      var mobileMenuButton = this.querySelector('#mobile-menu-button');
      if (mobileMenuButton && this._mobileMenuButtonHandler) {
        mobileMenuButton.removeEventListener('click', this._mobileMenuButtonHandler);
        this._mobileMenuButtonHandler = null;
      }

      // Remove drawer overlay listener
      if (this._drawerOverlayHandler) {
        document.removeEventListener('click', this._drawerOverlayHandler);
        this._drawerOverlayHandler = null;
      }

      // Remove body padding
      this.removeBodyPadding();
    }
  }, {
    key: "addBodyPadding",
    value: function addBodyPadding() {
      // Add padding-top to body to compensate for fixed header
      document.body.style.paddingTop = '100px'; // Adjust based on header height
    }
  }, {
    key: "removeBodyPadding",
    value: function removeBodyPadding() {
      // Remove padding when component is disconnected
      document.body.style.paddingTop = '';
    }
  }, {
    key: "render",
    value: function render() {
      this._emptyContent();
      var categories = typeof product !== 'undefined' && product.getAll ? _toConsumableArray(new Set(product.getAll().map(function (product) {
        return product.category;
      }))) : [];
      this.innerHTML = "\n        <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n        </style>\n            <!-- Fixed Header -->\n            <div class=\"fixed top-0 left-0 right-0 bg-white shadow-sm z-50\">\n                <div class=\"container mx-auto px-4 py-4 flex items-center justify-between\">\n                    \n                    <!-- Mobile Menu Button (Left) -->\n                    <div class=\"flex items-center md:hidden\">\n                        <button id=\"mobile-menu-button\" type=\"button\" class=\"text-gray-600 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-gray-200 p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                            <span class=\"sr-only\">Open main menu</span>\n                            <!-- Hamburger icon -->\n                            <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 6h16M4 12h16M4 18h16\"></path>\n                            </svg>\n                        </button>\n                    </div>\n\n                    <!-- Logo (Center on mobile, Left on desktop) -->\n                    <div class=\"flex items-center justify-center md:justify-start flex-1 md:flex-none\">\n                        <div class=\"text-xl font-bold text-gray-800 flex items-center\">\n                            <img src=\"./pinjemin.png\" class=\"mr-2 h-16 inline-block\" alt=\"Pinjemin Logo\">\n                        </div>\n                    </div>\n\n                    <!-- Desktop Navigation (Hidden on mobile) -->\n                    <nav class=\"hidden md:flex items-center space-x-8 flex-1 justify-center\">\n                        <a href=\"/#/home\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\">\n                            Home\n                        </a>\n                        <a href=\"/#/community\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200\">\n                            Komunitas\n                        </a>\n                        <a href=\"/#/my-rentals\" class=\"text-gray-700 hover:text-blue-600 font-medium transition-colors duration-200 user-authenticated-nav-link hidden\">\n                            Pinjaman Saya\n                        </a>\n                    </nav>\n\n                    <!-- Right Section: Auth/Profile -->\n                    <div class=\"flex items-center space-x-3\">\n                        <notification-badge class=\"user-authenticated-nav-link hidden\"></notification-badge>\n                        <!-- Authentication Links (Show when NOT logged in) -->\n                        <!-- Authentication Links (Show when NOT logged in) -->\n                        <div class=\"auth-links flex items-center space-x-2\">\n                            <a href=\"/#/login\" class=\"text-sm font-medium text-gray-700 hover:text-blue-600 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all duration-200\">\n                                Sign In\n                            </a>\n                            <a href=\"/#/register\" class=\"text-sm font-medium bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-all duration-200\">\n                                Register\n                            </a>\n                        </div>\n\n                        <!-- User Info Area (Visible when logged in) -->\n                        <div class=\"user-info-area relative hidden\">\n                            <div class=\"profile-area flex items-center space-x-2 cursor-pointer text-gray-700 hover:text-gray-900 px-3 py-2 rounded-lg hover:bg-gray-50 transition-all duration-200\">\n                                <div class=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center\">\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-5 h-5 text-blue-600\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 0 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z\" />\n                                    </svg>\n                                </div>\n                                <span class=\"font-medium text-sm hidden sm:inline\" id=\"navbar-user-name\"></span>\n                                <svg class=\"w-4 h-4 transition-transform duration-200\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n                                </svg>\n                            </div>\n                            \n                            <!-- Profile Dropdown Menu -->\n                            <div id=\"profileDropdownMenu\" class=\"absolute right-0 top-full mt-2 w-56 bg-white rounded-lg shadow-lg border border-gray-200 py-2 hidden z-20\">\n                                <div class=\"px-4 py-3 border-b border-gray-100\">\n                                    <p class=\"text-sm font-medium text-gray-900\" id=\"dropdown-user-name\"></p>\n                                    <p class=\"text-xs text-gray-500\">Selamat datang kembali!</p>\n                                </div>\n                                <a href=\"/#/profile\" class=\"flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-4 h-4 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"></path>\n                                    </svg>\n                                    Profil Saya\n                                </a>\n                                <a href=\"/#/my-items\" class=\"flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-4 h-4 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\n                                    </svg>\n                                    Item Saya\n                                </a>\n                                <a href=\"/#/my-transactions\" class=\"flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-4 h-4 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"></path>\n                                    </svg>\n                                    Transaksi Pembelian\n                                </a>\n                                <a href=\"/#/my-sales\" class=\"flex items-center px-4 py-3 text-sm text-gray-700 hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-4 h-4 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 00-2-2z\"></path>\n                                    </svg>\n                                    Penjualan Saya\n                                </a>\n                                <hr class=\"my-2\">\n                                <button id=\"logout-button\" class=\"flex items-center w-full px-4 py-3 text-sm text-red-600 hover:bg-red-50 transition-colors duration-200\">\n                                    <svg class=\"w-4 h-4 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path>\n                                    </svg>\n                                    Logout\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Mobile Drawer Overlay -->\n            <div id=\"drawer-overlay\" class=\"fixed inset-0 bg-black bg-opacity-50 z-40 hidden md:hidden transition-opacity duration-300\"></div>\n\n            <!-- Mobile Drawer Menu -->\n            <div id=\"mobile-drawer\" class=\"fixed top-0 left-0 h-full w-80 bg-white shadow-xl z-50 transform -translate-x-full transition-transform duration-300 ease-in-out md:hidden\">\n                <!-- Drawer Header -->\n                <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n                    <div class=\"flex items-center space-x-3\">\n                        <img src=\"./pinjemin.png\" class=\"h-8\" alt=\"Pinjemin Logo\">\n                        <span class=\"text-lg font-bold text-gray-800\">Pinjemin</span>\n                    </div>\n                    <button id=\"close-drawer-button\" class=\"text-gray-400 hover:text-gray-600 focus:outline-none p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200\">\n                        <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n                        </svg>\n                    </button>\n                </div>\n\n                <!-- Drawer Content -->\n                <div class=\"flex flex-col h-full overflow-y-auto\">\n                    <!-- User Info Section (When logged in) -->\n                    <div class=\"drawer-user-info hidden border-b border-gray-200 p-4\">\n                        <div class=\"flex items-center space-x-3\">\n                            <div class=\"w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 text-blue-600\">\n                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5 7.5 0 0 1 14.998 0A17.933 17.933 0 0 0 12 21.75c-2.676 0-5.216-.584-7.499-1.632Z\" />\n                                </svg>\n                            </div>\n                            <div>\n                                <p class=\"font-medium text-gray-900\" id=\"drawer-user-name\"></p>\n                                <p class=\"text-sm text-gray-500\">Selamat datang!</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Auth Links (When not logged in) -->\n                    <div class=\"drawer-auth-links border-b border-gray-200 p-4\">\n                        <div class=\"space-y-3\">\n                            <a href=\"/#/login\" class=\"flex items-center justify-center w-full py-3 text-blue-600 border border-blue-600 rounded-lg hover:bg-blue-50 transition-colors duration-200 font-medium\">\n                                Sign In\n                            </a>\n                            <a href=\"/#/register\" class=\"flex items-center justify-center w-full py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-200 font-medium\">\n                                Register\n                            </a>\n                        </div>\n                    </div>\n\n                    <!-- Navigation Links -->\n                    <nav class=\"flex-1 px-4 py-4\">\n                        <ul class=\"space-y-2\">\n                            <li>\n                                <a href=\"/#/home\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\"></path>\n                                    </svg>\n                                    Home\n                                </a>\n                            </li>\n                            <li>\n                                <a href=\"/#/community\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\"></path>\n                                    </svg>\n                                    Komunitas\n                                </a>\n                            </li>\n                            \n                            <!-- Authenticated Links -->\n                            <li class=\"drawer-authenticated-nav-link hidden\">\n                                <a href=\"/#/my-rentals\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"></path>\n                                    </svg>\n                                    Pinjaman Saya\n                                </a>\n                            </li>\n                            <li class=\"drawer-authenticated-nav-link hidden\">\n                                <a href=\"/#/my-items\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 7l-8-4-8 4m16 0l-8 4m8-4v10l-8 4m0-10L4 7m8 4v10M4 7v10l8 4\"></path>\n                                    </svg>\n                                    Item Saya\n                                </a>\n                            </li>\n                            <li class=\"drawer-authenticated-nav-link hidden\">\n                                <a href=\"/#/my-transactions\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"></path>\n                                    </svg>\n                                    Transaksi Pembelian\n                                </a>\n                            </li>\n                            <li class=\"drawer-authenticated-nav-link hidden\">\n                                <a href=\"/#/my-sales\" class=\"flex items-center px-4 py-3 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors duration-200\">\n                                    <svg class=\"w-5 h-5 mr-3 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v4a2 2 0 01-2 2h-2a2 2 0 00-2-2z\"></path>\n                                    </svg>\n                                    Penjualan Saya\n                                </a>\n                            </li>\n                        </ul>\n                    </nav>\n\n                    <!-- Logout Button (When logged in) -->\n                    <div class=\"drawer-logout-section hidden border-t border-gray-200 p-4\">\n                        <button id=\"drawer-logout-button\" class=\"flex items-center w-full px-4 py-3 text-red-600 rounded-lg hover:bg-red-50 transition-colors duration-200\">\n                            <svg class=\"w-5 h-5 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"></path>\n                            </svg>\n                            Logout\n                        </button>\n                    </div>\n                </div>\n            </div>\n        ";
    }

    // Setup event listener for the profile dropdown toggle
  }, {
    key: "setupProfileDropdownToggle",
    value: function setupProfileDropdownToggle() {
      var profileArea = this.querySelector('.profile-area');
      var profileDropdownMenu = this.querySelector('#profileDropdownMenu');
      if (profileArea && profileDropdownMenu) {
        profileArea.addEventListener('click', this.toggleProfileDropdown);
        document.addEventListener('click', this.hideProfileDropdown);
      }
    }
  }, {
    key: "setupLogoutListener",
    value:
    // Setup logout listener using event delegation
    function setupLogoutListener() {
      var _this2 = this;
      var profileDropdownMenu = this.querySelector('#profileDropdownMenu');
      if (profileDropdownMenu) {
        if (this.handleLogoutClickDelegate) {
          profileDropdownMenu.removeEventListener('click', this.handleLogoutClickDelegate);
        }
        this.handleLogoutClickDelegate = function (event) {
          if (event.target && event.target.id === 'logout-button') {
            event.preventDefault();
            _this2.handleLogout();
          }
        };
        profileDropdownMenu.addEventListener('click', this.handleLogoutClickDelegate);
      }

      // Setup drawer logout button
      var drawerLogoutButton = this.querySelector('#drawer-logout-button');
      if (drawerLogoutButton) {
        drawerLogoutButton.addEventListener('click', this.handleLogout);
      }
    }
  }, {
    key: "updateNavbarBasedOnLoginStatus",
    value: function updateNavbarBasedOnLoginStatus() {
      var user = localStorage.getItem('user');
      var token = localStorage.getItem('token');

      // Header elements
      var authLinksElement = this.querySelector('.auth-links');
      var userInfoAreaElement = this.querySelector('.user-info-area');
      var userNameElement = this.querySelector('#navbar-user-name');
      var dropdownUserNameElement = this.querySelector('#dropdown-user-name');

      // Desktop navigation
      var authenticatedNavLinks = this.querySelectorAll('.user-authenticated-nav-link');

      // Drawer elements
      var drawerAuthLinks = this.querySelector('.drawer-auth-links');
      var drawerUserInfo = this.querySelector('.drawer-user-info');
      var drawerUserNameElement = this.querySelector('#drawer-user-name');
      var drawerAuthenticatedLinks = this.querySelectorAll('.drawer-authenticated-nav-link');
      var drawerLogoutSection = this.querySelector('.drawer-logout-section');
      if (user && token) {
        var userData = JSON.parse(user);

        // Header Bar
        if (authLinksElement) {
          authLinksElement.classList.add('hidden');
        }
        if (userInfoAreaElement) {
          userInfoAreaElement.classList.remove('hidden');
          if (userNameElement) {
            userNameElement.textContent = userData.name;
          }
          if (dropdownUserNameElement) {
            dropdownUserNameElement.textContent = userData.name;
          }
        }

        // Desktop Navigation
        authenticatedNavLinks.forEach(function (link) {
          link.classList.remove('hidden');
        });

        // Drawer
        if (drawerAuthLinks) {
          drawerAuthLinks.classList.add('hidden');
        }
        if (drawerUserInfo) {
          drawerUserInfo.classList.remove('hidden');
          if (drawerUserNameElement) {
            drawerUserNameElement.textContent = userData.name;
          }
        }
        drawerAuthenticatedLinks.forEach(function (link) {
          link.classList.remove('hidden');
        });
        if (drawerLogoutSection) {
          drawerLogoutSection.classList.remove('hidden');
        }
      } else {
        // Header Bar
        if (authLinksElement) {
          authLinksElement.classList.remove('hidden');
        }
        if (userInfoAreaElement) {
          userInfoAreaElement.classList.add('hidden');
          var profileDropdownMenu = userInfoAreaElement.querySelector('#profileDropdownMenu');
          if (profileDropdownMenu) {
            profileDropdownMenu.classList.add('hidden');
          }
        }
        if (userNameElement) {
          userNameElement.textContent = '';
        }
        if (dropdownUserNameElement) {
          dropdownUserNameElement.textContent = '';
        }

        // Desktop Navigation
        authenticatedNavLinks.forEach(function (link) {
          link.classList.add('hidden');
        });

        // Drawer
        if (drawerAuthLinks) {
          drawerAuthLinks.classList.remove('hidden');
        }
        if (drawerUserInfo) {
          drawerUserInfo.classList.add('hidden');
        }
        if (drawerUserNameElement) {
          drawerUserNameElement.textContent = '';
        }
        drawerAuthenticatedLinks.forEach(function (link) {
          link.classList.add('hidden');
        });
        if (drawerLogoutSection) {
          drawerLogoutSection.classList.add('hidden');
        }
      }
    }

    // Mobile Menu Drawer Toggle
  }, {
    key: "setupMobileMenuToggle",
    value: function setupMobileMenuToggle() {
      var _this3 = this;
      console.log('Setting up mobile drawer toggle...');
      var mobileMenuButton = this.querySelector('#mobile-menu-button');
      var mobileDrawer = this.querySelector('#mobile-drawer');
      var drawerOverlay = this.querySelector('#drawer-overlay');
      var closeDrawerButton = this.querySelector('#close-drawer-button');
      if (mobileMenuButton && mobileDrawer && drawerOverlay) {
        console.log('Mobile drawer elements found. Setting up listeners.');

        // Open drawer
        this._mobileMenuButtonHandler = function (event) {
          console.log('Mobile menu button clicked.');
          _this3.openDrawer();
        };
        mobileMenuButton.addEventListener('click', this._mobileMenuButtonHandler);

        // Close drawer via close button
        if (closeDrawerButton) {
          closeDrawerButton.addEventListener('click', function () {
            _this3.closeDrawer();
          });
        }

        // Close drawer via overlay click
        this._drawerOverlayHandler = function (event) {
          if (event.target === drawerOverlay) {
            _this3.closeDrawer();
          }
        };
        drawerOverlay.addEventListener('click', this._drawerOverlayHandler);

        // Close drawer when clicking navigation links
        var drawerLinks = mobileDrawer.querySelectorAll('a');
        drawerLinks.forEach(function (link) {
          link.addEventListener('click', function () {
            console.log('Drawer link clicked, closing drawer.');
            _this3.closeDrawer();
          });
        });

        // Close drawer on escape key
        document.addEventListener('keydown', function (event) {
          if (event.key === 'Escape' && !mobileDrawer.classList.contains('-translate-x-full')) {
            _this3.closeDrawer();
          }
        });
      } else {
        console.error("Mobile drawer elements not found:", {
          mobileMenuButton: mobileMenuButton,
          mobileDrawer: mobileDrawer,
          drawerOverlay: drawerOverlay
        });
      }
    }
  }, {
    key: "_setupCategoryDropdownToggle",
    value:
    // Category Dropdown (kept as is, adjusted slightly)
    function _setupCategoryDropdownToggle() {
      var categoryButton = this.querySelector('#categoryDropdownButton');
      var categoryMenu = this.querySelector('#categoryDropdownMenu');
      if (categoryButton && categoryMenu) {
        var toggleDropdown = function toggleDropdown(event) {
          event.stopPropagation();
          categoryMenu.classList.toggle('hidden');
        };
        categoryButton.addEventListener('click', toggleDropdown);
        var hideDropdown = function hideDropdown(event) {
          if (event.target && !categoryButton.contains(event.target) && !categoryMenu.contains(event.target) && !categoryMenu.classList.contains('hidden')) {
            categoryMenu.classList.add('hidden');
          }
        };
        document.addEventListener('click', hideDropdown);
        var hideDropdownOnScroll = function hideDropdownOnScroll() {
          if (categoryMenu && !categoryMenu.classList.contains('hidden')) {
            categoryMenu.classList.add('hidden');
          }
        };
        window.addEventListener('scroll', hideDropdownOnScroll);
      }
    }
  }]);
}(/*#__PURE__*/_wrapNativeSuper(HTMLElement));
customElements.define("app-bar", AppBar);
;// ./user/src/script/utils/mlApiService.js
function mlApiService_typeof(o) { "@babel/helpers - typeof"; return mlApiService_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, mlApiService_typeof(o); }
function mlApiService_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ mlApiService_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == mlApiService_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(mlApiService_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function mlApiService_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function mlApiService_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { mlApiService_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { mlApiService_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
// Define the base URL for your ML/Recommendation APIs
var ML_BASE_URL = "http://localhost:5001/api"; // <-- Base URL for ML services

// Function to get the JWT token from localStorage (needed for user-based recs)
var mlApiService_getToken = function getToken() {
  return localStorage.getItem("token");
};

// Function to get user ID from token or localStorage
var getUserId = function getUserId() {
  var token = mlApiService_getToken();
  if (token) {
    try {
      // Decode JWT token to get user_id
      var payload = JSON.parse(atob(token.split(".")[1]));
      return payload.user_id || payload.id || payload.userId;
    } catch (error) {
      console.warn("Failed to decode token for user_id:", error);
    }
  }

  // Fallback: check if user_id is stored separately in localStorage
  var storedUserId = localStorage.getItem("user_id");
  if (storedUserId) {
    return Number.parseInt(storedUserId);
  }

  // If no user_id found, return null
  console.warn("No user_id found in token or localStorage");
  return null;
};

/**
 * Melakukan permintaan terautentikasi (jika token ada) atau tidak terautentikasi
 * ke API ML/Rekomendasi dengan body JSON.
 * Ini mirip dengan authenticatedRequest tapi dengan base URL yang berbeda.
 * @param {string} endpoint - Endpoint API ML (misal '/recommend/user').
 * @param {string} method - Metode HTTP (misal 'POST').
 * @param {Object} [body=null] - Body permintaan dalam format JSON.
 * @returns {Promise<Object>} Respons dari API ML.
 */
var mlRequest = /*#__PURE__*/function () {
  var _ref = mlApiService_asyncToGenerator(/*#__PURE__*/mlApiService_regeneratorRuntime().mark(function _callee(endpoint, method) {
    var body,
      url,
      token,
      options,
      response,
      errorBody,
      errorMessage,
      error,
      result,
      _args = arguments;
    return mlApiService_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          body = _args.length > 2 && _args[2] !== undefined ? _args[2] : null;
          url = "".concat(ML_BASE_URL).concat(endpoint);
          token = mlApiService_getToken(); // Ambil token
          options = {
            method: method,
            headers: {
              "Content-Type": "application/json"
            }
          }; // Tambahkan header Authorization HANYA jika token ada
          if (token) {
            options.headers["Authorization"] = "Bearer ".concat(token);
          }
          if (body && method !== "GET") {
            // Rekomendasi API menggunakan POST dengan body
            options.body = JSON.stringify(body);
          }
          _context.prev = 6;
          _context.next = 9;
          return fetch(url, options);
        case 9:
          response = _context.sent;
          if (response.ok) {
            _context.next = 20;
            break;
          }
          _context.next = 13;
          return response.json()["catch"](function () {
            return null;
          });
        case 13:
          errorBody = _context.sent;
          console.error("ML API HTTP error! Status: ".concat(response.status), errorBody);
          errorMessage = errorBody && errorBody.message ? errorBody.message : "Unknown ML API error"; // Lempar error dengan informasi status dan pesan
          error = new Error("ML API Error: HTTP status ".concat(response.status, ": ").concat(errorMessage));
          error.status = response.status;
          error.body = errorBody;
          throw error;
        case 20:
          _context.next = 22;
          return response.json();
        case 22:
          result = _context.sent;
          return _context.abrupt("return", result);
        case 26:
          _context.prev = 26;
          _context.t0 = _context["catch"](6);
          console.error("Error during ML API request:", _context.t0);
          // Re-throw error untuk ditangani pemanggil
          throw _context.t0;
        case 30:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[6, 26]]);
  }));
  return function mlRequest(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();

/**
 * Mengambil rekomendasi berdasarkan pengguna.
 * @param {number} userId - ID pengguna.
 * @param {number} topN - Jumlah rekomendasi yang diinginkan.
 * @returns {Promise<Object>} Daftar rekomendasi.
 */
var mlApiService_fetchUserRecommendations = function fetchUserRecommendations(userId) {
  var topN = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
  if (!userId) {
    throw new Error("User ID is required for user recommendations");
  }
  return mlRequest("/recommend/user", "POST", {
    user_id: userId,
    top_n: topN
  });
};

/**
 * Mengambil rekomendasi berdasarkan item.
 * @param {number} productId - ID item.
 * @param {number} topN - Jumlah rekomendasi yang diinginkan.
 * @param {number} [userId] - ID pengguna (optional, akan diambil otomatis jika tidak disediakan).
 * @returns {Promise<Object>} Daftar rekomendasi.
 */
var fetchItemRecommendations = function fetchItemRecommendations(productId) {
  var topN = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
  var userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  if (!productId) {
    throw new Error("Product ID is required for item recommendations");
  }

  // ✅ Ambil user_id otomatis jika tidak disediakan
  var finalUserId = userId || getUserId();
  if (!finalUserId) {
    throw new Error("User ID is required for item recommendations. Please login first.");
  }
  return mlRequest("/recommend/item", "POST", {
    product_id: productId,
    user_id: finalUserId,
    top_n: topN
  });
};

/**
 * Mengambil rekomendasi berdasarkan kata kunci pencarian.
 * @param {string} keyword - Kata kunci pencarian.
 * @param {number} topN - Jumlah rekomendasi yang diinginkan.
 * @param {number} [userId] - ID pengguna (optional, akan diambil otomatis jika tidak disediakan).
 * @returns {Promise<Object>} Daftar rekomendasi.
 */
var mlApiService_fetchSearchRecommendations = function fetchSearchRecommendations(keyword) {
  var topN = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;
  var userId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;
  if (!keyword || keyword.trim() === "") {
    throw new Error("Keyword is required for search recommendations");
  }

  // ✅ Ambil user_id otomatis jika tidak disediakan
  var finalUserId = userId || getUserId();
  if (!finalUserId) {
    throw new Error("User ID is required for search recommendations. Please login first.");
  }
  return mlRequest("/recommend/search", "POST", {
    keyword: keyword.trim(),
    user_id: finalUserId,
    top_n: topN
  });
};

/**
 * Refresh data ML (untuk admin atau maintenance)
 * @returns {Promise<Object>} Status refresh.
 */
var refreshMLData = function refreshMLData() {
  return mlRequest("/refresh_data", "POST", {});
};

// Export semua fungsi yang tersedia

;// ./user/src/script/components/product/all-product.js
function all_product_typeof(o) { "@babel/helpers - typeof"; return all_product_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, all_product_typeof(o); }
function all_product_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ all_product_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == all_product_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(all_product_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { all_product_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function all_product_defineProperty(e, r, t) { return (r = all_product_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function all_product_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function all_product_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { all_product_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { all_product_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function all_product_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function all_product_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, all_product_toPropertyKey(o.key), o); } }
function all_product_createClass(e, r, t) { return r && all_product_defineProperties(e.prototype, r), t && all_product_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function all_product_toPropertyKey(t) { var i = all_product_toPrimitive(t, "string"); return "symbol" == all_product_typeof(i) ? i : i + ""; }
function all_product_toPrimitive(t, r) { if ("object" != all_product_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != all_product_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function all_product_callSuper(t, o, e) { return o = all_product_getPrototypeOf(o), all_product_possibleConstructorReturn(t, all_product_isNativeReflectConstruct() ? Reflect.construct(o, e || [], all_product_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function all_product_possibleConstructorReturn(t, e) { if (e && ("object" == all_product_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return all_product_assertThisInitialized(t); }
function all_product_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function all_product_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && all_product_setPrototypeOf(t, e); }
function all_product_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return all_product_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !all_product_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return all_product_construct(t, arguments, all_product_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), all_product_setPrototypeOf(Wrapper, t); }, all_product_wrapNativeSuper(t); }
function all_product_construct(t, e, r) { if (all_product_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && all_product_setPrototypeOf(p, r.prototype), p; }
function all_product_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (all_product_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function all_product_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function all_product_setPrototypeOf(t, e) { return all_product_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, all_product_setPrototypeOf(t, e); }
function all_product_getPrototypeOf(t) { return all_product_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, all_product_getPrototypeOf(t); }


var AllProduct = /*#__PURE__*/function (_HTMLElement) {
  function AllProduct() {
    var _this;
    all_product_classCallCheck(this, AllProduct);
    _this = all_product_callSuper(this, AllProduct);
    _this.items = [];
    _this.isLoading = true;
    _this.error = null;
    _this.searchRecommendations = [];
    _this.isLoadingSearchRecommendations = false;
    _this.searchRecommendationsError = null;
    _this.currentSearchKeyword = "";

    // User recommendations state
    _this.userRecommendations = [];
    _this.isLoadingUserRecommendations = true;
    _this.userRecommendationsError = null;

    // Pagination state
    _this.pagination = {
      total: 0,
      page: 1,
      limit: 20,
      totalPages: 1
    };
    _this.fetchItems = _this.fetchItems.bind(_this);
    _this.handleSearchEvent = _this.handleSearchEvent.bind(_this);
    _this.fetchSearchRecommendations = _this.fetchSearchRecommendations.bind(_this);
    _this.fetchUserRecommendations = _this.fetchUserRecommendations.bind(_this);
    _this.handlePaginationClick = _this.handlePaginationClick.bind(_this);
    return _this;
  }
  all_product_inherits(AllProduct, _HTMLElement);
  return all_product_createClass(AllProduct, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.render();
      this.fetchUserRecommendations();
      this.fetchItems();
      document.addEventListener("search", this.handleSearchEvent);
      console.log("AllProduct component: Added search event listener on document.");
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      document.removeEventListener("search", this.handleSearchEvent);
      console.log("AllProduct component: Removed search event listener from document.");
    }

    // Get user ID from token
  }, {
    key: "getUserIdFromToken",
    value: function getUserIdFromToken() {
      var token = localStorage.getItem("token");
      if (!token) return null;
      try {
        var payload = JSON.parse(atob(token.split(".")[1]));
        return payload.userId || payload.id || payload.user_id;
      } catch (error) {
        console.error("Error parsing token:", error);
        return null;
      }
    }
  }, {
    key: "fetchUserRecommendations",
    value: function () {
      var _fetchUserRecommendations2 = all_product_asyncToGenerator(/*#__PURE__*/all_product_regeneratorRuntime().mark(function _callee2() {
        var userId, topN, mlResult, recommendationPromises, results;
        return all_product_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              userId = this.getUserIdFromToken();
              if (userId) {
                _context2.next = 8;
                break;
              }
              console.log("No user ID found, skipping user recommendations");
              this.userRecommendations = [];
              this.isLoadingUserRecommendations = false;
              this.userRecommendationsError = null;
              this.render();
              return _context2.abrupt("return");
            case 8:
              this.isLoadingUserRecommendations = true;
              this.userRecommendationsError = null;
              this.render();
              topN = 8; // Number of recommendations to fetch
              _context2.prev = 12;
              console.log("Fetching user-based recommendations for user ID: ".concat(userId));
              _context2.next = 16;
              return mlApiService_fetchUserRecommendations(userId, topN);
            case 16:
              mlResult = _context2.sent;
              console.log("Fetched user-based recommendations from ML API:", mlResult);
              if (!(mlResult && Array.isArray(mlResult.recommendations) && mlResult.recommendations.length > 0)) {
                _context2.next = 29;
                break;
              }
              console.log("Fetching full details for ".concat(mlResult.recommendations.length, " recommended items from main API."));
              recommendationPromises = mlResult.recommendations.map(/*#__PURE__*/function () {
                var _ref = all_product_asyncToGenerator(/*#__PURE__*/all_product_regeneratorRuntime().mark(function _callee(rec) {
                  var itemDetailResponse;
                  return all_product_regeneratorRuntime().wrap(function _callee$(_context) {
                    while (1) switch (_context.prev = _context.next) {
                      case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return apiGet("/items/".concat(rec.product_id));
                      case 3:
                        itemDetailResponse = _context.sent;
                        if (!(itemDetailResponse.status === "success" && itemDetailResponse.data)) {
                          _context.next = 8;
                          break;
                        }
                        return _context.abrupt("return", _objectSpread(_objectSpread({}, rec), itemDetailResponse.data));
                      case 8:
                        console.warn("Failed to fetch details for recommended item ID ".concat(rec.product_id, ":"), itemDetailResponse.message || "Unknown error");
                        return _context.abrupt("return", null);
                      case 10:
                        _context.next = 16;
                        break;
                      case 12:
                        _context.prev = 12;
                        _context.t0 = _context["catch"](0);
                        console.error("Error fetching details for recommended item ID ".concat(rec.product_id, ":"), _context.t0);
                        return _context.abrupt("return", null);
                      case 16:
                      case "end":
                        return _context.stop();
                    }
                  }, _callee, null, [[0, 12]]);
                }));
                return function (_x) {
                  return _ref.apply(this, arguments);
                };
              }());
              _context2.next = 23;
              return Promise.all(recommendationPromises);
            case 23:
              results = _context2.sent;
              this.userRecommendations = results.filter(function (item) {
                return item !== null;
              });
              this.isLoadingUserRecommendations = false;
              if (mlResult.recommendations.length > 0 && this.userRecommendations.length === 0) {
                this.userRecommendationsError = "Gagal memuat detail untuk rekomendasi produk.";
              } else {
                this.userRecommendationsError = null;
              }
              _context2.next = 33;
              break;
            case 29:
              this.userRecommendations = [];
              this.isLoadingUserRecommendations = false;
              this.userRecommendationsError = mlResult.message || "Tidak ada rekomendasi produk yang ditemukan.";
              console.warn("ML API returned no user recommendations or invalid data:", mlResult);
            case 33:
              _context2.next = 41;
              break;
            case 35:
              _context2.prev = 35;
              _context2.t0 = _context2["catch"](12);
              console.error("Error during ML API fetch or subsequent detail fetch for user recommendations:", _context2.t0);
              this.userRecommendations = [];
              this.isLoadingUserRecommendations = false;
              this.userRecommendationsError = _context2.t0.message || "Terjadi kesalahan saat memuat rekomendasi produk.";
            case 41:
              _context2.prev = 41;
              this.render();
              return _context2.finish(41);
            case 44:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[12, 35, 41, 44]]);
      }));
      function fetchUserRecommendations() {
        return _fetchUserRecommendations2.apply(this, arguments);
      }
      return fetchUserRecommendations;
    }()
  }, {
    key: "handleSearchEvent",
    value: function handleSearchEvent(event) {
      console.log("AllProduct component: Received search event.", event.detail.params);
      var searchTerm = event.detail.params.search || "";
      this.currentSearchKeyword = searchTerm;
      // Reset to first page when searching
      this.pagination.page = 1;
      this.fetchItems({
        search: searchTerm,
        page: 1
      });
      if (searchTerm) {
        this.fetchSearchRecommendations(searchTerm);
      } else {
        this.searchRecommendations = [];
        this.isLoadingSearchRecommendations = false;
        this.searchRecommendationsError = null;
        this.render();
      }
    }
  }, {
    key: "handlePaginationClick",
    value: function handlePaginationClick(event) {
      var target = event.target.closest("[data-page]");
      if (!target) return;
      var page = Number.parseInt(target.dataset.page);
      if (page && page !== this.pagination.page && page >= 1 && page <= this.pagination.totalPages) {
        this.pagination.page = page;
        var searchParams = this.currentSearchKeyword ? {
          search: this.currentSearchKeyword,
          page: page
        } : {
          page: page
        };
        this.fetchItems(searchParams);
      }
    }
  }, {
    key: "fetchItems",
    value: function () {
      var _fetchItems = all_product_asyncToGenerator(/*#__PURE__*/all_product_regeneratorRuntime().mark(function _callee3() {
        var params,
          queryParams,
          queryString,
          url,
          result,
          _args3 = arguments;
        return all_product_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              params = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};
              this.isLoading = true;
              this.error = null;
              this.items = [];
              this.render();
              _context3.prev = 5;
              // Add pagination parameters
              queryParams = _objectSpread({
                limit: this.pagination.limit,
                page: params.page || this.pagination.page
              }, params);
              queryString = Object.keys(queryParams).map(function (key) {
                return "".concat(encodeURIComponent(key), "=").concat(encodeURIComponent(queryParams[key]));
              }).join("&");
              url = "/items?".concat(queryString);
              console.log("Fetching items from URL:", url);
              _context3.next = 12;
              return apiGet(url);
            case 12:
              result = _context3.sent;
              console.log("Fetched items:", result);
              if (result.status === "success") {
                this.items = Array.isArray(result.data) ? result.data : [];

                // Update pagination info from API response
                if (result.pagination) {
                  this.pagination = {
                    total: result.pagination.total || 0,
                    page: result.pagination.page || 1,
                    limit: result.pagination.limit || 20,
                    totalPages: result.pagination.totalPages || 1
                  };
                }
                this.isLoading = false;
                this.error = null;
              } else {
                console.error("Failed to fetch items (API error):", result.message || "Unknown error", result);
                this.items = [];
                this.error = result.message || "Gagal memuat item.";
                this.isLoading = false;
              }
              _context3.next = 23;
              break;
            case 17:
              _context3.prev = 17;
              _context3.t0 = _context3["catch"](5);
              console.error("Error fetching items:", _context3.t0);
              this.items = [];
              this.error = _context3.t0.message || "Terjadi kesalahan saat memuat item.";
              this.isLoading = false;
            case 23:
              _context3.prev = 23;
              this.render();
              return _context3.finish(23);
            case 26:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this, [[5, 17, 23, 26]]);
      }));
      function fetchItems() {
        return _fetchItems.apply(this, arguments);
      }
      return fetchItems;
    }()
  }, {
    key: "fetchSearchRecommendations",
    value: function () {
      var _fetchSearchRecommendations2 = all_product_asyncToGenerator(/*#__PURE__*/all_product_regeneratorRuntime().mark(function _callee5(keyword) {
        var topN, mlResult, recommendationPromises, results;
        return all_product_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              if (!(!keyword || keyword.trim() === "")) {
                _context5.next = 6;
                break;
              }
              this.searchRecommendations = [];
              this.isLoadingSearchRecommendations = false;
              this.searchRecommendationsError = null;
              this.render();
              return _context5.abrupt("return");
            case 6:
              this.isLoadingSearchRecommendations = true;
              this.searchRecommendationsError = null;
              this.render();
              topN = 5;
              _context5.prev = 10;
              console.log("Fetching initial Search Based recommendations for keyword: \"".concat(keyword, "\" from ML API."));
              _context5.next = 14;
              return mlApiService_fetchSearchRecommendations(keyword, topN);
            case 14:
              mlResult = _context5.sent;
              console.log("Fetched initial Search Based recommendations from ML API:", mlResult);
              if (!(mlResult && Array.isArray(mlResult.recommendations) && mlResult.recommendations.length > 0)) {
                _context5.next = 27;
                break;
              }
              console.log("Fetching full details for ".concat(mlResult.recommendations.length, " recommended items from main API."));
              recommendationPromises = mlResult.recommendations.map(/*#__PURE__*/function () {
                var _ref2 = all_product_asyncToGenerator(/*#__PURE__*/all_product_regeneratorRuntime().mark(function _callee4(rec) {
                  var itemDetailResponse;
                  return all_product_regeneratorRuntime().wrap(function _callee4$(_context4) {
                    while (1) switch (_context4.prev = _context4.next) {
                      case 0:
                        _context4.prev = 0;
                        _context4.next = 3;
                        return apiGet("/items/".concat(rec.product_id));
                      case 3:
                        itemDetailResponse = _context4.sent;
                        if (!(itemDetailResponse.status === "success" && itemDetailResponse.data)) {
                          _context4.next = 8;
                          break;
                        }
                        return _context4.abrupt("return", _objectSpread(_objectSpread({}, rec), itemDetailResponse.data));
                      case 8:
                        console.warn("Failed to fetch details for recommended item ID ".concat(rec.product_id, ":"), itemDetailResponse.message || "Unknown error");
                        return _context4.abrupt("return", null);
                      case 10:
                        _context4.next = 16;
                        break;
                      case 12:
                        _context4.prev = 12;
                        _context4.t0 = _context4["catch"](0);
                        console.error("Error fetching details for recommended item ID ".concat(rec.product_id, ":"), _context4.t0);
                        return _context4.abrupt("return", null);
                      case 16:
                      case "end":
                        return _context4.stop();
                    }
                  }, _callee4, null, [[0, 12]]);
                }));
                return function (_x3) {
                  return _ref2.apply(this, arguments);
                };
              }());
              _context5.next = 21;
              return Promise.all(recommendationPromises);
            case 21:
              results = _context5.sent;
              this.searchRecommendations = results.filter(function (item) {
                return item !== null;
              });
              this.isLoadingSearchRecommendations = false;
              if (mlResult.recommendations.length > 0 && this.searchRecommendations.length === 0) {
                this.searchRecommendationsError = "Gagal memuat detail untuk saran pencarian.";
              } else {
                this.searchRecommendationsError = null;
              }
              _context5.next = 31;
              break;
            case 27:
              this.searchRecommendations = [];
              this.isLoadingSearchRecommendations = false;
              this.searchRecommendationsError = mlResult.message || "Tidak ada saran pencarian yang ditemukan dari ML API.";
              console.warn("ML API returned no search recommendations or invalid data:", mlResult);
            case 31:
              _context5.next = 39;
              break;
            case 33:
              _context5.prev = 33;
              _context5.t0 = _context5["catch"](10);
              console.error("Error during ML API fetch or subsequent detail fetch for search recommendations:", _context5.t0);
              this.searchRecommendations = [];
              this.isLoadingSearchRecommendations = false;
              this.searchRecommendationsError = _context5.t0.message || "Terjadi kesalahan saat memuat saran pencarian.";
            case 39:
              _context5.prev = 39;
              this.render();
              return _context5.finish(39);
            case 42:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this, [[10, 33, 39, 42]]);
      }));
      function fetchSearchRecommendations(_x2) {
        return _fetchSearchRecommendations2.apply(this, arguments);
      }
      return fetchSearchRecommendations;
    }() // Helper method to get standardized status display
  }, {
    key: "getStatusInfo",
    value: function getStatusInfo(item) {
      var status = item.status || "available";
      switch (status) {
        case "available":
          return {
            display: "Available",
            "class": "bg-green-100 text-green-800",
            showAvailabilityBadges: true
          };
        case "pending":
          return {
            display: "Pending",
            "class": "bg-yellow-100 text-yellow-800",
            showAvailabilityBadges: false
          };
        case "rented":
          return {
            display: "Rented",
            "class": "bg-blue-100 text-blue-800",
            showAvailabilityBadges: false
          };
        case "sold":
          return {
            display: "Sold",
            "class": "bg-red-100 text-red-800",
            showAvailabilityBadges: false
          };
        case "ongoing":
          return {
            display: "Ongoing",
            "class": "bg-purple-100 text-purple-800",
            showAvailabilityBadges: false
          };
        default:
          return {
            display: status,
            "class": "bg-gray-100 text-gray-800",
            showAvailabilityBadges: true
          };
      }
    }
  }, {
    key: "renderPagination",
    value: function renderPagination() {
      if (this.pagination.totalPages <= 1) {
        return "";
      }
      var currentPage = this.pagination.page;
      var totalPages = this.pagination.totalPages;
      var startItem = (currentPage - 1) * this.pagination.limit + 1;
      var endItem = Math.min(currentPage * this.pagination.limit, this.pagination.total);

      // Calculate page numbers to show
      var startPage = Math.max(1, currentPage - 2);
      var endPage = Math.min(totalPages, currentPage + 2);

      // Adjust if we're near the beginning or end
      if (currentPage <= 3) {
        endPage = Math.min(5, totalPages);
      }
      if (currentPage >= totalPages - 2) {
        startPage = Math.max(1, totalPages - 4);
      }
      var pageNumbers = [];
      for (var i = startPage; i <= endPage; i++) {
        pageNumbers.push(i);
      }
      return "\n    <div class=\"flex flex-col sm:flex-row items-center justify-between gap-4 mt-8 px-4\">\n      <!-- Results info -->\n      <div class=\"text-sm text-gray-700 font-poppins\">\n        Menampilkan <span class=\"font-medium\">".concat(startItem, "</span> sampai <span class=\"font-medium\">").concat(endItem, "</span> dari <span class=\"font-medium\">").concat(this.pagination.total, "</span> hasil\n      </div>\n      \n      <!-- Pagination controls -->\n      <div class=\"flex items-center gap-2\" id=\"pagination-controls\">\n        <!-- Previous button -->\n        <button \n          data-page=\"").concat(currentPage - 1, "\" \n          class=\"pagination-btn ").concat(currentPage === 1 ? "pagination-btn-disabled" : "pagination-btn-enabled", "\"\n          ").concat(currentPage === 1 ? "disabled" : "", "\n        >\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\n          </svg>\n          <span class=\"hidden sm:inline\">Previous</span>\n        </button>\n\n        <!-- Page numbers -->\n        <div class=\"flex items-center gap-1\">\n          ").concat(startPage > 1 ? "\n            <button data-page=\"1\" class=\"pagination-number\">1</button>\n            ".concat(startPage > 2 ? '<span class="px-2 text-gray-500">...</span>' : "", "\n          ") : "", "\n          \n          ").concat(pageNumbers.map(function (page) {
        return "\n            <button \n              data-page=\"".concat(page, "\" \n              class=\"pagination-number ").concat(page === currentPage ? "pagination-number-active" : "", "\"\n            >\n              ").concat(page, "\n            </button>\n          ");
      }).join(""), "\n          \n          ").concat(endPage < totalPages ? "\n            ".concat(endPage < totalPages - 1 ? '<span class="px-2 text-gray-500">...</span>' : "", "\n            <button data-page=\"").concat(totalPages, "\" class=\"pagination-number\">").concat(totalPages, "</button>\n          ") : "", "\n        </div>\n\n        <!-- Next button -->\n        <button \n          data-page=\"").concat(currentPage + 1, "\" \n          class=\"pagination-btn ").concat(currentPage === totalPages ? "pagination-btn-disabled" : "pagination-btn-enabled", "\"\n          ").concat(currentPage === totalPages ? "disabled" : "", "\n        >\n          <span class=\"hidden sm:inline\">Next</span>\n          <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\n          </svg>\n        </button>\n      </div>\n    </div>\n  ");
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      this.innerHTML = "\n        <style>\n          * {\n              box-sizing: border-box;\n              margin: 0;\n              padding: 0;\n          }\n\n          html, body {\n              margin: 0;\n              padding: 0;\n          }\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n\n            /* Custom scrollbar styles */\n            .custom-scrollbar::-webkit-scrollbar {\n                height: 8px;\n            }\n            \n            .custom-scrollbar::-webkit-scrollbar-track {\n                background: rgba(255, 255, 255, 0.1);\n                border-radius: 4px;\n            }\n            \n            .custom-scrollbar::-webkit-scrollbar-thumb {\n                background: linear-gradient(90deg, #3b82f6, #10b981);\n                border-radius: 4px;\n                transition: all 0.3s ease;\n            }\n            \n            .custom-scrollbar::-webkit-scrollbar-thumb:hover {\n                background: linear-gradient(90deg, #2563eb, #059669);\n            }\n\n            /* Pagination styles */\n            .pagination-btn {\n                display: flex;\n                align-items: center;\n                gap: 0.5rem;\n                padding: 0.5rem 0.75rem;\n                border-radius: 0.5rem;\n                font-size: 0.875rem;\n                font-weight: 500;\n                transition: all 0.2s;\n            }\n\n            .pagination-btn-enabled {\n                background-color: white;\n                border: 1px solid #d1d5db;\n                color: #374151;\n            }\n\n            .pagination-btn-enabled:hover {\n                background-color: #f9fafb;\n                border-color: #9ca3af;\n            }\n\n            .pagination-btn-disabled {\n                background-color: #f9fafb;\n                border: 1px solid #e5e7eb;\n                color: #9ca3af;\n                cursor: not-allowed;\n            }\n\n            .pagination-number {\n                min-width: 2.5rem;\n                height: 2.5rem;\n                display: flex;\n                align-items: center;\n                justify-content: center;\n                border-radius: 0.5rem;\n                font-size: 0.875rem;\n                font-weight: 500;\n                transition: all 0.2s;\n                background-color: white;\n                border: 1px solid #d1d5db;\n                color: #374151;\n            }\n\n            .pagination-number:hover {\n                background-color: #f3f4f6;\n                border-color: #9ca3af;\n            }\n\n            .pagination-number-active {\n                background-color: #3b82f6;\n                border-color: #3b82f6;\n                color: white;\n            }\n\n            .pagination-number-active:hover {\n                background-color: #2563eb;\n                border-color: #2563eb;\n            }\n\n            /* Recommendation card styles */\n            .recommendation-card {\n                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n                background: #ffffff;\n                border: 2px solid #e5e7eb;\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n            }\n\n            .recommendation-card:hover {\n                transform: translateY(-6px);\n                box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n                border-color: #3b82f6;\n            }\n\n            .recommendation-img {\n                transition: all 0.3s ease;\n            }\n\n            .recommendation-card:hover .recommendation-img {\n                transform: scale(1.05);\n            }\n            \n            /* product card */\n            .product-recommendation-card {\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n  background: #ffffff;\n  border: 2px solid #e5e7eb;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  border-radius: 0.75rem; /* Tambahkan ini untuk rounded corners */\n  overflow: hidden; /* Tambahkan ini untuk memastikan gambar tidak keluar dari border */\n}\n\n.product-recommendation-card:hover {\n  transform: translateY(-6px);\n  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);\n  border-color: #3b82f6;\n}\n\n.product-recommendation-img {\n  transition: all 0.3s ease;\n}\n\n.product-recommendation-card:hover .product-recommendation-img {\n  transform: scale(1.05);\n}\n\n.product-status-badge {\n  display: inline-block;\n  padding: 6px 16px;\n  border-radius: 9999px;\n  font-size: 14px;\n  font-weight: 600;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\n}\n\n.product-availability-tag {\n  background: #3b82f6;\n  color: white;\n  padding: 4px 10px;\n  border-radius: 8px;\n  font-size: 12px;\n  font-weight: 600;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.product-availability-tag.rent {\n  background: linear-gradient(135deg, #3b82f6, #2563eb);\n}\n\n.product-availability-tag.sell {\n  background: linear-gradient(135deg, #10b981, #059669);\n}\n\n            /* Main product card styles */\n            .product-card {\n                transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\n                border: 2px solid #e5e7eb;\n                background: #ffffff;\n                box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n            }\n\n            .product-card:hover {\n                transform: translateY(-12px);\n                box-shadow: 0 25px 50px rgba(0, 0, 0, 0.15);\n                border-color: #3b82f6;\n            }\n\n            .product-image-container {\n                position: relative;\n                overflow: hidden;\n                background: linear-gradient(135deg, #f8fafc, #f1f5f9);\n            }\n\n            .product-card img {\n                transition: transform 0.4s cubic-bezier(0.4, 0, 0.2, 1);\n            }\n\n            .product-card:hover img {\n                transform: scale(1.08);\n            }\n\n            .product-name {\n                display: -webkit-box;\n                -webkit-line-clamp: 2;\n                -webkit-box-orient: vertical;\n                overflow: hidden;\n                text-overflow: ellipsis;\n                min-height: 3em;\n                transition: color 0.3s ease;\n            }\n\n            .product-card:hover .product-name {\n                color: #3b82f6;\n            }\n\n            .price-tag {\n                transition: all 0.3s ease;\n                font-weight: 600;\n                background: linear-gradient(135deg, #374151, #1f2937);\n                -webkit-background-clip: text;\n                -webkit-text-fill-color: transparent;\n                background-clip: text;\n            }\n\n            .product-card:hover .price-tag {\n                background: linear-gradient(135deg, #3b82f6, #10b981);\n                -webkit-background-clip: text;\n                -webkit-text-fill-color: transparent;\n                background-clip: text;\n                transform: scale(1.05);\n            }\n\n            .status-badge {\n                transition: all 0.3s ease;\n                backdrop-filter: blur(10px);\n                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n            }\n\n            .status-badge.rent {\n                background: linear-gradient(135deg, #3b82f6, #1d4ed8);\n            }\n\n            .status-badge.sell {\n                background: linear-gradient(135deg, #10b981, #047857);\n            }\n\n            .product-card:hover .status-badge {\n                transform: scale(1.1);\n                box-shadow: 0 4px 16px rgba(0, 0, 0, 0.3);\n            }\n\n            /* Loading shimmer effect */\n            .shimmer {\n                background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);\n                background-size: 200% 100%;\n                animation: shimmer 2s infinite;\n            }\n\n            @keyframes shimmer {\n                0% { background-position: -200% 0; }\n                100% { background-position: 200% 0; }\n            }\n\n            /* Pulse animation for loading states */\n            .pulse-loading {\n                animation: pulse 1.5s ease-in-out infinite;\n            }\n\n            @keyframes pulse {\n                0%, 100% { opacity: 1; }\n                50% { opacity: 0.7; }\n            }\n\n            /* Section headers */\n            .section-header {\n                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                -webkit-background-clip: text;\n                -webkit-text-fill-color: transparent;\n                background-clip: text;\n                font-weight: 700;\n                font-size: 1.875rem;\n                margin-bottom: 1.5rem;\n            }\n\n            .section-divider {\n                height: 4px;\n                background: linear-gradient(90deg, #3b82f6, #10b981);\n                border-radius: 2px;\n                margin: 2rem 0;\n            }\n        </style>\n        \n        <div class=\"bg-white rounded-lg\">\n            <div class=\"py-6\">\n                <search-bar></search-bar>\n            </div>\n            ".concat(this.renderSearchRecommendationsSection(), "\n            ").concat(this.renderUserRecommendationsSection(), "\n            <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8\">\n                <div class=\"section-divider\"></div>\n                <h2 class=\"section-header text-center\">Semua Produk</h2>\n                ").concat(this.renderContent(), "\n                ").concat(this.renderPagination(), "\n            </div>\n        </div>\n        ");

      // Add scroll functionality for recommendations
      setTimeout(function () {
        var wrappers = _this2.querySelectorAll(".recommendations-wrapper");
        var leftButtons = _this2.querySelectorAll(".scroll-left");
        var rightButtons = _this2.querySelectorAll(".scroll-right");
        leftButtons.forEach(function (btn, index) {
          btn.addEventListener("click", function () {
            var _wrappers$index;
            (_wrappers$index = wrappers[index]) === null || _wrappers$index === void 0 || _wrappers$index.scrollBy({
              left: -300,
              behavior: "smooth"
            });
          });
        });
        rightButtons.forEach(function (btn, index) {
          btn.addEventListener("click", function () {
            var _wrappers$index2;
            (_wrappers$index2 = wrappers[index]) === null || _wrappers$index2 === void 0 || _wrappers$index2.scrollBy({
              left: 300,
              behavior: "smooth"
            });
          });
        });
      }, 0);

      // Add event listener for pagination
      var paginationContainer = this.querySelector("#pagination-controls");
      if (paginationContainer) {
        paginationContainer.addEventListener("click", this.handlePaginationClick);
      }
    }
  }, {
    key: "renderUserRecommendationsSection",
    value: function renderUserRecommendationsSection() {
      var _this3 = this;
      var userId = this.getUserIdFromToken();

      // Don't show section if user is not logged in
      if (!userId) {
        return "";
      }
      if (this.isLoadingUserRecommendations) {
        return "\n        <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-indigo-800 to-purple-900 rounded-xl shadow-lg mb-8 text-white border border-indigo-600\">\n          <h3 class=\"text-2xl font-bold mb-6 text-white flex items-center\">\n            <svg class=\"w-6 h-6 mr-3 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n            </svg>\n            Rekomendasi Produk untuk Anda\n          </h3>\n          <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n            ".concat(Array(4).fill(0).map(function () {
          return "\n              <div class=\"bg-white/10 rounded-xl p-4 pulse-loading\">\n                <div class=\"shimmer h-32 w-full rounded-lg mb-3\"></div>\n                <div class=\"shimmer h-4 w-3/4 rounded mb-2\"></div>\n                <div class=\"shimmer h-3 w-1/2 rounded\"></div>\n              </div>\n            ";
        }).join(""), "\n          </div>\n        </div>\n      ");
      }
      if (this.userRecommendationsError) {
        return "\n        <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-red-800 to-red-900 rounded-xl shadow-lg mb-8 text-white border border-red-600\">\n          <h3 class=\"text-2xl font-bold mb-4 text-white flex items-center\">\n            <svg class=\"w-6 h-6 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n            Rekomendasi Produk untuk Anda\n          </h3>\n          <p class=\"text-red-200\">Error memuat rekomendasi: ".concat(this.userRecommendationsError, "</p>\n        </div>\n      ");
      }
      if (!this.userRecommendations || this.userRecommendations.length === 0) {
        return "\n        <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded-xl shadow-lg mb-8 text-white border border-gray-700\">\n          <h3 class=\"text-2xl font-bold mb-4 text-white flex items-center\">\n            <svg class=\"w-6 h-6 mr-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n            </svg>\n            Rekomendasi Produk untuk Anda\n          </h3>\n          <p class=\"text-gray-300\">Belum ada rekomendasi yang tersedia. Mulai jelajahi produk untuk mendapatkan rekomendasi personal!</p>\n        </div>\n      ";
      }
      var backendBaseUrl = "http://localhost:5000";
      var formatRupiah = function formatRupiah(money) {
        if (money === null || money === undefined) return "-";
        var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
        if (isNaN(numericMoney)) return "-";
        return new Intl.NumberFormat("id-ID", {
          style: "currency",
          currency: "IDR",
          minimumFractionDigits: 0
        }).format(numericMoney);
      };
      var recommendationsListHtml = this.userRecommendations.map(function (rec) {
        var statusInfo = _this3.getStatusInfo(rec);
        return "\n          <div class=\"recommendation-card bg-white rounded-xl shadow-lg p-4 flex-shrink-0 w-64 relative overflow-hidden border-2 border-gray-200\">\n            <a href=\"/#/items/".concat(rec.id || rec.product_id, "\" class=\"block\">\n              <div class=\"relative mb-3\">\n                ").concat(rec.thumbnail ? "<img src=\"".concat(backendBaseUrl).concat(rec.thumbnail, "\" alt=\"").concat(rec.name || "Product image", "\" class=\"recommendation-img w-full h-32 object-cover rounded-lg\">") : '<div class="w-full h-32 bg-gradient-to-br from-gray-200 to-gray-300 rounded-lg flex items-center justify-center text-sm text-gray-500 font-medium">No Image</div>', "\n                <div class=\"absolute top-2 left-2\">\n                  <span class=\"px-2 py-1 rounded-md text-xs font-medium ").concat(statusInfo["class"], "\">").concat(statusInfo.display, "</span>\n                </div>\n                ").concat(statusInfo.showAvailabilityBadges ? "\n                <div class=\"absolute top-2 right-2 flex flex-col space-y-1\">\n                  ".concat(rec.is_available_for_rent ? "<span class=\"status-badge rent text-white text-xs px-2 py-1 rounded-md font-medium shadow-md\">Sewa</span>" : "", "\n                  ").concat(rec.is_available_for_sell ? "<span class=\"status-badge sell text-white text-xs px-2 py-1 rounded-md font-medium shadow-md\">Jual</span>" : "", "\n                </div>\n                ") : "", "\n              </div>\n              <div class=\"space-y-2\">\n                <h5 class=\"text-sm font-bold text-gray-900 leading-tight line-clamp-2 mb-2\">").concat(rec.name || rec.product_name || "Unnamed Product", "</h5>\n                ").concat(statusInfo.showAvailabilityBadges ? "\n                <div class=\"space-y-1\">\n                  ".concat(rec.is_available_for_sell ? "<p class=\"text-sm font-semibold text-gray-800\">Jual: ".concat(formatRupiah(rec.price_sell), "</p>") : "", "\n                  ").concat(rec.is_available_for_rent ? "<p class=\"text-sm font-semibold text-gray-800\">Sewa: ".concat(formatRupiah(rec.price_rent)).concat(rec.price_rent > 0 ? " /hari" : "", "</p>") : "", "\n                </div>\n                ") : "", "\n              </div>\n            </a>\n          </div>\n        ");
      }).join("");
      return "\n      <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-indigo-800 to-purple-900 rounded-xl shadow-lg mb-8 border border-indigo-600\">\n        <h3 class=\"text-2xl font-bold mb-6 text-white flex items-center\">\n          <i class=\"fa-solid fa-sparkles mr-3\"></i>\n          Rekomendasi Produk untuk Anda\n        </h3>\n        <div class=\"relative\">\n          <!-- Tombol kiri -->\n          <button class=\"scroll-left absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-black/20 hover:bg-white/30 text-white p-3 rounded-full shadow-lg backdrop-blur-sm transition-all duration-300\">\n            <i class=\"fa-solid fa-angle-left text-lg\"></i>\n          </button>\n\n          <!-- Daftar rekomendasi -->\n          <div class=\"flex overflow-x-auto space-x-6 pb-4 custom-scrollbar recommendations-wrapper\">\n            ".concat(recommendationsListHtml, "\n          </div>\n\n          <!-- Tombol kanan -->\n          <button class=\"scroll-right absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-black/20 hover:bg-white/30 text-white p-3 rounded-full shadow-lg backdrop-blur-sm transition-all duration-300\">\n            <i class=\"fa-solid fa-angle-right text-lg\"></i>\n          </button>\n        </div>\n      </div>\n    ");
    }
  }, {
    key: "renderSearchRecommendationsSection",
    value: function renderSearchRecommendationsSection() {
      var _this4 = this;
      if (!this.currentSearchKeyword || this.currentSearchKeyword.trim() === "") {
        return "";
      }
      if (this.isLoadingSearchRecommendations) {
        return "\n        <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded-xl shadow-lg mb-8 text-white border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4 text-white flex items-center\">\n            <svg class=\"w-5 h-5 mr-2 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"></path>\n            </svg>\n            Saran Terkait \"".concat(this.currentSearchKeyword, "\"\n          </h3>\n          <p class=\"text-gray-300 pulse-loading\">Memuat saran...</p>\n        </div>\n      ");
      }
      if (this.searchRecommendationsError) {
        return "\n        <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-red-800 to-red-900 rounded-xl shadow-lg mb-8 text-white border border-red-600\">\n          <h3 class=\"text-lg font-semibold mb-4 text-white flex items-center\">\n            <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n            Saran Terkait \"".concat(this.currentSearchKeyword, "\"\n          </h3>\n          <p>Error memuat saran: ").concat(this.searchRecommendationsError, "</p>\n        </div>\n      ");
      }
      if (!this.searchRecommendations || this.searchRecommendations.length === 0) {
        return "\n        <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded-xl shadow-lg mb-8 text-white border border-gray-700\">\n          <h3 class=\"text-lg font-semibold mb-4 text-white flex items-center\">\n            <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"></path>\n            </svg>\n            Saran Terkait \"".concat(this.currentSearchKeyword, "\"\n          </h3>\n          <p class=\"text-gray-300\">Tidak ada saran yang ditemukan.</p>\n        </div>\n      ");
      }
      var backendBaseUrl = "http://localhost:5000";
      var formatRupiah = function formatRupiah(money) {
        if (money === null || money === undefined) return "-";
        var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
        if (isNaN(numericMoney)) return "-";
        return new Intl.NumberFormat("id-ID", {
          style: "currency",
          currency: "IDR",
          minimumFractionDigits: 0
        }).format(numericMoney);
      };
      var recommendationsListHtml = this.searchRecommendations.map(function (rec) {
        var statusInfo = _this4.getStatusInfo(rec);
        return "\n          <div class=\"recommendation-card bg-white rounded-xl shadow-lg p-4 flex-shrink-0 w-64 relative overflow-hidden border-2 border-gray-200\">\n            <a href=\"/#/items/".concat(rec.id || rec.product_id, "\" class=\"block\">\n              <div class=\"relative mb-3\">\n                ").concat(rec.thumbnail ? "<img src=\"".concat(backendBaseUrl).concat(rec.thumbnail, "\" alt=\"").concat(rec.name || "Product image", "\" class=\"recommendation-img w-full h-32 object-cover rounded-lg\">") : '<div class="w-full h-32 bg-gradient-to-br from-gray-200 to-gray-300 rounded-lg flex items-center justify-center text-sm text-gray-500 font-medium">No Image</div>', "\n                <div class=\"absolute top-2 left-2\">\n                  <span class=\"px-2 py-1 rounded-md text-xs font-medium ").concat(statusInfo["class"], "\">").concat(statusInfo.display, "</span>\n                </div>\n                ").concat(statusInfo.showAvailabilityBadges ? "\n                <div class=\"absolute top-2 right-2 flex flex-col space-y-1\">\n                  ".concat(rec.is_available_for_rent ? "<span class=\"status-badge rent text-white text-xs px-2 py-1 rounded-md font-medium shadow-md\">Sewa</span>" : "", "\n                  ").concat(rec.is_available_for_sell ? "<span class=\"status-badge sell text-white text-xs px-2 py-1 rounded-md font-medium shadow-md\">Jual</span>" : "", "\n                </div>\n                ") : "", "\n              </div>\n              <div class=\"space-y-2\">\n                <h5 class=\"text-sm font-bold text-gray-900 leading-tight line-clamp-2 mb-2\">").concat(rec.name || rec.product_name || "Unnamed Product", "</h5>\n                ").concat(statusInfo.showAvailabilityBadges ? "\n                <div class=\"space-y-1\">\n                  ".concat(rec.is_available_for_sell ? "<p class=\"text-sm font-semibold text-gray-800\">Jual: ".concat(formatRupiah(rec.price_sell), "</p>") : "", "\n                  ").concat(rec.is_available_for_rent ? "<p class=\"text-sm font-semibold text-gray-800\">Sewa: ".concat(formatRupiah(rec.price_rent)).concat(rec.price_rent > 0 ? " /hari" : "", "</p>") : "", "\n                </div>\n                ") : "", "\n              </div>\n            </a>\n          </div>\n        ");
      }).join("");
      return "\n      <div class=\"mx-auto max-w-2xl px-4 py-4 sm:px-6 sm:py-8 lg:max-w-7xl lg:px-8 bg-gradient-to-r from-gray-800 to-gray-900 rounded-xl shadow-lg mb-8 border border-gray-700\">\n        <h3 class=\"text-lg font-semibold mb-4 text-white flex items-center\">\n          <i class=\"fa-solid fa-wand-magic-sparkles mr-2\"></i>\n          Saran Terkait \"".concat(this.currentSearchKeyword, "\"\n        </h3>\n        <div class=\"relative\">\n          <!-- Tombol kiri -->\n          <button class=\"scroll-left absolute left-0 top-1/2 -translate-y-1/2 z-10 bg-gray-700 hover:bg-gray-600 text-white p-2 rounded-full shadow\">\n            <i class=\"fa-solid fa-angle-left\"></i>\n          </button>\n\n          <!-- Daftar saran -->\n          <div class=\"flex overflow-x-auto space-x-6 pb-4 custom-scrollbar recommendations-wrapper\">\n            ").concat(recommendationsListHtml, "\n          </div>\n\n          <!-- Tombol kanan -->\n          <button class=\"scroll-right absolute right-0 top-1/2 -translate-y-1/2 z-10 bg-gray-700 hover:bg-gray-600 text-white p-2 rounded-full shadow\">\n            <i class=\"fa-solid fa-angle-right\"></i>\n          </button>\n        </div>\n      </div>\n    ");
    }
  }, {
    key: "renderContent",
    value: function renderContent() {
      if (this.isLoading) {
        return "\n        <div class=\"grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-6\">\n          ".concat(Array(8).fill(0).map(function () {
          return "\n              <div class=\"w-full bg-white rounded-xl shadow-lg border-2 border-gray-200 overflow-hidden\">\n                <div class=\"shimmer h-64 w-full\"></div>\n                <div class=\"p-5\">\n                  <div class=\"shimmer h-6 w-3/4 mb-2 rounded\"></div>\n                  <div class=\"shimmer h-4 w-1/2 rounded\"></div>\n                </div>\n              </div>\n            ";
        }).join(""), "\n        </div>\n      ");
      }
      if (this.error) {
        return "\n        <div class=\"text-center py-12\">\n          <div class=\"bg-red-50 border border-red-200 rounded-xl p-6 max-w-md mx-auto\">\n            <svg class=\"w-12 h-12 text-red-500 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n            <p class=\"text-red-600 font-semibold\">Error: ".concat(this.error, "</p>\n          </div>\n        </div>\n      ");
      }
      if (!this.items || this.items.length === 0) {
        return "\n        <div class=\"text-center py-16\">\n          <div class=\"bg-gray-50 border-2 border-dashed border-gray-300 rounded-xl p-8 max-w-md mx-auto\">\n            <svg class=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2M4 13h2m8-8v2m0 6v2\"></path>\n            </svg>\n            <p class=\"text-gray-600 font-medium text-lg\">No items found matching your criteria.</p>\n            <p class=\"text-gray-500 mt-2\">Try adjusting your search terms or browse all products.</p>\n          </div>\n        </div>\n      ";
      }
      return "\n      <div class=\"grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8\">\n        ".concat(this.generateItemList(this.items), "\n      </div>\n    ");
    }
  }, {
    key: "generateItemList",
    value: function generateItemList(items) {
      var _this5 = this;
      var formatRupiah = function formatRupiah(money) {
        if (money === null || money === undefined) return "-";
        var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
        if (isNaN(numericMoney)) return "-";
        return new Intl.NumberFormat("id-ID", {
          style: "currency",
          currency: "IDR",
          minimumFractionDigits: 0
        }).format(numericMoney);
      };
      var backendBaseUrl = "http://localhost:5000";
      return items.map(function (item) {
        var statusInfo = _this5.getStatusInfo(item);

        // UBAH BAGIAN INI - Ganti dengan desain card dari detail-product.js
        return "\n        <div class=\"product-recommendation-card\">\n          <a href=\"/#/items/".concat(item.id, "\" class=\"block text-gray-800\" data-item-id=\"").concat(item.id, "\">\n            <div class=\"relative overflow-hidden\">\n              ").concat(item.thumbnail ? "<img src=\"".concat(backendBaseUrl).concat(item.thumbnail, "\" alt=\"").concat(item.name || "Product image", "\" \n                      class=\"product-recommendation-img w-full h-48 object-cover\">") : '<div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center text-gray-400"><i class="fa-solid fa-image text-3xl"></i></div>', "\n              <div class=\"absolute top-3 left-3\">\n                <span class=\"product-status-badge ").concat(statusInfo["class"], " text-xs\">").concat(statusInfo.display, "</span>\n              </div>\n            </div>\n            \n            <div class=\"p-4\">\n              <h5 class=\"text-lg font-bold text-gray-900 line-clamp-2 mb-2 h-14\">").concat(item.name || "Unnamed Product", "</h5>\n              \n              ").concat(statusInfo.showAvailabilityBadges ? "\n                  <div class=\"flex items-center gap-2 flex-wrap mb-3\">\n                    ".concat(item.is_available_for_rent ? "<span class=\"product-availability-tag rent\">Sewa</span>" : "", "\n                    ").concat(item.is_available_for_sell ? "<span class=\"product-availability-tag sell\">Jual</span>" : "", "\n                  </div>\n                  <div class=\"space-y-1 border-t border-gray-200 pt-3\">\n                    ").concat(item.is_available_for_sell ? "<p class=\"text-sm font-semibold flex items-center\">\n                        <i class=\"fa-solid fa-tag text-green-600 mr-2\"></i>\n                        Jual: ".concat(formatRupiah(item.price_sell), "\n                      </p>") : "", "\n                    ").concat(item.is_available_for_rent ? "<p class=\"text-sm font-semibold flex items-center\">\n                        <i class=\"fa-solid fa-calendar-days text-blue-600 mr-2\"></i>\n                        Sewa: ".concat(formatRupiah(item.price_rent)).concat(item.price_rent > 0 ? " /hari" : "", "\n                      </p>") : "", "\n                  </div>\n                  ") : "", "\n            </div>\n          </a>\n        </div>\n      ");
      }).join("");
    }
  }]);
}(/*#__PURE__*/all_product_wrapNativeSuper(HTMLElement));
customElements.define("all-product", AllProduct);
;// ./user/src/script/utils/utils.js
function utils_typeof(o) { "@babel/helpers - typeof"; return utils_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, utils_typeof(o); }
function utils_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function utils_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, utils_toPropertyKey(o.key), o); } }
function utils_createClass(e, r, t) { return r && utils_defineProperties(e.prototype, r), t && utils_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function utils_toPropertyKey(t) { var i = utils_toPrimitive(t, "string"); return "symbol" == utils_typeof(i) ? i : i + ""; }
function utils_toPrimitive(t, r) { if ("object" != utils_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != utils_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var utils_Utils = /*#__PURE__*/function () {
  function Utils() {
    utils_classCallCheck(this, Utils);
  }
  return utils_createClass(Utils, null, [{
    key: "emptyElement",
    value: function emptyElement(element) {
      element.innerHTML = '';
    }
  }, {
    key: "showElement",
    value: function showElement(element) {
      element.style.display = 'block';
      element.hidden = false;
    }
  }, {
    key: "hideElement",
    value: function hideElement(element) {
      element.style.display = 'none';
      element.hidden = true;
    }
  }, {
    key: "isValidInteger",
    value: function isValidInteger(newValue) {
      return Number.isNaN(newValue) || Number.isFinite(newValue);
    }

    // Fungsi autentikasi
  }, {
    key: "isAuthenticated",
    value: function isAuthenticated() {
      // Cek apakah token ada di localStorage
      var token = localStorage.getItem('token');
      return token !== null && token !== undefined; // Kembalikan true jika token ada
    }

    // Metode untuk mengalihkan ke halaman login
  }, {
    key: "redirectToLogin",
    value: function redirectToLogin() {
      window.location.hash = '#/login';
    }

    // static login() { // Metode ini tidak lagi diperlukan jika status login ditentukan oleh token
    //     localStorage.setItem('isLoggedIn', 'true');
    // }

    // static logout() { // Metode ini tidak lagi diperlukan jika status login ditentukan oleh token
    //     localStorage.removeItem('isLoggedIn');
    // }
  }, {
    key: "getUserInfo",
    value: function getUserInfo() {
      var user = localStorage.getItem('user');
      return user ? JSON.parse(user) : null;
    }
  }]);
}();
/* harmony default export */ const utils = (utils_Utils);
// EXTERNAL MODULE: ./node_modules/sweetalert2/dist/sweetalert2.all.js
var sweetalert2_all = __webpack_require__(465);
var sweetalert2_all_default = /*#__PURE__*/__webpack_require__.n(sweetalert2_all);
;// ./user/src/script/components/product/detail-product.js
function detail_product_typeof(o) { "@babel/helpers - typeof"; return detail_product_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, detail_product_typeof(o); }
function detail_product_ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function detail_product_objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? detail_product_ownKeys(Object(t), !0).forEach(function (r) { detail_product_defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : detail_product_ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function detail_product_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ detail_product_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == detail_product_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(detail_product_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function detail_product_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function detail_product_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { detail_product_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { detail_product_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function detail_product_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function detail_product_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, detail_product_toPropertyKey(o.key), o); } }
function detail_product_createClass(e, r, t) { return r && detail_product_defineProperties(e.prototype, r), t && detail_product_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function detail_product_callSuper(t, o, e) { return o = detail_product_getPrototypeOf(o), detail_product_possibleConstructorReturn(t, detail_product_isNativeReflectConstruct() ? Reflect.construct(o, e || [], detail_product_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function detail_product_possibleConstructorReturn(t, e) { if (e && ("object" == detail_product_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return detail_product_assertThisInitialized(t); }
function detail_product_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function detail_product_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && detail_product_setPrototypeOf(t, e); }
function detail_product_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return detail_product_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !detail_product_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return detail_product_construct(t, arguments, detail_product_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), detail_product_setPrototypeOf(Wrapper, t); }, detail_product_wrapNativeSuper(t); }
function detail_product_construct(t, e, r) { if (detail_product_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && detail_product_setPrototypeOf(p, r.prototype), p; }
function detail_product_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (detail_product_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function detail_product_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function detail_product_setPrototypeOf(t, e) { return detail_product_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, detail_product_setPrototypeOf(t, e); }
function detail_product_getPrototypeOf(t) { return detail_product_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, detail_product_getPrototypeOf(t); }
function detail_product_defineProperty(e, r, t) { return (r = detail_product_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function detail_product_toPropertyKey(t) { var i = detail_product_toPrimitive(t, "string"); return "symbol" == detail_product_typeof(i) ? i : i + ""; }
function detail_product_toPrimitive(t, r) { if ("object" != detail_product_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != detail_product_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var DetailProduct = /*#__PURE__*/function (_HTMLElement) {
  function DetailProduct() {
    var _this;
    detail_product_classCallCheck(this, DetailProduct);
    _this = detail_product_callSuper(this, DetailProduct);
    detail_product_defineProperty(_this, "formatRupiah", function (money) {
      if (money === null || money === undefined) return "-";
      var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
      if (isNaN(numericMoney)) return "-";
      return new Intl.NumberFormat("id-ID", {
        style: "currency",
        currency: "IDR",
        minimumFractionDigits: 0
      }).format(numericMoney);
    });
    _this._itemId = null;
    _this._item = null;
    _this._reviews = [];
    _this.isLoading = true;
    _this.error = null;
    _this._isCurrentUserReviewed = false;
    _this._shouldShowReviewForm = window.location.hash.endsWith("#review");
    _this._editingReviewId = null;
    _this._showRentForm = false;
    _this._userReviewId = null;
    _this.itemBasedRecommendations = [];
    _this.isLoadingItemBasedRecommendations = false;
    _this.itemBasedRecommendationsError = null;
    _this._currentPhotoIndex = 0;
    _this._itemRecScrollPosition = 0;
    _this._hasCompletedTransaction = false;
    _this.handleReviewSubmit = _this.handleReviewSubmit.bind(_this);
    _this.handleBuy = _this.handleBuy.bind(_this);
    _this.handleRent = _this.handleRent.bind(_this);
    _this._handleHashChange = _this.handleHashChange.bind(_this);
    _this.handleRentFormSubmit = _this.handleRentFormSubmit.bind(_this);
    _this.cancelRentForm = _this.cancelRentForm.bind(_this);
    _this.fetchItemBasedRecommendationsForCurrentItem = _this.fetchItemBasedRecommendationsForCurrentItem.bind(_this);
    return _this;
  }
  detail_product_inherits(DetailProduct, _HTMLElement);
  return detail_product_createClass(DetailProduct, [{
    key: "itemId",
    set: function set(id) {
      if (this._itemId !== id) {
        this._itemId = id;
        this._shouldShowReviewForm = window.location.hash.endsWith("#review");
        this._editingReviewId = null;
        this._showRentForm = false;
        this._currentPhotoIndex = 0;
        this._itemRecScrollPosition = 0;
        this.renderContent();
        if (this._itemId) {
          this.fetchItemAndReviews(this._itemId);
        } else {
          this.error = "ID Item tidak valid.";
          this.isLoading = false;
          this.renderContent();
        }
      }
    }
  }, {
    key: "connectedCallback",
    value: function () {
      var _connectedCallback = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee() {
        return detail_product_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              this._shouldShowReviewForm = window.location.hash.endsWith("#review");
              this._editingReviewId = null;
              if (this._itemId) {
                this.renderContent();
                this.fetchItemAndReviews(this._itemId);
              }
              window.addEventListener("hashchange", this._handleHashChange);
            case 4:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function connectedCallback() {
        return _connectedCallback.apply(this, arguments);
      }
      return connectedCallback;
    }()
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this.removeEventListeners();
      window.removeEventListener("hashchange", this._handleHashChange);
      this._editingReviewId = null;
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(name, oldValue, newValue) {
      if (name === "item-id") {
        var newItemId = newValue && typeof newValue === "string" && newValue !== "undefined" ? newValue : null;
        this.itemId = newItemId;
      }
    }
  }, {
    key: "handleHashChange",
    value: function handleHashChange() {
      var oldShouldShow = this._shouldShowReviewForm;
      this._shouldShowReviewForm = window.location.hash.endsWith("#review");
      if (oldShouldShow !== this._shouldShowReviewForm && !this.isLoading && !this.error && this._item) {
        this.renderContent();
      }
    }

    // Helper method to get standardized status display
  }, {
    key: "getStatusInfo",
    value: function getStatusInfo(item) {
      var status = item.status || "available";
      switch (status) {
        case "available":
          return {
            display: "Available",
            "class": "status-available",
            canTransact: true
          };
        case "pending":
          return {
            display: "Pending",
            "class": "status-pending",
            canTransact: false
          };
        case "rented":
          return {
            display: "Rented",
            "class": "status-rented",
            canTransact: false
          };
        case "sold":
          return {
            display: "Sold",
            "class": "status-sold",
            canTransact: false
          };
        case "ongoing":
          return {
            display: "Ongoing",
            "class": "status-ongoing",
            canTransact: false
          };
        default:
          return {
            display: status,
            "class": "status-default",
            canTransact: false
          };
      }
    }
  }, {
    key: "fetchItemAndReviews",
    value: function () {
      var _fetchItemAndReviews = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee2(itemId) {
        var itemResponse, currentUser, response, reviewsResponse, _currentUser, userReview;
        return detail_product_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (itemId) {
                _context2.next = 5;
                break;
              }
              this.error = "ID Item tidak valid.";
              this.isLoading = false;
              this.renderContent();
              return _context2.abrupt("return");
            case 5:
              this.isLoading = true;
              this.error = null;
              this._item = null;
              this._reviews = [];
              this._isCurrentUserReviewed = false;
              this._editingReviewId = null;
              this._showRentForm = false;
              this._userReviewId = null;
              this._currentPhotoIndex = 0;
              this._itemRecScrollPosition = 0;
              this._hasCompletedTransaction = false;
              this.itemBasedRecommendations = [];
              this.isLoadingItemBasedRecommendations = false;
              this.itemBasedRecommendationsError = null;
              this.renderContent();
              _context2.prev = 20;
              _context2.next = 23;
              return apiGet("/items/".concat(itemId));
            case 23:
              itemResponse = _context2.sent;
              if (!(itemResponse.status === "success" && itemResponse.data)) {
                _context2.next = 45;
                break;
              }
              this._item = itemResponse.data;
              currentUser = utils.getUserInfo();
              if (!currentUser) {
                _context2.next = 38;
                break;
              }
              _context2.prev = 28;
              _context2.next = 31;
              return fetch("http://localhost:5000/api/transactions/user/".concat(currentUser.id, "/item/").concat(itemId, "/completed"), {
                headers: {
                  'Authorization': "Bearer ".concat(utils.getToken())
                }
              });
            case 31:
              response = _context2.sent;
              this._hasCompletedTransaction = response.ok && response.status === 200;
              _context2.next = 38;
              break;
            case 35:
              _context2.prev = 35;
              _context2.t0 = _context2["catch"](28);
              this._hasCompletedTransaction = false;
            case 38:
              this.fetchItemBasedRecommendationsForCurrentItem(this._item.id);
              _context2.next = 41;
              return apiGet("/reviews/item/".concat(itemId));
            case 41:
              reviewsResponse = _context2.sent;
              if (reviewsResponse.status === "success" && reviewsResponse.data) {
                this._reviews = Array.isArray(reviewsResponse.data) ? reviewsResponse.data : [];
                _currentUser = utils.getUserInfo();
                if (_currentUser) {
                  userReview = this._reviews.find(function (review) {
                    return review.user_id === _currentUser.id;
                  });
                  if (userReview) {
                    this._isCurrentUserReviewed = true;
                    this._userReviewId = userReview.id;
                  } else {
                    this._isCurrentUserReviewed = false;
                    this._userReviewId = null;
                  }
                } else {
                  this._isCurrentUserReviewed = false;
                  this._userReviewId = null;
                }
              } else {
                this._reviews = [];
                this._isCurrentUserReviewed = false;
                this._userReviewId = null;
              }
              _context2.next = 50;
              break;
            case 45:
              this._item = null;
              this._reviews = [];
              this.error = itemResponse.message || "Gagal memuat detail item.";
              this._isCurrentUserReviewed = false;
              this._userReviewId = null;
            case 50:
              _context2.next = 59;
              break;
            case 52:
              _context2.prev = 52;
              _context2.t1 = _context2["catch"](20);
              this._item = null;
              this._reviews = [];
              this.error = _context2.t1.message || "Terjadi kesalahan saat memuat data.";
              this._isCurrentUserReviewed = false;
              this._userReviewId = null;
            case 59:
              _context2.prev = 59;
              this.isLoading = false;
              this._editingReviewId = null;
              this._showRentForm = false;
              this.renderContent();
              if (this._item) {
                this.fetchItemBasedRecommendationsForCurrentItem(this._item.id);
              }
              return _context2.finish(59);
            case 66:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[20, 52, 59, 66], [28, 35]]);
      }));
      function fetchItemAndReviews(_x) {
        return _fetchItemAndReviews.apply(this, arguments);
      }
      return fetchItemAndReviews;
    }()
  }, {
    key: "getStyles",
    value: function getStyles() {
      return "\n      <style>\n        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n        \n        .detail-product-container {\n          font-family: 'Poppins', sans-serif;\n          color: #334155;\n        }\n        \n        .detail-product-container h1, \n        .detail-product-container h2, \n        .detail-product-container h3, \n        .detail-product-container h4, \n        .detail-product-container h5, \n        .detail-product-container h6 {\n          font-family: 'Poppins', sans-serif;\n        }\n        \n        .detail-product-container .hide-scrollbar {\n          scrollbar-width: none;\n          -ms-overflow-style: none;\n        }\n        \n        .detail-product-container .hide-scrollbar::-webkit-scrollbar {\n          display: none;\n        }\n        \n        .detail-product-container .nav-button {\n          background: rgba(79, 70, 229, 0.85);\n          color: white;\n          border: none;\n          width: 44px;\n          height: 44px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          backdrop-filter: blur(4px);\n          box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);\n        }\n        \n        .detail-product-container .nav-button:hover {\n          background: rgba(67, 56, 202, 0.95);\n          transform: translateY(-2px);\n          box-shadow: 0 6px 16px rgba(79, 70, 229, 0.4);\n        }\n        \n        .detail-product-container .nav-button:disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n          transform: none;\n          box-shadow: none;\n        }\n        \n        .detail-product-container .nav-button:not(:disabled):active {\n          transform: scale(0.95);\n        }\n        \n        .detail-product-container .thumbnail-item {\n          transition: all 0.3s ease;\n          border: 2px solid transparent;\n          border-radius: 12px;\n          overflow: hidden;\n          cursor: pointer;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);\n        }\n        \n        .detail-product-container .thumbnail-item:hover {\n          transform: translateY(-3px);\n          box-shadow: 0 6px 16px rgba(0, 0, 0, 0.12);\n        }\n        \n        .detail-product-container .thumbnail-item.active {\n          border-color: #6366f1;\n          box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.3);\n        }\n        \n        .detail-product-container .recommendation-card {\n          background: #ffffff;\n          border: 1px solid #e2e8f0;\n          border-radius: 16px;\n          overflow: hidden;\n          transition: all 0.3s ease;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n        }\n        \n        .detail-product-container .recommendation-card:hover {\n          transform: translateY(-8px);\n          box-shadow: 0 12px 24px rgba(0, 0, 0, 0.12);\n          border-color: #6366f1;\n        }\n        \n        .detail-product-container .recommendation-card:active {\n          transform: translateY(-4px);\n        }\n        \n        .detail-product-container .recommendation-img {\n          transition: all 0.5s ease;\n        }\n        \n        .detail-product-container .recommendation-card:hover .recommendation-img {\n          transform: scale(1.08);\n        }\n        \n        .detail-product-container .slider-nav-button {\n          background: rgba(79, 70, 229, 0.85);\n          color: white;\n          border: none;\n          width: 40px;\n          height: 40px;\n          border-radius: 50%;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          flex-shrink: 0;\n          box-shadow: 0 4px 12px rgba(79, 70, 229, 0.3);\n        }\n        \n        .detail-product-container .slider-nav-button:hover {\n          background: rgba(67, 56, 202, 0.95);\n          transform: translateY(-2px);\n          box-shadow: 0 6px 16px rgba(79, 70, 229, 0.4);\n        }\n        \n        .detail-product-container .slider-nav-button:disabled {\n          opacity: 0.4;\n          cursor: not-allowed;\n          transform: none;\n          box-shadow: none;\n        }\n        \n        .detail-product-container .slider-nav-button:not(:disabled):active {\n          transform: scale(0.9);\n        }\n        \n        .detail-product-container .status-badge {\n          display: inline-block;\n          padding: 6px 16px;\n          border-radius: 9999px;\n          font-size: 14px;\n          font-weight: 600;\n          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.08);\n        }\n        \n        .detail-product-container .status-available {\n          background: linear-gradient(135deg, #10b981, #059669);\n          color: white;\n        }\n        \n        .detail-product-container .status-pending {\n          background: linear-gradient(135deg, #f59e0b, #d97706);\n          color: white;\n        }\n        \n        .detail-product-container .status-rented {\n          background: linear-gradient(135deg, #3b82f6, #2563eb);\n          color: white;\n        }\n        \n        .detail-product-container .status-sold {\n          background: linear-gradient(135deg, #ef4444, #dc2626);\n          color: white;\n        }\n        \n        .detail-product-container .status-ongoing {\n          background: linear-gradient(135deg, #8b5cf6, #7c3aed);\n          color: white;\n        }\n        \n        .detail-product-container .status-default {\n          background: linear-gradient(135deg, #6b7280, #4b5563);\n          color: white;\n        }\n        \n        .detail-product-container .info-card {\n          background: #f8fafc;\n          color: #334155;\n          padding: 20px;\n          border-radius: 16px;\n          box-shadow: 0 4px 16px rgba(0, 0, 0, 0.06);\n          border: 1px solid #e2e8f0;\n          transition: all 0.3s ease;\n        }\n        \n        .detail-product-container .info-card:hover {\n          box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\n          transform: translateY(-2px);\n        }\n        \n        .detail-product-container .price-info-card {\n          background: linear-gradient(135deg, #4f46e5, #6366f1);\n          color: white;\n          border: none;\n        }\n        \n        .detail-product-container .price-info-card:hover {\n          background: linear-gradient(135deg, #4338ca, #4f46e5);\n        }\n        \n        .detail-product-container .action-button {\n          padding: 12px 28px;\n          border-radius: 12px;\n          font-weight: 600;\n          border: none;\n          cursor: pointer;\n          transition: all 0.3s ease;\n          font-family: 'Poppins', sans-serif;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n        \n        .detail-product-container .action-button:hover {\n          transform: translateY(-3px);\n          box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n        }\n        \n        .detail-product-container .action-button:active {\n          transform: translateY(-1px);\n        }\n        \n        .detail-product-container .btn-buy {\n          background: linear-gradient(135deg, #10b981, #059669);\n          color: white;\n        }\n        \n        .detail-product-container .btn-buy:hover {\n          background: linear-gradient(135deg, #059669, #047857);\n        }\n        \n        .detail-product-container .btn-rent {\n          background: linear-gradient(135deg, #3b82f6, #2563eb);\n          color: white;\n        }\n        \n        .detail-product-container .btn-rent:hover {\n          background: linear-gradient(135deg, #2563eb, #1d4ed8);\n        }\n        \n        .detail-product-container .btn-cancel {\n          background: #f1f5f9;\n          color: #64748b;\n        }\n        \n        .detail-product-container .btn-cancel:hover {\n          background: #e2e8f0;\n          color: #475569;\n        }\n        \n        .detail-product-container .availability-tag {\n          background: #3b82f6;\n          color: white;\n          padding: 4px 10px;\n          border-radius: 8px;\n          font-size: 12px;\n          font-weight: 600;\n          box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n        }\n        \n        .detail-product-container .availability-tag.rent {\n          background: linear-gradient(135deg, #3b82f6, #2563eb);\n        }\n        \n        .detail-product-container .availability-tag.sell {\n          background: linear-gradient(135deg, #10b981, #059669);\n        }\n        \n        .detail-product-container .availability-tag:hover {\n          transform: translateY(-2px);\n          box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);\n        }\n        \n        .detail-product-container .section-title {\n          position: relative;\n          font-weight: 700;\n          color: #1e293b;\n          padding-bottom: 12px;\n          margin-bottom: 24px;\n        }\n        \n        .detail-product-container .section-title::after {\n          content: '';\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          width: 60px;\n          height: 4px;\n          background: linear-gradient(135deg, #4f46e5, #6366f1);\n          border-radius: 2px;\n        }\n        \n        .detail-product-container .product-main-image {\n          border-radius: 16px;\n          box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);\n          transition: all 0.3s ease;\n        }\n        \n        .detail-product-container .product-main-image:hover {\n          box-shadow: 0 12px 32px rgba(0, 0, 0, 0.15);\n        }\n        \n        .detail-product-container .review-card {\n          border-radius: 12px;\n          background: #f8fafc;\n          border: 1px solid #e2e8f0;\n          transition: all 0.3s ease;\n        }\n        \n        .detail-product-container .review-card:hover {\n          box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);\n          transform: translateY(-2px);\n        }\n        \n        .detail-product-container .review-form {\n          border-radius: 12px;\n          background: #f0f9ff;\n          border: 1px solid #bae6fd;\n        }\n        \n        .detail-product-container .edit-review-form {\n          border-radius: 12px;\n          background: #eff6ff;\n          border: 1px solid #bfdbfe;\n        }\n        \n        .detail-product-container .shimmer {\n          background: linear-gradient(90deg, #f1f5f9 25%, #e2e8f0 50%, #f1f5f9 75%);\n          background-size: 200% 100%;\n          animation: shimmer 2s infinite;\n        }\n        \n        @keyframes shimmer {\n          0% { background-position: -200% 0; }\n          100% { background-position: 200% 0; }\n        }\n        \n        .detail-product-container .pulse {\n          animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;\n        }\n        \n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.7; }\n        }\n      </style>\n    ";
    }
  }, {
    key: "renderContent",
    value: function renderContent() {
      this.innerHTML = "";
      var styles = this.getStyles();
      var itemDetailsHtml = this.renderItemDetails();
      var itemBasedRecommendationsHtml = this.renderItemBasedRecommendations();
      var rentFormHtml = this.renderRentForm();
      var reviewsSectionHtml = this.renderReviewsSection();
      this.innerHTML = "\n        ".concat(styles, "\n        <div class=\"detail-product-container\">\n            <div class=\"container mx-auto px-4 py-8\">\n                ").concat(itemDetailsHtml, "\n                ").concat(rentFormHtml, "\n                ").concat(itemBasedRecommendationsHtml, "\n                ").concat(reviewsSectionHtml, "\n            </div>\n        </div>\n        ");
      this.setupEventListeners();
    }
  }, {
    key: "renderItemDetails",
    value: function renderItemDetails() {
      var _this2 = this;
      if (this.isLoading && !this._item) {
        return "\n        <div class=\"bg-white shadow-xl rounded-2xl p-8 mb-8\">\n          <div class=\"shimmer h-8 w-3/4 rounded-lg mb-8\"></div>\n          <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            <div class=\"shimmer h-96 w-full rounded-2xl\"></div>\n            <div class=\"space-y-6\">\n              <div class=\"shimmer h-32 w-full rounded-xl\"></div>\n              <div class=\"shimmer h-40 w-full rounded-xl\"></div>\n              <div class=\"shimmer h-40 w-full rounded-xl\"></div>\n            </div>\n          </div>\n        </div>\n      ";
      }
      if (this.error && !this._item) {
        return "\n        <div class=\"bg-red-50 border-2 border-red-200 rounded-2xl p-8 mb-8 text-center\">\n          <svg class=\"w-16 h-16 text-red-500 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n          </svg>\n          <h3 class=\"text-xl font-bold text-red-700 mb-2\">Error</h3>\n          <p class=\"text-red-600\">".concat(this.error, "</p>\n        </div>\n      ");
      }
      if (!this._item) {
        return "\n        <div class=\"bg-gray-50 border-2 border-gray-200 rounded-2xl p-8 mb-8 text-center\">\n          <svg class=\"w-16 h-16 text-gray-400 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n          <h3 class=\"text-xl font-bold text-gray-700 mb-2\">Detail Tidak Tersedia</h3>\n          <p class=\"text-gray-600\">Detail item tidak dapat ditemukan.</p>\n        </div>\n      ";
      }
      var item = this._item;
      var formatRupiah = function formatRupiah(money) {
        if (money === null || money === undefined) return "-";
        var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
        if (isNaN(numericMoney)) return "-";
        return new Intl.NumberFormat("id-ID", {
          style: "currency",
          currency: "IDR",
          minimumFractionDigits: 0
        }).format(numericMoney);
      };
      var statusInfo = this.getStatusInfo(item);
      var currentUser = utils.getUserInfo();
      var isOwner = currentUser && this._item && this._item.user_id === currentUser.id;
      var showBuyRentButtons = statusInfo.canTransact && !isOwner && !this._showRentForm;
      return " \n        <div class=\"bg-white shadow-xl rounded-2xl p-8 mb-8\">\n            <h2 class=\"text-3xl font-bold mb-8 text-indigo-900\">".concat(item.name, "</h2>\n            <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n                <!-- Photo Gallery -->\n                <div>\n                    ").concat(item.photos && item.photos.length > 0 ? "\n                        <!-- Main Photo Display -->\n                        <div class=\"mb-8\">\n                            <div class=\"relative bg-gray-50 rounded-2xl overflow-hidden product-main-image\" style=\"height: 450px;\">\n                                <img src=\"http://localhost:5000".concat(item.photos[this._currentPhotoIndex], "\" \n                                     alt=\"").concat(item.name, "\" \n                                     class=\"w-full h-full object-contain\">\n                                ").concat(item.photos.length > 1 ? "\n                                    <button class=\"absolute left-4 top-1/2 transform -translate-y-1/2 nav-button\" \n                                            id=\"prev-photo\">\n                                        <i class=\"fa-solid fa-angle-left text-lg\"></i>\n                                    </button>\n                                    <button class=\"absolute right-4 top-1/2 transform -translate-y-1/2 nav-button\" \n                                            id=\"next-photo\">\n                                        <i class=\"fa-solid fa-angle-right text-lg\"></i>\n                                    </button>\n                                " : "", "\n                            </div>\n                        </div>\n                        \n                        <!-- Thumbnail Slider -->\n                        ").concat(item.photos.length > 1 ? "\n                            <div class=\"relative\">\n                                <div class=\"flex items-center gap-4\">\n                                    <div class=\"flex-1 overflow-hidden\">\n                                        <div class=\"flex gap-4 transition-transform duration-300 hide-scrollbar\" \n                                             id=\"thumbnail-container\" style=\"overflow-x: auto;\">\n                                            ".concat(item.photos.map(function (photo, index) {
        return "\n                                                <div class=\"flex-shrink-0 cursor-pointer thumbnail-item ".concat(index === _this2._currentPhotoIndex ? "active" : "", "\" \n                                                     data-index=\"").concat(index, "\">\n                                                    <img src=\"http://localhost:5000").concat(photo, "\" \n                                                         alt=\"").concat(item.name, " ").concat(index + 1, "\" \n                                                         class=\"w-24 h-24 object-cover\">\n                                                </div>\n                                            ");
      }).join(""), "\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        ") : "", "\n                    ") : '<div class="w-full h-96 bg-gray-100 rounded-2xl mb-6 flex items-center justify-center text-gray-500"><span class="text-lg font-medium">Tidak Ada Foto</span></div>', "\n                </div>\n\n                <!-- Product Information -->\n                <div class=\"space-y-6\">\n                    <!-- Description -->\n                    <div class=\"bg-gray-50 p-6 rounded-xl\">\n                        <h3 class=\"text-xl font-semibold mb-4 text-indigo-900\">Deskripsi</h3>\n                        <p class=\"text-gray-700 leading-relaxed\">").concat(item.description || "Tidak ada deskripsi tersedia.", "</p>\n                    </div>\n\n                    <!-- Product Details -->\n                    <div class=\"info-card\">\n                        <h3 class=\"text-xl font-semibold mb-4 text-indigo-900\">Detail Item</h3>\n                        <div class=\"space-y-3\">\n                            <p class=\"flex items-center\">\n                                <span class=\"w-32 font-medium text-gray-700\">Kategori:</span> \n                                <span class=\"bg-indigo-100 text-indigo-800 px-3 py-1 rounded-lg text-sm font-medium\">").concat(item.category_name || "-", "</span>\n                            </p>\n                            <p class=\"flex items-center\">\n                                <span class=\"w-32 font-medium text-gray-700\">Status Item:</span> \n                                <span class=\"status-badge ").concat(statusInfo["class"], "\">").concat(statusInfo.display, "</span>\n                            </p>\n                        </div>\n                    </div>\n\n                    <!-- Pricing Information -->\n                    ").concat(statusInfo.canTransact ? "\n                    <div class=\"info-card price-info-card\">\n                        <h3 class=\"text-xl font-semibold mb-4\">Informasi Harga</h3>\n                        <div class=\"space-y-3\">\n                            ".concat(item.is_available_for_sell ? "\n                                <p class=\"flex items-center\">\n                                    <span class=\"w-32 font-medium text-white/90\">Harga Jual:</span> \n                                    <span class=\"text-xl font-bold\">".concat(formatRupiah(item.price_sell), "</span>\n                                </p>") : "", "\n                            ").concat(item.is_available_for_rent ? "\n                                <p class=\"flex items-center\">\n                                    <span class=\"w-32 font-medium text-white/90\">Harga Sewa:</span> \n                                    <span class=\"text-xl font-bold\">".concat(formatRupiah(item.price_rent), "/hari</span>\n                                </p>\n                                <p class=\"flex items-center\">\n                                    <span class=\"w-32 font-medium text-white/90\">Deposit Sewa:</span> \n                                    <span class=\"text-lg font-bold\">").concat(formatRupiah(item.deposit_amount), "</span>\n                                </p>\n                            ") : "", "\n                        </div>\n                    </div>\n                    ") : "", "\n\n                    <!-- Location & Seller -->\n                    <div class=\"info-card\">\n                        <h3 class=\"text-xl font-semibold mb-4 text-indigo-900\">Lokasi & Penjual</h3>\n                        <div class=\"space-y-3\">\n                            <p class=\"flex items-center\">\n                                <i class=\"fa-solid fa-location-dot text-indigo-600 mr-2\"></i>\n                                <span class=\"font-medium text-gray-700 mr-2\">Lokasi:</span> \n                                <span>").concat(item.city_name || "-", ", ").concat(item.province_name || "-", "</span>\n                            </p>\n                            <p class=\"flex items-center\">\n                                <i class=\"fa-solid fa-user text-indigo-600 mr-2\"></i>\n                                <span class=\"font-medium text-gray-700 mr-2\">Penjual:</span> \n                                <span>").concat(item.owner_name || "Tidak Diketahui", "</span>\n                            </p>\n                            <p class=\"flex items-center\">\n                                <i class=\"fa-solid fa-envelope text-indigo-600 mr-2\"></i>\n                                <span class=\"font-medium text-gray-700 mr-2\">Email:</span> \n                                <span>").concat(item.owner_email || "-", "</span>\n                            </p>\n                        </div>\n                    </div>\n\n                    <!-- Action Buttons -->\n                    ").concat(showBuyRentButtons ? "\n                        <div class=\"flex gap-4 mt-8\">\n                            ".concat(item.is_available_for_sell ? "<button id=\"buy-button\" class=\"action-button btn-buy flex items-center\"><i class=\"fa-solid fa-shopping-cart mr-2\"></i> Beli Sekarang</button>" : "", "\n                            ").concat(item.is_available_for_rent ? "<button id=\"rent-button\" class=\"action-button btn-rent flex items-center\"><i class=\"fa-solid fa-calendar-days mr-2\"></i> Sewa</button>" : "", "\n                        </div>\n                    ") : isOwner && statusInfo.canTransact ? "<div class=\"bg-indigo-100 text-indigo-800 px-4 py-3 rounded-xl mt-6 flex items-center\"><i class=\"fa-solid fa-circle-info mr-2\"></i> Anda adalah pemilik item ini.</div>" : !statusInfo.canTransact ? "<div class=\"bg-amber-100 text-amber-800 px-4 py-3 rounded-xl mt-6 flex items-center\"><i class=\"fa-solid fa-circle-exclamation mr-2\"></i> Item ini saat ini tidak tersedia untuk transaksi.</div>" : "", "\n                </div>\n            </div>\n        </div>\n        ");
    }
  }, {
    key: "renderReviewsSection",
    value: function renderReviewsSection() {
      var _this3 = this;
      var reviewsHtml = "";
      if (this.isLoading && !this._item) {
        reviewsHtml = "\n        <div class=\"space-y-4\">\n          ".concat(Array(3).fill().map(function () {
          return "\n            <div class=\"shimmer h-32 w-full rounded-xl\"></div>\n          ";
        }).join(""), "\n        </div>\n      ");
      } else if (this.error && !this._item) {
        reviewsHtml = "";
      } else if (this._reviews.length === 0) {
        reviewsHtml = "\n        <div class=\"bg-gray-50 border-2 border-dashed border-gray-200 rounded-xl p-8 text-center\">\n          <svg class=\"w-12 h-12 text-gray-400 mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\"></path>\n          </svg>\n          <p class=\"text-gray-600\">Belum ada review untuk item ini.</p>\n          ".concat(utils.isAuthenticated() && !this._isCurrentUserReviewed ? this._hasCompletedTransaction ? "\n                <button class=\"mt-4 px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors\" \n                        onclick=\"window.location.hash = window.location.hash + '#review'\">\n                  Tulis Review Pertama\n                </button>\n                " : "\n                <p class=\"mt-4 text-amber-600\">\n                  <i class=\"fa-solid fa-circle-info mr-1\"></i>\n                  Selesaikan transaksi untuk dapat memberikan review\n                </p>\n                " : "", "\n        </div>\n      ");
      } else {
        reviewsHtml = "\n        <div class=\"space-y-6\">\n          ".concat(this._reviews.map(function (review) {
          return _this3.renderReview(review);
        }).join(""), "\n        </div>\n      ");
      }
      var currentUser = utils.getUserInfo();
      var showAddReviewForm = currentUser && !!this._item && !this._isCurrentUserReviewed && this._shouldShowReviewForm && this._editingReviewId === null && this._hasCompletedTransaction;
      return "\n      <div class=\"bg-white shadow-xl rounded-2xl p-8 mt-8\">\n        <h3 class=\"section-title text-2xl\">Review Pengguna (".concat(this._reviews.length, ")</h3>\n\n        ").concat(showAddReviewForm ? this.renderReviewForm() : "", "\n\n        <div id=\"reviews-list\" class=\"mt-6\">\n          ").concat(reviewsHtml, "\n        </div>\n        \n        ").concat(!showAddReviewForm && currentUser && !this._isCurrentUserReviewed && !this._editingReviewId ? this._hasCompletedTransaction ? "\n              <div class=\"mt-8 text-center\">\n                <button class=\"action-button bg-indigo-600 text-white hover:bg-indigo-700\" \n                        onclick=\"window.location.hash = window.location.hash + '#review'\">\n                  <i class=\"fa-solid fa-pen-to-square mr-2\"></i> Tulis Review Anda\n                </button>\n              </div>\n              " : "\n              <div class=\"mt-8 text-center\">\n                <div class=\"bg-amber-100 text-amber-800 px-4 py-3 rounded-xl inline-flex items-center\">\n                  <i class=\"fa-solid fa-circle-info mr-2\"></i>\n                  Anda harus menyelesaikan transaksi dengan item ini untuk dapat memberikan review\n                </div>\n              </div>\n              " : "", "\n      </div>\n    ");
    }
  }, {
    key: "renderReviewForm",
    value: function renderReviewForm() {
      if (!this._item || !utils.isAuthenticated() || this._isCurrentUserReviewed || this._editingReviewId !== null || !this._hasCompletedTransaction) {
        return "";
      }
      return "\n      <div id=\"review-form-section\" class=\"mb-8 p-6 review-form\">\n        <h4 class=\"text-xl font-semibold mb-4 text-indigo-900 flex items-center\">\n          <i class=\"fa-solid fa-pen-to-square mr-2 text-indigo-600\"></i>\n          Tulis Review Anda\n        </h4>\n        <form id=\"add-review-form\">\n          <div class=\"mb-4\">\n            <label for=\"review-comment\" class=\"block text-sm font-medium text-gray-700 mb-2\">Komentar</label>\n            <textarea id=\"review-comment\" name=\"comment\" rows=\"4\" \n                      class=\"w-full rounded-xl border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" \n                      placeholder=\"Bagikan pendapat Anda tentang produk ini...\" required></textarea>\n          </div>\n          <div class=\"flex justify-end\">\n            <button type=\"submit\" class=\"action-button bg-indigo-600 text-white hover:bg-indigo-700\">\n              <i class=\"fa-solid fa-paper-plane mr-2\"></i> Kirim Review\n            </button>\n          </div>\n        </form>\n      </div>\n    ";
    }
  }, {
    key: "renderEditReviewForm",
    value: function renderEditReviewForm(review) {
      if (!review || !utils.isAuthenticated()) {
        return "";
      }
      if (this._editingReviewId !== review.id) {
        return "";
      }
      return "\n      <div class=\"mt-4 mb-6 p-6 edit-review-form\">\n        <h4 class=\"text-xl font-semibold mb-4 text-indigo-900 flex items-center\">\n          <i class=\"fa-solid fa-pen-to-square mr-2 text-indigo-600\"></i>\n          Edit Review Anda\n        </h4>\n        <form class=\"edit-review-form\" data-review-id=\"".concat(review.id, "\">\n          <div class=\"mb-4\">\n            <label for=\"edit-review-comment-").concat(review.id, "\" class=\"block text-sm font-medium text-gray-700 mb-2\">Komentar</label>\n            <textarea id=\"edit-review-comment-").concat(review.id, "\" name=\"comment\" rows=\"4\" \n                      class=\"w-full rounded-xl border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" \n                      required>").concat(review.comment || "", "</textarea>\n          </div>\n          <div class=\"flex justify-end gap-3\">\n            <button type=\"button\" class=\"cancel-edit-button action-button btn-cancel\">\n              <i class=\"fa-solid fa-xmark mr-2\"></i> Batal\n            </button>\n            <button type=\"submit\" class=\"save-edit-button action-button bg-indigo-600 text-white hover:bg-indigo-700\">\n              <i class=\"fa-solid fa-check mr-2\"></i> Simpan Perubahan\n            </button>\n          </div>\n        </form>\n      </div>\n    ");
    }
  }, {
    key: "renderReview",
    value: function renderReview(review) {
      if (!review) return "";
      var currentUser = utils.getUserInfo();
      var isCurrentUserReview = currentUser && currentUser.id === review.user_id;
      var reviewDate = review.created_at ? new Date(review.created_at) : null;
      var formattedDate = reviewDate ? new Intl.DateTimeFormat("id-ID", {
        year: "numeric",
        month: "long",
        day: "numeric"
      }).format(reviewDate) : "-";
      if (isCurrentUserReview && this._editingReviewId === review.id) {
        return this.renderEditReviewForm(review);
      }
      return "\n      <div class=\"review-card p-6\" data-review-id=\"".concat(review.id, "\">\n        <div class=\"flex items-center mb-3\">\n          <div class=\"w-10 h-10 rounded-full bg-indigo-100 text-indigo-600 flex items-center justify-center font-bold text-lg mr-3\">\n            ").concat((review.user_name || "?")[0].toUpperCase(), "\n          </div>\n          <div>\n            <p class=\"font-semibold text-gray-900\">").concat(review.user_name || "Pengguna Tidak Diketahui", "</p>\n            <p class=\"text-gray-500 text-sm\">").concat(formattedDate, "</p>\n          </div>\n        </div>\n        \n        <p class=\"text-gray-700 mt-3 mb-4\" id=\"review-comment-").concat(review.id, "\">").concat(review.comment || "-", "</p>\n        \n        ").concat(isCurrentUserReview && this._editingReviewId === null ? "\n            <div class=\"flex justify-end gap-2\">\n              <button class=\"edit-review-button flex items-center text-indigo-600 bg-indigo-50 hover:bg-indigo-100 px-3 py-2 rounded-lg text-sm font-medium transition-colors\" data-review-id=\"".concat(review.id, "\">\n                <i class=\"fa-solid fa-pen-to-square mr-1\"></i> Edit\n              </button>\n              <button class=\"delete-review-button flex items-center text-red-600 bg-red-50 hover:bg-red-100 px-3 py-2 rounded-lg text-sm font-medium transition-colors\" data-review-id=\"").concat(review.id, "\">\n                <i class=\"fa-solid fa-trash-can mr-1\"></i> Hapus\n              </button>\n            </div>\n            ") : "", "\n      </div>\n    ");
    }
  }, {
    key: "renderRentForm",
    value: function renderRentForm() {
      if (!this._showRentForm || !this._item || !utils.isAuthenticated()) {
        return "";
      }
      var today = new Date().toISOString().split("T")[0];
      var item = this._item;
      var formatRupiah = this.formatRupiah;
      return "\n      <div id=\"rent-form-section\" class=\"bg-white shadow-xl rounded-2xl p-8 mt-8 mb-8\">\n        <h3 class=\"section-title text-2xl\">Formulir Penyewaan</h3>\n        \n        <div class=\"bg-indigo-50 border border-indigo-200 rounded-xl p-4 mb-6\">\n          <div class=\"flex flex-wrap gap-4 items-center\">\n            <div class=\"flex-shrink-0\">\n              <img src=\"".concat(item.thumbnail ? "http://localhost:5000".concat(item.thumbnail) : "https://via.placeholder.com/80", "\" \n                   alt=\"").concat(item.name, "\" class=\"w-20 h-20 object-cover rounded-lg\">\n            </div>\n            <div class=\"flex-grow\">\n              <h4 class=\"font-semibold text-lg text-indigo-900\">").concat(item.name, "</h4>\n              <div class=\"flex flex-wrap gap-4 mt-2\">\n                <p class=\"text-indigo-700 font-medium\">Harga Sewa: ").concat(formatRupiah(item.price_rent), "/hari</p>\n                <p class=\"text-indigo-700 font-medium\">Deposit: ").concat(formatRupiah(item.deposit_amount), "</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <form id=\"rent-item-form\" class=\"space-y-6\">\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <label for=\"rent-start-date\" class=\"block text-sm font-medium text-gray-700 mb-2\">Tanggal Mulai Sewa</label>\n              <input type=\"date\" id=\"rent-start-date\" name=\"rent_start_date\"\n                  class=\"w-full rounded-xl border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                  required min=\"").concat(today, "\">\n            </div>\n            <div>\n              <label for=\"rent-end-date\" class=\"block text-sm font-medium text-gray-700 mb-2\">Tanggal Selesai Sewa</label>\n              <input type=\"date\" id=\"rent-end-date\" name=\"rent_end_date\"\n                  class=\"w-full rounded-xl border-gray-300 shadow-sm focus:border-indigo-500 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\"\n                  required min=\"").concat(today, "\">\n            </div>\n          </div>\n          \n          <div class=\"flex flex-wrap gap-4 mt-8\">\n            <button type=\"submit\" class=\"action-button btn-rent flex items-center\">\n              <i class=\"fa-solid fa-check mr-2\"></i> Ajukan Penyewaan\n            </button>\n            <button type=\"button\" id=\"cancel-rent-button\" class=\"action-button btn-cancel flex items-center\">\n              <i class=\"fa-solid fa-xmark mr-2\"></i> Batal\n            </button>\n          </div>\n        </form>\n      </div>\n    ");
    }
  }, {
    key: "renderItemBasedRecommendations",
    value: function renderItemBasedRecommendations() {
      var _this4 = this;
      if (this.isLoading || this.error || !this._item) {
        return "";
      }
      if (this.isLoadingItemBasedRecommendations) {
        return "\n        <div class=\"bg-white shadow-xl rounded-2xl p-8 mt-8 mb-8\">\n          <h3 class=\"section-title text-2xl\">Produk Serupa Lainnya</h3>\n          <div class=\"grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4\">\n            ".concat(Array(8).fill().map(function () {
          return "\n              <div class=\"shimmer h-64 w-full rounded-xl\"></div>\n            ";
        }).join(""), "\n          </div>\n        </div>\n      ");
      }
      if (this.itemBasedRecommendationsError) {
        return "\n        <div class=\"bg-red-50 border border-red-200 text-red-700 px-6 py-4 rounded-xl mt-8 mb-8\">\n          <div class=\"flex items-center\">\n            <svg class=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n            <span class=\"font-medium\">Error:</span>\n            <span class=\"ml-1\">".concat(this.itemBasedRecommendationsError, "</span>\n          </div>\n        </div>\n      ");
      }
      if (!this.itemBasedRecommendations || this.itemBasedRecommendations.length === 0) {
        return "\n        <div class=\"bg-white shadow-xl rounded-2xl p-8 mt-8 mb-8\">\n          <h3 class=\"section-title text-2xl\">Produk Serupa Lainnya</h3>\n          <div class=\"bg-gray-50 border-2 border-dashed border-gray-200 rounded-xl p-6 text-center\">\n            <svg class=\"w-12 h-12 text-gray-400 mx-auto mb-3\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\"></path>\n            </svg>\n            <p class=\"text-gray-600\">Tidak ada rekomendasi serupa yang tersedia saat ini.</p>\n          </div>\n        </div>\n      ";
      }
      var backendBaseUrl = "http://localhost:5000";
      var formatRupiah = this.formatRupiah;

      // Ensure we have exactly 8 recommendations or as many as possible
      var recommendationsToShow = this.itemBasedRecommendations.slice(0, 8);

      // If we have less than 8, duplicate some to fill the space
      while (recommendationsToShow.length < 8 && this.itemBasedRecommendations.length > 0) {
        var itemsToAdd = Math.min(this.itemBasedRecommendations.length, 8 - recommendationsToShow.length);
        for (var i = 0; i < itemsToAdd; i++) {
          recommendationsToShow.push(detail_product_objectSpread({}, this.itemBasedRecommendations[i % this.itemBasedRecommendations.length]));
        }
      }
      var recommendationsListHtml = recommendationsToShow.map(function (rec) {
        var statusInfo = _this4.getStatusInfo(rec);
        return "\n          <div class=\"recommendation-card\">\n            <a href=\"/#/items/".concat(rec.id || rec.product_id, "\" class=\"block text-gray-800\" data-item-id=\"").concat(rec.id || rec.product_id, "\">\n              <div class=\"relative overflow-hidden\">\n                ").concat(rec.thumbnail ? "<img src=\"".concat(backendBaseUrl).concat(rec.thumbnail, "\" alt=\"").concat(rec.name || "Product image", "\" \n                        class=\"recommendation-img w-full h-48 object-cover\">") : '<div class="w-full h-48 bg-gradient-to-br from-gray-100 to-gray-200 flex items-center justify-center text-gray-400"><i class="fa-solid fa-image text-3xl"></i></div>', "\n                <div class=\"absolute top-3 left-3\">\n                  <span class=\"status-badge ").concat(statusInfo["class"], " text-xs\">").concat(statusInfo.display, "</span>\n                </div>\n              </div>\n              \n              <div class=\"p-4\">\n                <h5 class=\"text-lg font-bold text-gray-900 line-clamp-2 mb-2 h-14\">").concat(rec.name || rec.product_name || "Unnamed Product", "</h5>\n                \n                ").concat(statusInfo.canTransact ? "\n                    <div class=\"flex items-center gap-2 flex-wrap mb-3\">\n                      ".concat(rec.is_available_for_rent ? "<span class=\"availability-tag rent\">Sewa</span>" : "", "\n                      ").concat(rec.is_available_for_sell ? "<span class=\"availability-tag sell\">Jual</span>" : "", "\n                    </div>\n                    <div class=\"space-y-1 border-t border-gray-200 pt-3\">\n                      ").concat(rec.is_available_for_sell ? "<p class=\"text-sm font-semibold flex items-center\">\n                          <i class=\"fa-solid fa-tag text-green-600 mr-2\"></i>\n                          Jual: ".concat(formatRupiah(rec.price_sell), "\n                        </p>") : "", "\n                      ").concat(rec.is_available_for_rent ? "<p class=\"text-sm font-semibold flex items-center\">\n                          <i class=\"fa-solid fa-calendar-days text-blue-600 mr-2\"></i>\n                          Sewa: ".concat(formatRupiah(rec.price_rent)).concat(rec.price_rent > 0 ? " /hari" : "", "\n                        </p>") : "", "\n                    </div>\n                    ") : "", "\n              </div>\n            </a>\n          </div>\n        ");
      }).join("");
      return "\n      <div class=\"bg-white shadow-xl rounded-2xl p-8 mt-8 mb-8\">\n        <h3 class=\"section-title text-2xl\">Produk Serupa Lainnya</h3>\n        \n        <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n          ".concat(recommendationsListHtml, "\n        </div>\n      </div>\n    ");
    }
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this5 = this;
      this.removeEventListeners();
      this.setupPhotoNavigation();
      this.setupRecommendationSliders();
      var addReviewForm = this.querySelector("#add-review-form");
      if (addReviewForm) {
        this._addReviewFormSubmitHandler = this.handleReviewSubmit;
        addReviewForm.addEventListener("submit", this._addReviewFormSubmitHandler);
        if (window.location.hash.endsWith("#review") && this._shouldShowReviewForm) {
          var reviewFormSection = this.querySelector("#review-form-section");
          if (reviewFormSection) {
            requestAnimationFrame(function () {
              reviewFormSection.scrollIntoView({
                behavior: "smooth",
                block: "start"
              });
            });
          }
        }
      }
      var reviewsList = this.querySelector("#reviews-list");
      if (reviewsList) {
        this._reviewActionsDelegate = function (event) {
          var _target$closest;
          var target = event.target;
          var reviewId = target.dataset.reviewId || ((_target$closest = target.closest("[data-review-id]")) === null || _target$closest === void 0 ? void 0 : _target$closest.dataset.reviewId);
          var isButton = target.tagName === "BUTTON";
          if (isButton && target.closest(".edit-review-form")) {
            var form = target.closest(".edit-review-form");
            var formReviewId = form ? Number.parseInt(form.dataset.reviewId, 10) : null;
            if (!formReviewId) return;
            if (target.classList.contains("save-edit-button")) {
              _this5.handleEditSubmit(event, formReviewId);
              return;
            } else if (target.classList.contains("cancel-edit-button")) {
              _this5.cancelEditReview(event);
              return;
            }
          }
          if (isButton && reviewId) {
            if (target.classList.contains("edit-review-button")) {
              _this5.handleEditReview(Number.parseInt(reviewId, 10));
            } else if (target.classList.contains("delete-review-button")) {
              _this5.handleDeleteReview(Number.parseInt(reviewId, 10));
            }
          }
        };
        reviewsList.addEventListener("click", this._reviewActionsDelegate);
      }
      var buyButton = this.querySelector("#buy-button");
      if (buyButton) {
        this._buyButtonClickHandler = this.handleBuy;
        buyButton.addEventListener("click", this._buyButtonClickHandler);
      }
      var rentButton = this.querySelector("#rent-button");
      if (rentButton) {
        this._rentButtonClickHandler = this.handleRent;
        rentButton.addEventListener("click", this._rentButtonClickHandler);
      }
      var rentItemForm = this.querySelector("#rent-item-form");
      if (rentItemForm) {
        this._rentFormSubmitHandler = this.handleRentFormSubmit;
        rentItemForm.addEventListener("submit", this._rentFormSubmitHandler);
        var cancelRentButton = rentItemForm.querySelector("#cancel-rent-button");
        if (cancelRentButton) {
          this._cancelRentButtonClickHandler = this.cancelRentForm;
          cancelRentButton.addEventListener("click", this._cancelRentButtonClickHandler);
        }
        requestAnimationFrame(function () {
          rentItemForm.scrollIntoView({
            behavior: "smooth",
            block: "start"
          });
        });
      }
    }
  }, {
    key: "setupPhotoNavigation",
    value: function setupPhotoNavigation() {
      var _this6 = this;
      if (!this._item || !this._item.photos || this._item.photos.length <= 1) return;
      var prevButton = this.querySelector("#prev-photo");
      var nextButton = this.querySelector("#next-photo");
      var thumbPrevButton = this.querySelector("#thumb-prev");
      var thumbNextButton = this.querySelector("#thumb-next");
      if (prevButton && nextButton) {
        this._prevPhotoHandler = function () {
          _this6._currentPhotoIndex = _this6._currentPhotoIndex > 0 ? _this6._currentPhotoIndex - 1 : _this6._item.photos.length - 1;
          _this6.updatePhotoDisplay();
        };
        this._nextPhotoHandler = function () {
          _this6._currentPhotoIndex = _this6._currentPhotoIndex < _this6._item.photos.length - 1 ? _this6._currentPhotoIndex + 1 : 0;
          _this6.updatePhotoDisplay();
        };
        prevButton.addEventListener("click", this._prevPhotoHandler);
        nextButton.addEventListener("click", this._nextPhotoHandler);
      }
      if (thumbPrevButton && thumbNextButton) {
        this._thumbPrevHandler = function () {
          return _this6.scrollThumbnails(-1);
        };
        this._thumbNextHandler = function () {
          return _this6.scrollThumbnails(1);
        };
        thumbPrevButton.addEventListener("click", this._thumbPrevHandler);
        thumbNextButton.addEventListener("click", this._thumbNextHandler);
      }
      var thumbnails = this.querySelectorAll(".thumbnail-item");
      thumbnails.forEach(function (thumb, index) {
        var handler = function handler() {
          _this6._currentPhotoIndex = index;
          _this6.updatePhotoDisplay();
        };
        thumb.addEventListener("click", handler);
        thumb._clickHandler = handler;
      });
    }
  }, {
    key: "setupRecommendationSliders",
    value: function setupRecommendationSliders() {
      var _this7 = this;
      var itemRecPrev = this.querySelector("#item-rec-prev");
      var itemRecNext = this.querySelector("#item-rec-next");
      if (itemRecPrev && itemRecNext) {
        this._itemRecPrevHandler = function () {
          return _this7.scrollRecommendations("item", -1);
        };
        this._itemRecNextHandler = function () {
          return _this7.scrollRecommendations("item", 1);
        };
        itemRecPrev.addEventListener("click", this._itemRecPrevHandler);
        itemRecNext.addEventListener("click", this._itemRecNextHandler);
      }

      // Add click handler for recommendation items
      var recommendationsContainer = this.querySelector("#item-recommendations-container");
      if (recommendationsContainer) {
        this._recommendationClickHandler = function (event) {
          var link = event.target.closest("a[data-item-id]");
          if (link) {
            var itemId = link.dataset.itemId;
            if (itemId) {
              // Trigger ML refresh before navigation
              _this7.triggerMLRefresh(itemId);
            }
          }
        };
        recommendationsContainer.addEventListener("click", this._recommendationClickHandler);
      }
    }
  }, {
    key: "updatePhotoDisplay",
    value: function updatePhotoDisplay() {
      var _this8 = this;
      var mainImg = this.querySelector(".bg-gray-50 img");
      var thumbnails = this.querySelectorAll(".thumbnail-item");
      if (mainImg && this._item && this._item.photos) {
        mainImg.src = "http://localhost:5000".concat(this._item.photos[this._currentPhotoIndex]);
      }
      thumbnails.forEach(function (thumb, index) {
        if (index === _this8._currentPhotoIndex) {
          thumb.classList.add("active");
        } else {
          thumb.classList.remove("active");
        }
      });
    }
  }, {
    key: "scrollThumbnails",
    value: function scrollThumbnails(direction) {
      var container = this.querySelector("#thumbnail-container");
      if (!container) return;
      var scrollAmount = 100;
      container.scrollLeft += direction * scrollAmount;
    }
  }, {
    key: "scrollRecommendations",
    value: function scrollRecommendations(type, direction) {
      if (type === "item") {
        var container = this.querySelector("#item-recommendations-container");
        if (container) {
          var cardWidth = 280; // Approximate width of a card + gap
          var scrollAmount = cardWidth * direction;
          container.scrollBy({
            left: scrollAmount,
            behavior: "smooth"
          });
          this._itemRecScrollPosition = container.scrollLeft + scrollAmount;
        }
      }
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      var addReviewForm = this.querySelector("#add-review-form");
      if (addReviewForm && this._addReviewFormSubmitHandler) {
        addReviewForm.removeEventListener("submit", this._addReviewFormSubmitHandler);
        this._addReviewFormSubmitHandler = null;
      }
      var reviewsList = this.querySelector("#reviews-list");
      if (reviewsList && this._reviewActionsDelegate) {
        reviewsList.removeEventListener("click", this._reviewActionsDelegate);
        this._reviewActionsDelegate = null;
      }
      var buyButton = this.querySelector("#buy-button");
      if (buyButton && this._buyButtonClickHandler) {
        buyButton.removeEventListener("click", this._buyButtonClickHandler);
        this._buyButtonClickHandler = null;
      }
      var rentButton = this.querySelector("#rent-button");
      if (rentButton && this._rentButtonClickHandler) {
        rentButton.removeEventListener("click", this._rentButtonClickHandler);
        this._rentButtonClickHandler = null;
      }
      var rentItemForm = this.querySelector("#rent-item-form");
      if (rentItemForm && this._rentFormSubmitHandler) {
        rentItemForm.removeEventListener("submit", this._rentFormSubmitHandler);
        this._rentFormSubmitHandler = null;
      }
      var cancelRentButton = this.querySelector("#cancel-rent-button");
      if (cancelRentButton && this._cancelRentButtonClickHandler) {
        cancelRentButton.removeEventListener("click", this._cancelRentButtonClickHandler);
        this._cancelRentButtonClickHandler = null;
      }
      var prevButton = this.querySelector("#prev-photo");
      var nextButton = this.querySelector("#next-photo");
      if (prevButton && this._prevPhotoHandler) {
        prevButton.removeEventListener("click", this._prevPhotoHandler);
        this._prevPhotoHandler = null;
      }
      if (nextButton && this._nextPhotoHandler) {
        nextButton.removeEventListener("click", this._nextPhotoHandler);
        this._nextPhotoHandler = null;
      }
      var thumbPrevButton = this.querySelector("#thumb-prev");
      var thumbNextButton = this.querySelector("#thumb-next");
      if (thumbPrevButton && this._thumbPrevHandler) {
        thumbPrevButton.removeEventListener("click", this._thumbPrevHandler);
        this._thumbPrevHandler = null;
      }
      if (thumbNextButton && this._thumbNextHandler) {
        thumbNextButton.removeEventListener("click", this._thumbNextHandler);
        this._thumbNextHandler = null;
      }
      var thumbnails = this.querySelectorAll(".thumbnail-item");
      thumbnails.forEach(function (thumb) {
        if (thumb._clickHandler) {
          thumb.removeEventListener("click", thumb._clickHandler);
          thumb._clickHandler = null;
        }
      });
      var userRecPrev = this.querySelector("#user-rec-prev");
      var userRecNext = this.querySelector("#user-rec-next");
      if (userRecPrev && this._userRecPrevHandler) {
        userRecPrev.removeEventListener("click", this._userRecPrevHandler);
        this._userRecPrevHandler = null;
      }
      if (userRecNext && this._userRecNextHandler) {
        userRecNext.removeEventListener("click", this._userRecNextHandler);
        this._userRecNextHandler = null;
      }
      var itemRecPrev = this.querySelector("#item-rec-prev");
      var itemRecNext = this.querySelector("#item-rec-next");
      if (itemRecPrev && this._itemRecPrevHandler) {
        itemRecPrev.removeEventListener("click", this._itemRecPrevHandler);
        this._itemRecPrevHandler = null;
      }
      if (itemRecNext && this._itemRecNextHandler) {
        itemRecNext.removeEventListener("click", this._itemRecNextHandler);
        this._itemRecNextHandler = null;
      }
      var recommendationsContainer = this.querySelector("#item-recommendations-container");
      if (recommendationsContainer && this._recommendationClickHandler) {
        recommendationsContainer.removeEventListener("click", this._recommendationClickHandler);
        this._recommendationClickHandler = null;
      }
    }
  }, {
    key: "handleReviewSubmit",
    value: function () {
      var _handleReviewSubmit = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee3(event) {
        var currentUser, form, commentTextarea, comment, submitButton, response, errorMessage;
        return detail_product_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              event.preventDefault();
              currentUser = utils.getUserInfo();
              if (!(!currentUser || !this._item || !this._item.id)) {
                _context3.next = 5;
                break;
              }
              alert("Anda harus login dan item harus valid untuk mengirim review.");
              return _context3.abrupt("return");
            case 5:
              form = event.target;
              commentTextarea = form.querySelector("#review-comment");
              comment = commentTextarea ? commentTextarea.value.trim() : "";
              if (comment) {
                _context3.next = 11;
                break;
              }
              alert("Komentar review tidak boleh kosong.");
              return _context3.abrupt("return");
            case 11:
              submitButton = form.querySelector('button[type="submit"]');
              if (submitButton) submitButton.disabled = true;
              _context3.prev = 13;
              _context3.next = 16;
              return authenticatedRequest("/reviews/item/".concat(this._item.id), "POST", {
                comment: comment
              });
            case 16:
              response = _context3.sent;
              if (!(response.status === "success")) {
                _context3.next = 25;
                break;
              }
              alert("Review berhasil dikirim!");
              if (commentTextarea) commentTextarea.value = "";
              this._shouldShowReviewForm = false;
              _context3.next = 23;
              return this.fetchItemAndReviews(this._item.id);
            case 23:
              _context3.next = 28;
              break;
            case 25:
              errorMessage = response.message || "Gagal mengirim review baru.";
              if (response.errors && Array.isArray(response.errors)) {
                errorMessage += "\nValidasi error:";
                response.errors.forEach(function (err) {
                  if (err.param && err.msg) {
                    errorMessage += "\n- ".concat(err.param, ": ").concat(err.msg);
                  } else if (typeof err === "string") {
                    errorMessage += "\n- ".concat(err);
                  }
                });
              }
              alert(errorMessage);
            case 28:
              _context3.next = 33;
              break;
            case 30:
              _context3.prev = 30;
              _context3.t0 = _context3["catch"](13);
              alert("Terjadi kesalahan saat mengirim review baru.");
            case 33:
              _context3.prev = 33;
              if (submitButton && this._shouldShowReviewForm) submitButton.disabled = false;
              return _context3.finish(33);
            case 36:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this, [[13, 30, 33, 36]]);
      }));
      function handleReviewSubmit(_x2) {
        return _handleReviewSubmit.apply(this, arguments);
      }
      return handleReviewSubmit;
    }()
  }, {
    key: "handleEditReview",
    value: function handleEditReview(reviewId) {
      var _this9 = this;
      if (this._editingReviewId === Number.parseInt(reviewId, 10)) {
        return;
      }
      if (this._editingReviewId !== null) {
        this.cancelEditReview();
      }
      var reviewToEdit = this._reviews.find(function (review) {
        return review.id === Number.parseInt(reviewId, 10);
      });
      if (!reviewToEdit) {
        alert("Review tidak ditemukan.");
        return;
      }
      this._editingReviewId = reviewToEdit.id;
      this.renderContent();
      requestAnimationFrame(function () {
        var editForm = _this9.querySelector(".edit-review-form[data-review-id=\"".concat(reviewId, "\"]"));
        if (editForm) {
          editForm.scrollIntoView({
            behavior: "smooth",
            block: "center"
          });
        }
      });
    }
  }, {
    key: "cancelEditReview",
    value: function cancelEditReview() {
      if (this._editingReviewId !== null) {
        this._editingReviewId = null;
        this.renderContent();
      }
    }
  }, {
    key: "handleEditSubmit",
    value: function () {
      var _handleEditSubmit = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee4(event, reviewId) {
        var currentUser, form, commentTextarea, comment, _saveButton, _cancelButton, saveButton, cancelButton, response, errorMessage;
        return detail_product_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              event.preventDefault();
              currentUser = utils.getUserInfo();
              if (!(!currentUser || !this._item || !this._item.id || !reviewId)) {
                _context4.next = 5;
                break;
              }
              alert("Informasi tidak lengkap untuk memperbarui review.");
              return _context4.abrupt("return");
            case 5:
              form = event.target.closest(".edit-review-form");
              if (form) {
                _context4.next = 9;
                break;
              }
              alert("Form edit tidak ditemukan.");
              return _context4.abrupt("return");
            case 9:
              commentTextarea = form.querySelector("#edit-review-comment-".concat(reviewId));
              comment = commentTextarea ? commentTextarea.value.trim() : "";
              if (comment) {
                _context4.next = 18;
                break;
              }
              alert("Komentar review tidak boleh kosong.");
              _saveButton = form.querySelector(".save-edit-button");
              if (_saveButton) _saveButton.disabled = false;
              _cancelButton = form.querySelector(".cancel-edit-button");
              if (_cancelButton) _cancelButton.disabled = false;
              return _context4.abrupt("return");
            case 18:
              saveButton = form.querySelector(".save-edit-button");
              if (saveButton) saveButton.disabled = true;
              cancelButton = form.querySelector(".cancel-edit-button");
              if (cancelButton) cancelButton.disabled = true;
              _context4.prev = 22;
              _context4.next = 25;
              return authenticatedRequest("/reviews/".concat(reviewId), "PATCH", {
                comment: comment
              });
            case 25:
              response = _context4.sent;
              if (!(response.status === "success")) {
                _context4.next = 33;
                break;
              }
              alert("Review berhasil diperbarui!");
              this._editingReviewId = null;
              _context4.next = 31;
              return this.fetchItemAndReviews(this._item.id);
            case 31:
              _context4.next = 36;
              break;
            case 33:
              errorMessage = response.message || "Gagal memperbarui review.";
              if (response.errors && Array.isArray(response.errors)) {
                errorMessage += "\nValidasi error:";
                response.errors.forEach(function (err) {
                  if (err.param && err.msg) {
                    errorMessage += "\n- ".concat(err.param, ": ").concat(err.msg);
                  } else if (typeof err === "string") {
                    errorMessage += "\n- ".concat(err);
                  }
                });
              }
              alert(errorMessage);
            case 36:
              _context4.next = 41;
              break;
            case 38:
              _context4.prev = 38;
              _context4.t0 = _context4["catch"](22);
              alert("Terjadi kesalahan saat memperbarui review.");
            case 41:
              _context4.prev = 41;
              if (this._editingReviewId === reviewId) {
                if (saveButton) saveButton.disabled = false;
                if (cancelButton) cancelButton.disabled = false;
              }
              return _context4.finish(41);
            case 44:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this, [[22, 38, 41, 44]]);
      }));
      function handleEditSubmit(_x3, _x4) {
        return _handleEditSubmit.apply(this, arguments);
      }
      return handleEditSubmit;
    }()
  }, {
    key: "handleDeleteReview",
    value: function () {
      var _handleDeleteReview = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee5(reviewId) {
        var confirmDelete, response;
        return detail_product_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              confirmDelete = confirm("Apakah Anda yakin ingin menghapus review ini?");
              if (confirmDelete) {
                _context5.next = 3;
                break;
              }
              return _context5.abrupt("return");
            case 3:
              _context5.prev = 3;
              _context5.next = 6;
              return authenticatedRequest("/reviews/".concat(reviewId), "DELETE");
            case 6:
              response = _context5.sent;
              if (!(response.status === "success")) {
                _context5.next = 13;
                break;
              }
              alert("Review berhasil dihapus!");
              _context5.next = 11;
              return this.fetchItemAndReviews(this._item.id);
            case 11:
              _context5.next = 14;
              break;
            case 13:
              alert("Gagal menghapus review: " + (response.message || "Terjadi kesalahan."));
            case 14:
              _context5.next = 19;
              break;
            case 16:
              _context5.prev = 16;
              _context5.t0 = _context5["catch"](3);
              alert("Terjadi kesalahan saat menghapus review.");
            case 19:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this, [[3, 16]]);
      }));
      function handleDeleteReview(_x5) {
        return _handleDeleteReview.apply(this, arguments);
      }
      return handleDeleteReview;
    }()
  }, {
    key: "handleBuy",
    value: function () {
      var _handleBuy = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee6() {
        var currentUser, result, response;
        return detail_product_regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              currentUser = utils.getUserInfo();
              if (!(!currentUser || !this._item || !this._item.id)) {
                _context6.next = 4;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Login Diperlukan',
                text: 'Anda harus login untuk melakukan pembelian.',
                confirmButtonColor: '#4f46e5'
              });
              return _context6.abrupt("return");
            case 4:
              _context6.next = 6;
              return sweetalert2_all_default().fire({
                title: 'Konfirmasi Pembelian',
                html: "Apakah Anda yakin ingin membeli<br><strong>\"".concat(this._item.name, "\"</strong><br>dengan harga <strong>").concat(this.formatRupiah(this._item.price_sell), "</strong>?"),
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#10b981',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Ya, Beli Sekarang!',
                cancelButtonText: 'Batal'
              });
            case 6:
              result = _context6.sent;
              if (result.isConfirmed) {
                _context6.next = 9;
                break;
              }
              return _context6.abrupt("return");
            case 9:
              _context6.prev = 9;
              _context6.next = 12;
              return authenticatedRequest("/transactions", "POST", {
                item_id: this._item.id,
                type: "buy"
              });
            case 12:
              response = _context6.sent;
              if (!(response.status === "success" && response.data)) {
                _context6.next = 19;
                break;
              }
              _context6.next = 16;
              return sweetalert2_all_default().fire({
                icon: 'success',
                title: 'Berhasil!',
                text: 'Transaksi pembelian berhasil dibuat!',
                confirmButtonColor: '#4f46e5'
              });
            case 16:
              window.location.hash = "#/transactions/".concat(response.data.id);
              _context6.next = 20;
              break;
            case 19:
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Gagal!',
                text: "Gagal membuat transaksi pembelian: " + (response.message || "Terjadi kesalahan."),
                confirmButtonColor: '#4f46e5'
              });
            case 20:
              _context6.next = 25;
              break;
            case 22:
              _context6.prev = 22;
              _context6.t0 = _context6["catch"](9);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Error!',
                text: 'Terjadi kesalahan saat membuat transaksi pembelian.',
                confirmButtonColor: '#4f46e5'
              });
            case 25:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this, [[9, 22]]);
      }));
      function handleBuy() {
        return _handleBuy.apply(this, arguments);
      }
      return handleBuy;
    }()
  }, {
    key: "handleRent",
    value: function () {
      var _handleRent = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee7() {
        var statusInfo;
        return detail_product_regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              if (!(!this._item || !utils.isAuthenticated())) {
                _context7.next = 3;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Login Diperlukan',
                text: 'Item tidak tersedia atau Anda harus login.',
                confirmButtonColor: '#4f46e5'
              });
              return _context7.abrupt("return");
            case 3:
              statusInfo = this.getStatusInfo(this._item);
              if (statusInfo.canTransact) {
                _context7.next = 7;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Tidak Tersedia',
                text: 'Item ini tidak tersedia untuk disewa.',
                confirmButtonColor: '#4f46e5'
              });
              return _context7.abrupt("return");
            case 7:
              this._showRentForm = true;
              this.renderContent();
            case 9:
            case "end":
              return _context7.stop();
          }
        }, _callee7, this);
      }));
      function handleRent() {
        return _handleRent.apply(this, arguments);
      }
      return handleRent;
    }()
  }, {
    key: "handleRentFormSubmit",
    value: function () {
      var _handleRentFormSubmit = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee8(event) {
        var form, startDateInput, endDateInput, startDate, endDate, start, end, today, currentUser, diffTime, diffDays, totalRentCost, totalCost, result, submitButton, cancelButton, response;
        return detail_product_regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              event.preventDefault();
              form = event.target;
              startDateInput = form.querySelector("#rent-start-date");
              endDateInput = form.querySelector("#rent-end-date");
              startDate = startDateInput ? startDateInput.value : null;
              endDate = endDateInput ? endDateInput.value : null;
              if (!(!startDate || !endDate)) {
                _context8.next = 9;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Data Tidak Lengkap',
                text: 'Tanggal mulai dan selesai sewa harus diisi.',
                confirmButtonColor: '#4f46e5'
              });
              return _context8.abrupt("return");
            case 9:
              start = new Date(startDate);
              end = new Date(endDate);
              today = new Date();
              today.setHours(0, 0, 0, 0);
              if (!(isNaN(start.getTime()) || isNaN(end.getTime()))) {
                _context8.next = 16;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Format Salah',
                text: 'Format tanggal tidak valid.',
                confirmButtonColor: '#4f46e5'
              });
              return _context8.abrupt("return");
            case 16:
              if (!(start < today || end < today)) {
                _context8.next = 19;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Tanggal Tidak Valid',
                text: 'Tanggal sewa tidak boleh di masa lalu.',
                confirmButtonColor: '#4f46e5'
              });
              return _context8.abrupt("return");
            case 19:
              if (!(start >= end)) {
                _context8.next = 22;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Tanggal Tidak Valid',
                text: 'Tanggal selesai sewa harus setelah tanggal mulai sewa.',
                confirmButtonColor: '#4f46e5'
              });
              return _context8.abrupt("return");
            case 22:
              currentUser = utils.getUserInfo();
              if (!(!currentUser || !this._item || !this._item.id)) {
                _context8.next = 26;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Login Diperlukan',
                text: 'Anda harus login dan item harus valid untuk mengajukan penyewaan.',
                confirmButtonColor: '#4f46e5'
              });
              return _context8.abrupt("return");
            case 26:
              // Calculate rental duration and total cost
              diffTime = Math.abs(end - start);
              diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
              totalRentCost = diffDays * this._item.price_rent;
              totalCost = totalRentCost + this._item.deposit_amount;
              _context8.next = 32;
              return sweetalert2_all_default().fire({
                title: 'Konfirmasi Penyewaan',
                html: "\n      <div class=\"text-left\">\n        <p><strong>Item:</strong> ".concat(this._item.name, "</p>\n        <p><strong>Durasi:</strong> ").concat(diffDays, " hari</p>\n        <p><strong>Biaya Sewa:</strong> ").concat(this.formatRupiah(totalRentCost), "</p>\n        <p><strong>Deposit:</strong> ").concat(this.formatRupiah(this._item.deposit_amount), "</p>\n        <hr class=\"my-2\">\n        <p><strong>Total Bayar:</strong> ").concat(this.formatRupiah(totalCost), "</p>\n      </div>\n    "),
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3b82f6',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Ya, Ajukan Sewa!',
                cancelButtonText: 'Batal'
              });
            case 32:
              result = _context8.sent;
              if (result.isConfirmed) {
                _context8.next = 35;
                break;
              }
              return _context8.abrupt("return");
            case 35:
              submitButton = form.querySelector('button[type="submit"]');
              if (submitButton) submitButton.disabled = true;
              cancelButton = form.querySelector("#cancel-rent-button");
              if (cancelButton) cancelButton.disabled = true;
              _context8.prev = 39;
              _context8.next = 42;
              return authenticatedRequest("/transactions", "POST", {
                item_id: this._item.id,
                type: "rent",
                rent_start_date: startDate,
                rent_end_date: endDate
              });
            case 42:
              response = _context8.sent;
              if (!(response.status === "success" && response.data)) {
                _context8.next = 50;
                break;
              }
              _context8.next = 46;
              return sweetalert2_all_default().fire({
                icon: 'success',
                title: 'Berhasil!',
                text: 'Transaksi penyewaan berhasil dibuat!',
                confirmButtonColor: '#4f46e5'
              });
            case 46:
              this._showRentForm = false;
              window.location.hash = "#/transactions/".concat(response.data.id);
              _context8.next = 51;
              break;
            case 50:
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Gagal!',
                text: "Gagal membuat transaksi penyewaan: " + (response.message || "Terjadi kesalahan."),
                confirmButtonColor: '#4f46e5'
              });
            case 51:
              _context8.next = 56;
              break;
            case 53:
              _context8.prev = 53;
              _context8.t0 = _context8["catch"](39);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Error!',
                text: 'Terjadi kesalahan saat membuat transaksi penyewaan.',
                confirmButtonColor: '#4f46e5'
              });
            case 56:
              _context8.prev = 56;
              this._showRentForm = false;
              this.renderContent();
              return _context8.finish(56);
            case 60:
            case "end":
              return _context8.stop();
          }
        }, _callee8, this, [[39, 53, 56, 60]]);
      }));
      function handleRentFormSubmit(_x6) {
        return _handleRentFormSubmit.apply(this, arguments);
      }
      return handleRentFormSubmit;
    }()
  }, {
    key: "cancelRentForm",
    value: function cancelRentForm() {
      this._showRentForm = false;
      this.renderContent();
    }
  }, {
    key: "fetchItemBasedRecommendationsForCurrentItem",
    value: function () {
      var _fetchItemBasedRecommendationsForCurrentItem = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee10(basedOnItemId) {
        var _this10 = this;
        var topN, mlResult, recommendationPromises, results;
        return detail_product_regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              if (basedOnItemId) {
                _context10.next = 6;
                break;
              }
              this.itemBasedRecommendations = [];
              this.isLoadingItemBasedRecommendations = false;
              this.itemBasedRecommendationsError = null;
              this.renderContent();
              return _context10.abrupt("return");
            case 6:
              this.isLoadingItemBasedRecommendations = true;
              this.itemBasedRecommendationsError = null;
              this.renderContent();
              topN = 8; // Changed from 5 to 8
              _context10.prev = 10;
              _context10.next = 13;
              return fetchItemRecommendations(basedOnItemId, topN);
            case 13:
              mlResult = _context10.sent;
              if (!(mlResult && Array.isArray(mlResult.recommendations) && mlResult.recommendations.length > 0)) {
                _context10.next = 24;
                break;
              }
              recommendationPromises = mlResult.recommendations.map(/*#__PURE__*/function () {
                var _ref = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee9(rec) {
                  var itemDetailResponse;
                  return detail_product_regeneratorRuntime().wrap(function _callee9$(_context9) {
                    while (1) switch (_context9.prev = _context9.next) {
                      case 0:
                        _context9.prev = 0;
                        _context9.next = 3;
                        return apiGet("/items/".concat(rec.product_id));
                      case 3:
                        itemDetailResponse = _context9.sent;
                        if (!(itemDetailResponse.status === "success" && itemDetailResponse.data)) {
                          _context9.next = 8;
                          break;
                        }
                        return _context9.abrupt("return", detail_product_objectSpread(detail_product_objectSpread({}, rec), itemDetailResponse.data));
                      case 8:
                        return _context9.abrupt("return", null);
                      case 9:
                        _context9.next = 14;
                        break;
                      case 11:
                        _context9.prev = 11;
                        _context9.t0 = _context9["catch"](0);
                        return _context9.abrupt("return", null);
                      case 14:
                      case "end":
                        return _context9.stop();
                    }
                  }, _callee9, null, [[0, 11]]);
                }));
                return function (_x8) {
                  return _ref.apply(this, arguments);
                };
              }());
              _context10.next = 18;
              return Promise.all(recommendationPromises);
            case 18:
              results = _context10.sent;
              this.itemBasedRecommendations = results.filter(function (item) {
                return item !== null && item.id !== _this10._item.id;
              });
              this.isLoadingItemBasedRecommendations = false;
              if (mlResult.recommendations.length > 0 && this.itemBasedRecommendations.length === 0) {
                if (mlResult.recommendations.length > 0) {
                  this.itemBasedRecommendationsError = "Tidak ada rekomendasi serupa yang ditemukan atau detail gagal dimuat.";
                } else {
                  this.itemBasedRecommendationsError = "Tidak ada rekomendasi serupa yang ditemukan dari ML API.";
                }
              } else {
                this.itemBasedRecommendationsError = null;
              }
              _context10.next = 27;
              break;
            case 24:
              this.itemBasedRecommendations = [];
              this.isLoadingItemBasedRecommendations = false;
              this.itemBasedRecommendationsError = mlResult.message || "Tidak ada rekomendasi serupa yang ditemukan dari ML API.";
            case 27:
              _context10.next = 34;
              break;
            case 29:
              _context10.prev = 29;
              _context10.t0 = _context10["catch"](10);
              this.itemBasedRecommendations = [];
              this.isLoadingItemBasedRecommendations = false;
              this.itemBasedRecommendationsError = _context10.t0.message || "Terjadi kesalahan saat memuat rekomendasi serupa.";
            case 34:
              _context10.prev = 34;
              this.renderContent();
              return _context10.finish(34);
            case 37:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this, [[10, 29, 34, 37]]);
      }));
      function fetchItemBasedRecommendationsForCurrentItem(_x7) {
        return _fetchItemBasedRecommendationsForCurrentItem.apply(this, arguments);
      }
      return fetchItemBasedRecommendationsForCurrentItem;
    }()
  }, {
    key: "triggerMLRefresh",
    value: function () {
      var _triggerMLRefresh = detail_product_asyncToGenerator(/*#__PURE__*/detail_product_regeneratorRuntime().mark(function _callee11(itemId) {
        return detail_product_regeneratorRuntime().wrap(function _callee11$(_context11) {
          while (1) switch (_context11.prev = _context11.next) {
            case 0:
              console.log("Triggering ML backend data refresh for item:", itemId);
              _context11.prev = 1;
              _context11.next = 4;
              return fetch("http://localhost:5001/api/refresh_data", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({})
              });
            case 4:
              console.log("ML backend data refresh triggered.");
              _context11.next = 10;
              break;
            case 7:
              _context11.prev = 7;
              _context11.t0 = _context11["catch"](1);
              console.warn("Failed to trigger ML backend data refresh:", _context11.t0);
            case 10:
            case "end":
              return _context11.stop();
          }
        }, _callee11, null, [[1, 7]]);
      }));
      function triggerMLRefresh(_x9) {
        return _triggerMLRefresh.apply(this, arguments);
      }
      return triggerMLRefresh;
    }()
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["item-id"];
    }
  }]);
}(/*#__PURE__*/detail_product_wrapNativeSuper(HTMLElement));
customElements.define("detail-product", DetailProduct);
// EXTERNAL MODULE: ./user/src/script/components/search-bar.js
var search_bar = __webpack_require__(109);
// EXTERNAL MODULE: ./user/src/script/components/auth/login/login-page.js
var login_page = __webpack_require__(407);
// EXTERNAL MODULE: ./user/src/script/components/auth/register/register-page.js
var register_page = __webpack_require__(115);
;// ./user/src/script/components/user/profile-page.js
function profile_page_typeof(o) { "@babel/helpers - typeof"; return profile_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, profile_page_typeof(o); }
function profile_page_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ profile_page_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == profile_page_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(profile_page_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function profile_page_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function profile_page_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { profile_page_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { profile_page_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function profile_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function profile_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, profile_page_toPropertyKey(o.key), o); } }
function profile_page_createClass(e, r, t) { return r && profile_page_defineProperties(e.prototype, r), t && profile_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function profile_page_toPropertyKey(t) { var i = profile_page_toPrimitive(t, "string"); return "symbol" == profile_page_typeof(i) ? i : i + ""; }
function profile_page_toPrimitive(t, r) { if ("object" != profile_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != profile_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function profile_page_callSuper(t, o, e) { return o = profile_page_getPrototypeOf(o), profile_page_possibleConstructorReturn(t, profile_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], profile_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function profile_page_possibleConstructorReturn(t, e) { if (e && ("object" == profile_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return profile_page_assertThisInitialized(t); }
function profile_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function profile_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && profile_page_setPrototypeOf(t, e); }
function profile_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return profile_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !profile_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return profile_page_construct(t, arguments, profile_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), profile_page_setPrototypeOf(Wrapper, t); }, profile_page_wrapNativeSuper(t); }
function profile_page_construct(t, e, r) { if (profile_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && profile_page_setPrototypeOf(p, r.prototype), p; }
function profile_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (profile_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function profile_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function profile_page_setPrototypeOf(t, e) { return profile_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, profile_page_setPrototypeOf(t, e); }
function profile_page_getPrototypeOf(t) { return profile_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, profile_page_getPrototypeOf(t); }
 // Import fungsi dari apiService
// Tidak perlu import wilayahService lagi
// import { fetchProvinces, fetchCitiesByProvinceId } from '../../utils/wilayahService.js';
var ProfilePage = /*#__PURE__*/function (_HTMLElement) {
  function ProfilePage() {
    var _this;
    profile_page_classCallCheck(this, ProfilePage);
    _this = profile_page_callSuper(this, ProfilePage);
    // Bind methods jika diperlukan, terutama untuk event handlers
    _this.fetchUserProfile = _this.fetchUserProfile.bind(_this);
    _this.handleUpdateProfile = _this.handleUpdateProfile.bind(_this); // Contoh handler submit form
    // Jika ada form update password
    // this.handleUpdatePassword = this.handleUpdatePassword.bind(this);
    _this.handleProvinceChangeForUpdateForm = _this.handleProvinceChangeForUpdateForm.bind(_this); // Bind handler perubahan provinsi

    // Bind metode wilayah yang disalin
    _this.fetchProvinces = _this.fetchProvinces.bind(_this);
    _this.populateProvincesDropdown = _this.populateProvincesDropdown.bind(_this);
    _this.fetchCitiesByProvinceId = _this.fetchCitiesByProvinceId.bind(_this);
    _this.populateCitiesDropdown = _this.populateCitiesDropdown.bind(_this);
    _this.setupProvinceChangeListener = _this.setupProvinceChangeListener.bind(_this); // Bind setup listener
    _this.setWilayahDropdowns = _this.setWilayahDropdowns.bind(_this); // Bind method untuk set nilai dropdown awal

    // State internal komponen jika ada
    _this.user = null;
    // Tidak perlu menyimpan daftar provinsi/kota di state jika langsung mengisi dropdown
    // this.provinces = []; // Untuk menyimpan daftar provinsi
    // this.cities = [];     // Untuk menyimpan daftar kota
    return _this;
  }
  profile_page_inherits(ProfilePage, _HTMLElement);
  return profile_page_createClass(ProfilePage, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      // Render struktur HTML awal
      this.render();
      // Setup event listeners untuk form atau tombol update SEBELUM fetch data agar elemennya ada
      this.setupEventListeners(); // Pindah ke sini
      // Ambil data profil saat komponen terhubung ke DOM
      this.fetchUserProfile();
      // Fetch data wilayah (provinsi) saat komponen terhubung
      this.fetchProvinces(); // Panggil metode fetch provinces yang disalin
      this.setupProvinceChangeListener(); // Panggil setup listener yang disalin
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      // Hapus event listeners jika diperlukan untuk cleanup
      this.removeEventListeners();
      // Hapus event listener untuk province change di form update
      var updateProvinceSelect = this.querySelector('#update-province');
      if (updateProvinceSelect) {
        updateProvinceSelect.removeEventListener('change', this.handleProvinceChangeForUpdateForm);
      }
    }
  }, {
    key: "render",
    value: function render() {
      // Definisikan struktur HTML untuk halaman profil di sini
      // HTML ini akan menampilkan info pengguna, form update profil, form update password, dll.
      this.innerHTML = "\n            <div class=\"container mx-auto px-4 py-8 font-opensan\">\n                <h2 class=\"text-2xl font-montserrat font-bold mb-6 text-gray-800\">Profil Pengguna</h2>\n\n                <!-- Main Card Container -->\n                <div class=\"bg-white p-6 rounded-xl shadow-lg mb-8\">\n                    <!-- Informasi Akun Container (Dark) -->\n                    <div class=\"bg-gray-700 text-white p-4 rounded-md shadow-sm mb-6\">\n                        <h3 class=\"text-xl font-montserrat font-semibold mb-3\">Informasi Akun</h3>\n                        <div id=\"profile-info\">\n                            <p class=\"mb-2\"><strong>Nama:</strong> <span id=\"user-name\">Loading...</span></p>\n                            <p class=\"mb-2\"><strong>Email:</strong> <span id=\"user-email\">Loading...</span></p>\n                            <p class=\"mb-2\"><strong>Provinsi:</strong> <span id=\"user-province\">Loading...</span></p>\n                            <p class=\"mb-2\"><strong>Kota:</strong> <span id=\"user-city\">Loading...</span></p>\n                        </div>\n                    </div>\n\n                    <!-- Perbarui Profil Section (Inside White Card) -->\n                    <div>\n                        <h3 class=\"text-xl font-montserrat font-semibold mb-4 text-gray-700\">Perbarui Profil</h3>\n                        <form id=\"update-profile-form\" class=\"space-y-4\">\n                            <div>\n                                <label for=\"update-name\" class=\"block mb-2 text-sm font-medium text-gray-900\">Nama</label>\n                                <input type=\"text\" id=\"update-name\" name=\"name\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\" placeholder=\"Nama Lengkap\" />\n                            </div>\n                            \n                             <div>\n                                <label for=\"update-province\" class=\"block mb-2 text-sm font-medium text-gray-900\">Provinsi</label>\n                                <select id=\"update-province\" name=\"province_id\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                                     <option value=\"\">Pilih Provinsi</option>\n                                 </select>\n                            </div>\n                             <div>\n                                <label for=\"update-city\" class=\"block mb-2 text-sm font-medium text-gray-900\">Kota/Kabupaten</label>\n                                <select id=\"update-city\" name=\"city_id\" disabled class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 disabled:opacity-50 disabled:cursor-not-allowed\">\n                                    <option value=\"\">Pilih Kota</option>\n                                 </select>\n                            </div>\n                            <button type=\"submit\" class=\"w-full flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-semibold rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                               Perbarui\n                            </button>\n                        </form>\n                    </div>\n                </div>\n\n                <!-- Second Card Container -->\n                <div class=\"bg-white p-6 rounded-xl shadow-lg\">\n                     <!-- Ubah Kata Sandi Section (Inside White Card)-->\n                     <div>\n                         <h3 class=\"text-xl font-montserrat font-semibold mb-4 text-gray-700\">Ubah Kata Sandi</h3>\n                         <form id=\"update-password-form\" class=\"space-y-4\">\n                             <div>\n                                 <label for=\"current-password\" class=\"block mb-2 text-sm font-medium text-gray-900\">Kata Sandi Saat Ini</label>\n                                 <input type=\"password\" id=\"current-password\" name=\"currentPassword\" required class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                             </div>\n                              <div>\n                                 <label for=\"new-password\" class=\"block mb-2 text-sm font-medium text-gray-900\">Kata Sandi Baru</label>\n                                 <input type=\"password\" id=\"new-password\" name=\"newPassword\" required class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                             </div>\n                             <button type=\"submit\" class=\"w-full flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-semibold rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                Ubah Kata Sandi\n                             </button>\n                         </form>\n                     </div>\n                 </div>\n\n            </div>\n        ";
    }

    // ================================================================
    // Metode-metode yang menggunakan apiService
    // Kode fetchUserProfile dan updateUserProfile dari contoh Anda dipindahkan ke sini
    // ================================================================
  }, {
    key: "fetchUserProfile",
    value: function () {
      var _fetchUserProfile = profile_page_asyncToGenerator(/*#__PURE__*/profile_page_regeneratorRuntime().mark(function _callee() {
        var result;
        return profile_page_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return apiGet('/auth/me');
            case 3:
              result = _context.sent;
              if (result.status === 'success') {
                this.user = result.data.user; // Simpan data user di state komponen
                console.log('User Profile:', this.user);
                this.updateUIWithUserProfile(); // Panggil metode untuk menampilkan data
                // Setelah data user didapat dan UI awal diupdate, set nilai dropdown wilayah
                this.setWilayahDropdowns(); // Panggil metode untuk set nilai dropdown awal
              } else {
                console.error('Failed to fetch user profile:', result.message);
                // Tampilkan pesan error di UI
              }
              _context.next = 10;
              break;
            case 7:
              _context.prev = 7;
              _context.t0 = _context["catch"](0);
              console.error('Error fetching user profile:', _context.t0);
              // apiService sudah menangani 401/403 (redirect ke login)
              // Tangani error lain jika perlu, misalnya tampilkan pesan error generik
            case 10:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 7]]);
      }));
      function fetchUserProfile() {
        return _fetchUserProfile.apply(this, arguments);
      }
      return fetchUserProfile;
    }()
  }, {
    key: "handleUpdateProfile",
    value: function () {
      var _handleUpdateProfile = profile_page_asyncToGenerator(/*#__PURE__*/profile_page_regeneratorRuntime().mark(function _callee2(event) {
        var form, formData, profileData, provinceSelect, citySelect, selectedProvinceOption, selectedCityOption, result, profileUpdatedEvent;
        return profile_page_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              event.preventDefault(); // Cegah refresh halaman
              form = event.target;
              formData = new FormData(form);
              profileData = Object.fromEntries(formData.entries()); // Dapatkan ID dan Nama provinsi serta kota dari dropdown yang dipilih
              provinceSelect = this.querySelector('#update-province');
              citySelect = this.querySelector('#update-city');
              selectedProvinceOption = provinceSelect.options[provinceSelect.selectedIndex];
              selectedCityOption = citySelect.options[citySelect.selectedIndex]; // Ambil value (ID) dan text (Name) dari opsi terpilih
              // Sesuaikan dengan kebutuhan backend Anda - jika backend butuh ID dari API wilayah, gunakan value.
              // Jika backend butuh nama, gunakan textContent.
              // Berdasarkan diskusi sebelumnya, backend Anda menerima province_id dan city_id.
              profileData.province_id = selectedProvinceOption ? selectedProvinceOption.value : null;
              profileData.province_name = selectedProvinceOption ? selectedProvinceOption.textContent : ''; // Tetap kirim nama juga jika backend butuh
              profileData.city_id = selectedCityOption ? selectedCityOption.value : null;
              profileData.city_name = selectedCityOption ? selectedCityOption.textContent : ''; // Tetap kirim nama juga jika backend butuh

              // Hapus entri form data lama yang mungkin hanya string nama jika ada
              // delete profileData['province_name']; // Hapus yang dari form entries default
              // delete profileData['city_name'];     // Hapus yang dari form entries default
              _context2.prev = 12;
              _context2.next = 15;
              return apiPatch('/users/update-profile', profileData);
            case 15:
              result = _context2.sent;
              if (result.status === 'success') {
                console.log('Profile updated:', result.data.user);
                alert('Profile updated successfully!');
                // Update data user di localStorage dan state komponen
                this.user = result.data.user;
                localStorage.setItem('user', JSON.stringify(this.user));
                // Perbarui tampilan UI profil
                this.updateUIWithUserProfile();
                // Dispatch event agar komponen lain tahu profil berubah (misal navbar)
                profileUpdatedEvent = new CustomEvent('userProfileUpdated', {
                  detail: {
                    user: this.user
                  }
                });
                window.dispatchEvent(profileUpdatedEvent);
              } else {
                console.error('Failed to update profile:', result.message, result.errors);
                alert('Failed to update profile: ' + result.message + (result.errors ? '\n' + result.errors.map(function (e) {
                  return e.msg;
                }).join('\n') : ''));
              }
              _context2.next = 23;
              break;
            case 19:
              _context2.prev = 19;
              _context2.t0 = _context2["catch"](12);
              console.error('Error updating profile:', _context2.t0);
              // apiService sudah menangani 401/403
              alert('An error occurred while updating profile.');
            case 23:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[12, 19]]);
      }));
      function handleUpdateProfile(_x) {
        return _handleUpdateProfile.apply(this, arguments);
      }
      return handleUpdateProfile;
    }() // TODO: Metode untuk handle form update password
    // async handleUpdatePassword(event) { ... gunakan apiPatch('/users/update-password', { currentPassword, newPassword }) }
    // ================================================================
    // Metode untuk update UI
    // ================================================================
  }, {
    key: "updateUIWithUserProfile",
    value: function updateUIWithUserProfile() {
      if (this.user) {
        // Isi elemen HTML dengan data profil pengguna
        var userNameSpan = this.querySelector('#user-name');
        var userEmailSpan = this.querySelector('#user-email');
        var userProvinceSpan = this.querySelector('#user-province');
        var userCitySpan = this.querySelector('#user-city');
        var updateNameInput = this.querySelector('#update-name');
        // Dropdown province dan city akan diisi secara terpisah oleh logika wilayah
        // const updateProvinceSelect = this.querySelector('#update-province'); // Tidak perlu di sini
        // const updateCitySelect = this.querySelector('#update-city');     // Tidak perlu di sini

        if (userNameSpan) userNameSpan.textContent = this.user.name;
        if (userEmailSpan) userEmailSpan.textContent = this.user.email;
        if (userProvinceSpan) userProvinceSpan.textContent = this.user.province_name || '-'; // Tampilkan '-' jika kosong
        if (userCitySpan) userCitySpan.textContent = this.user.city_name || '-'; // Tampilkan '-' jika kosong

        // Isi form update profil dengan data user saat ini (kecuali wilayah)
        if (updateNameInput) updateNameInput.value = this.user.name || '';

        // Set nilai dropdown wilayah setelah dropdown terisi dan user data didapat
        // Logika pemanggilan setWilayahDropdowns() dipindahkan ke fetchUserProfile()
      } else {
        // Tampilkan loading atau pesan jika data user belum ada
        var profileInfoDiv = this.querySelector('#profile-info');
        if (profileInfoDiv) profileInfoDiv.innerHTML = '<p>Loading profile...</p>';
      }
    }

    // ================================================================
    // Metode untuk setup/remove Event Listeners
    // ================================================================
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      // Tambahkan event listener untuk form update profil
      var updateProfileForm = this.querySelector('#update-profile-form');
      if (updateProfileForm) {
        updateProfileForm.addEventListener('submit', this.handleUpdateProfile);
      }

      // TODO: Tambahkan event listener untuk form update password jika ada
      // const updatePasswordForm = this.querySelector('#update-password-form');
      // if (updatePasswordForm) {
      //     updatePasswordForm.addEventListener('submit', this.handleUpdatePassword);
      // }

      // Event listener untuk dropdown provinsi di form update (setup dipindah ke setupProvinceChangeListener)
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      // Hapus event listener saat disconnectedCallback
      var updateProfileForm = this.querySelector('#update-profile-form');
      if (updateProfileForm) {
        updateProfileForm.removeEventListener('submit', this.handleUpdateProfile);
      }
      // TODO: Hapus event listener update password

      // Event listener untuk province change di form update (penghapusan dipindah ke disconnectedCallback)
    }

    // ================================================================
    // Metode untuk mengelola dropdown wilayah (Disalin dari register-page)
    // ================================================================

    // Method to fetch provinces from external API
  }, {
    key: "fetchProvinces",
    value: function () {
      var _fetchProvinces = profile_page_asyncToGenerator(/*#__PURE__*/profile_page_regeneratorRuntime().mark(function _callee3() {
        var provinceSelect, response, provinces;
        return profile_page_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              provinceSelect = this.querySelector('#update-province'); // Gunakan ID yang benar
              if (provinceSelect) {
                _context3.next = 3;
                break;
              }
              return _context3.abrupt("return");
            case 3:
              // Pastikan elemen ada

              // Clear existing options except the first one
              provinceSelect.innerHTML = '<option value="">Select Province</option>';
              _context3.prev = 4;
              _context3.next = 7;
              return fetch('https://kanglerian.my.id/api-wilayah-indonesia/api/provinces.json');
            case 7:
              response = _context3.sent;
              if (response.ok) {
                _context3.next = 10;
                break;
              }
              throw new Error("HTTP error! status: ".concat(response.status));
            case 10:
              _context3.next = 12;
              return response.json();
            case 12:
              provinces = _context3.sent;
              this.populateProvincesDropdown(provinces);
              _context3.next = 19;
              break;
            case 16:
              _context3.prev = 16;
              _context3.t0 = _context3["catch"](4);
              console.error('Error fetching provinces:', _context3.t0);
              // alert('Failed to load provinces. Please try again later.'); // Mungkin terlalu mengganggu di halaman profil
            case 19:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this, [[4, 16]]);
      }));
      function fetchProvinces() {
        return _fetchProvinces.apply(this, arguments);
      }
      return fetchProvinces;
    }() // Method to populate the province dropdown
  }, {
    key: "populateProvincesDropdown",
    value: function populateProvincesDropdown(provinces) {
      var provinceSelect = this.querySelector('#update-province'); // Gunakan ID yang benar
      if (provinceSelect) {
        provinces.forEach(function (province) {
          var option = document.createElement('option');
          option.value = province.id; // Use province ID as value (penting untuk fetch cities dan kirim ke backend)
          option.textContent = province.name; // Display province name
          provinceSelect.appendChild(option);
        });
        // Setelah mengisi dropdown provinsi, panggil setWilayahDropdowns untuk set nilai awal jika user data sudah ada
        // Ini akan dipanggil setelah fetchUserProfile selesai
      }
    }

    // Setup event listener for province select change
  }, {
    key: "setupProvinceChangeListener",
    value: function setupProvinceChangeListener() {
      var provinceSelect = this.querySelector('#update-province'); // Gunakan ID yang benar
      if (provinceSelect) {
        // Hapus listener lama jika ada untuk menghindari duplikasi
        provinceSelect.removeEventListener('change', this.handleProvinceChangeForUpdateForm);
        provinceSelect.addEventListener('change', this.handleProvinceChangeForUpdateForm); // Gunakan handler yang dibind
      }
    }

    // Handler for province select change (diubah namanya sedikit agar jelas untuk update form)
  }, {
    key: "handleProvinceChangeForUpdateForm",
    value: function () {
      var _handleProvinceChangeForUpdateForm = profile_page_asyncToGenerator(/*#__PURE__*/profile_page_regeneratorRuntime().mark(function _callee4(event) {
        var provinceId, citySelect;
        return profile_page_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              provinceId = event.target.value;
              citySelect = this.querySelector('#update-city'); // Gunakan ID yang benar
              if (citySelect) {
                _context4.next = 4;
                break;
              }
              return _context4.abrupt("return");
            case 4:
              // Pastikan elemen ada

              // Reset city dropdown
              citySelect.innerHTML = '<option value="">Select City</option>';
              citySelect.disabled = true;
              if (!provinceId) {
                _context4.next = 10;
                break;
              }
              _context4.next = 9;
              return this.fetchCitiesByProvinceId(provinceId);
            case 9:
              citySelect.disabled = false; // Aktifkan city select setelah fetching
            case 10:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this);
      }));
      function handleProvinceChangeForUpdateForm(_x2) {
        return _handleProvinceChangeForUpdateForm.apply(this, arguments);
      }
      return handleProvinceChangeForUpdateForm;
    }() // Method to fetch cities by province ID from external API
  }, {
    key: "fetchCitiesByProvinceId",
    value: function () {
      var _fetchCitiesByProvinceId = profile_page_asyncToGenerator(/*#__PURE__*/profile_page_regeneratorRuntime().mark(function _callee5(provinceId) {
        var citySelect, response, cities;
        return profile_page_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              citySelect = this.querySelector('#update-city'); // Gunakan ID yang benar
              if (citySelect) {
                _context5.next = 3;
                break;
              }
              return _context5.abrupt("return", []);
            case 3:
              // Pastikan elemen ada, kembalikan array kosong jika tidak

              // Disable city select while fetching
              citySelect.disabled = true;
              _context5.prev = 4;
              _context5.next = 7;
              return fetch("https://kanglerian.my.id/api-wilayah-indonesia/api/regencies/".concat(provinceId, ".json"));
            case 7:
              response = _context5.sent;
              if (response.ok) {
                _context5.next = 15;
                break;
              }
              if (!(response.status === 404)) {
                _context5.next = 14;
                break;
              }
              console.warn("No cities found for province ID: ".concat(provinceId));
              this.populateCitiesDropdown([]); // Populate with empty array
              citySelect.disabled = true; // Keep disabled
              return _context5.abrupt("return", []);
            case 14:
              throw new Error("HTTP error! status: ".concat(response.status));
            case 15:
              _context5.next = 17;
              return response.json();
            case 17:
              cities = _context5.sent;
              this.populateCitiesDropdown(cities);
              // citySelect.disabled = false; // Diaktifkan di handleProvinceChangeForUpdateForm setelah await
              return _context5.abrupt("return", cities);
            case 22:
              _context5.prev = 22;
              _context5.t0 = _context5["catch"](4);
              console.error("Error fetching cities for province ".concat(provinceId, ":"), _context5.t0);
              // alert('Failed to load cities. Please try again later.');
              this.populateCitiesDropdown([]); // Clear cities on error
              citySelect.disabled = true; // Keep disabled on error
              return _context5.abrupt("return", []);
            case 28:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this, [[4, 22]]);
      }));
      function fetchCitiesByProvinceId(_x3) {
        return _fetchCitiesByProvinceId.apply(this, arguments);
      }
      return fetchCitiesByProvinceId;
    }() // Method to populate the city dropdown
  }, {
    key: "populateCitiesDropdown",
    value: function populateCitiesDropdown(cities) {
      var citySelect = this.querySelector('#update-city'); // Gunakan ID yang benar
      if (citySelect) {
        citySelect.innerHTML = '<option value="">Select City</option>'; // Reset options
        cities.forEach(function (city) {
          var option = document.createElement('option');
          option.value = city.id; // Use city ID as value (penting untuk kirim ke backend)
          option.textContent = city.name; // Display city name
          citySelect.appendChild(option);
        });
      }
    }

    // Metode untuk mengatur nilai dropdown wilayah berdasarkan data user
  }, {
    key: "setWilayahDropdowns",
    value: function () {
      var _setWilayahDropdowns = profile_page_asyncToGenerator(/*#__PURE__*/profile_page_regeneratorRuntime().mark(function _callee6() {
        var provinceSelect, citySelect, cities;
        return profile_page_regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              provinceSelect = this.querySelector('#update-province');
              citySelect = this.querySelector('#update-city');
              if (!(this.user && provinceSelect && citySelect)) {
                _context6.next = 13;
                break;
              }
              if (!this.user.province_id) {
                _context6.next = 12;
                break;
              }
              provinceSelect.value = this.user.province_id;

              // Setelah provinsi diatur, fetch dan atur kota berdasarkan city_id user
              // Panggil fetchCitiesByProvinceId langsung dengan province_id user
              _context6.next = 7;
              return this.fetchCitiesByProvinceId(this.user.province_id);
            case 7:
              cities = _context6.sent;
              // Setelah cities terisi, atur kota jika user memiliki city_id
              if (this.user.city_id && citySelect) {
                citySelect.value = this.user.city_id;
              }
              // Pastikan dropdown kota aktif jika provinsi user ada
              citySelect.disabled = false;
              _context6.next = 13;
              break;
            case 12:
              // Jika user tidak punya province_id, pastikan dropdown kota nonaktif
              citySelect.disabled = true;
            case 13:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this);
      }));
      function setWilayahDropdowns() {
        return _setWilayahDropdowns.apply(this, arguments);
      }
      return setWilayahDropdowns;
    }()
  }]);
}(/*#__PURE__*/profile_page_wrapNativeSuper(HTMLElement)); // Definisikan Custom Element
customElements.define('profile-page', ProfilePage);
;// ./user/src/script/components/item/my-items-page.js
function my_items_page_typeof(o) { "@babel/helpers - typeof"; return my_items_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, my_items_page_typeof(o); }
function my_items_page_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ my_items_page_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == my_items_page_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(my_items_page_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = my_items_page_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function my_items_page_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return my_items_page_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? my_items_page_arrayLikeToArray(r, a) : void 0; } }
function my_items_page_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function my_items_page_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function my_items_page_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { my_items_page_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { my_items_page_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function my_items_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function my_items_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, my_items_page_toPropertyKey(o.key), o); } }
function my_items_page_createClass(e, r, t) { return r && my_items_page_defineProperties(e.prototype, r), t && my_items_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function my_items_page_callSuper(t, o, e) { return o = my_items_page_getPrototypeOf(o), my_items_page_possibleConstructorReturn(t, my_items_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], my_items_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function my_items_page_possibleConstructorReturn(t, e) { if (e && ("object" == my_items_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return my_items_page_assertThisInitialized(t); }
function my_items_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function my_items_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && my_items_page_setPrototypeOf(t, e); }
function my_items_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return my_items_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !my_items_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return my_items_page_construct(t, arguments, my_items_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), my_items_page_setPrototypeOf(Wrapper, t); }, my_items_page_wrapNativeSuper(t); }
function my_items_page_construct(t, e, r) { if (my_items_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && my_items_page_setPrototypeOf(p, r.prototype), p; }
function my_items_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (my_items_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function my_items_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function my_items_page_setPrototypeOf(t, e) { return my_items_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, my_items_page_setPrototypeOf(t, e); }
function my_items_page_getPrototypeOf(t) { return my_items_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, my_items_page_getPrototypeOf(t); }
function my_items_page_defineProperty(e, r, t) { return (r = my_items_page_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function my_items_page_toPropertyKey(t) { var i = my_items_page_toPrimitive(t, "string"); return "symbol" == my_items_page_typeof(i) ? i : i + ""; }
function my_items_page_toPrimitive(t, r) { if ("object" != my_items_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != my_items_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }


var WILAYAH_BASE_URL = "https://kanglerian.my.id/api-wilayah-indonesia/api";
var MyItemsPage = /*#__PURE__*/function (_HTMLElement) {
  function MyItemsPage() {
    var _this;
    my_items_page_classCallCheck(this, MyItemsPage);
    _this = my_items_page_callSuper(this, MyItemsPage);
    my_items_page_defineProperty(_this, "handleAddItem", /*#__PURE__*/function () {
      var _ref = my_items_page_asyncToGenerator(/*#__PURE__*/my_items_page_regeneratorRuntime().mark(function _callee(event) {
        var form, formData, availableSell, availableRent, categoryInput, priceSellInput, priceRentInput, availableRentCheckbox, depositInput, availableSellCheckbox, _iterator, _step, pair, result, errorMessage;
        return my_items_page_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              event.preventDefault();
              form = event.target;
              formData = new FormData(form); // Validasi: minimal salah satu harus tersedia (jual atau sewa)
              availableSell = form.querySelector("#item-available-sell").checked;
              availableRent = form.querySelector("#item-available-rent").checked;
              if (!(!availableSell && !availableRent)) {
                _context.next = 8;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Validasi Error',
                text: 'Item harus tersedia untuk dijual atau disewa (minimal salah satu).',
                confirmButtonColor: '#3b82f6'
              });
              return _context.abrupt("return");
            case 8:
              if (!(availableSell && !form.querySelector("#item-price-sell").value)) {
                _context.next = 11;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Harga Jual Kosong',
                text: 'Harga jual harus diisi jika item tersedia untuk dijual.',
                confirmButtonColor: '#3b82f6'
              }).then(function () {
                form.querySelector("#item-price-sell").focus();
              });
              return _context.abrupt("return");
            case 11:
              if (!(availableRent && !form.querySelector("#item-price-rent").value)) {
                _context.next = 14;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Harga Sewa Kosong',
                text: 'Harga sewa harus diisi jika item tersedia untuk disewa.',
                confirmButtonColor: '#3b82f6'
              }).then(function () {
                form.querySelector("#item-price-rent").focus();
              });
              return _context.abrupt("return");
            case 14:
              categoryInput = _this.querySelector("#item-category");
              if (!categoryInput || !categoryInput.value) {
                formData["delete"]("category_id");
              }
              priceSellInput = form.querySelector("#item-price-sell");
              if (!priceSellInput || !priceSellInput.value || priceSellInput.disabled) {
                formData["delete"]("price_sell");
              }
              priceRentInput = form.querySelector("#item-price-rent");
              if (!priceRentInput || !priceRentInput.value || priceRentInput.disabled) {
                formData["delete"]("price_rent");
              }
              availableRentCheckbox = form.querySelector("#item-available-rent");
              depositInput = form.querySelector("#item-deposit");
              if (!availableRentCheckbox || !availableRentCheckbox.checked || !depositInput || !depositInput.value) {
                formData["delete"]("deposit_amount");
              }
              availableSellCheckbox = form.querySelector("#item-available-sell");
              formData.set("is_available_for_sell", availableSellCheckbox && availableSellCheckbox.checked ? "true" : "false");
              formData.set("is_available_for_rent", availableRentCheckbox && availableRentCheckbox.checked ? "true" : "false");

              // Pastikan status default adalah 'available'
              formData.set("status", "available");
              console.log("Sending new item FormData:");
              _iterator = _createForOfIteratorHelper(formData.entries());
              try {
                for (_iterator.s(); !(_step = _iterator.n()).done;) {
                  pair = _step.value;
                  console.log(pair[0] + ": " + pair[1]);
                }
              } catch (err) {
                _iterator.e(err);
              } finally {
                _iterator.f();
              }
              _context.prev = 30;
              _context.next = 33;
              return apiFormDataRequest("POST", "/items", formData);
            case 33:
              result = _context.sent;
              if (!(result.status === "success")) {
                _context.next = 53;
                break;
              }
              console.log("Item added successfully:", result.data.item);
              sweetalert2_all_default().fire({
                icon: 'success',
                title: 'Berhasil!',
                text: 'Item berhasil ditambahkan!',
                confirmButtonColor: '#10b981'
              });
              console.log("Triggering ML backend data refresh...");
              _context.prev = 38;
              _context.next = 41;
              return fetch("http://localhost:5001/api/refresh_data", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({})
              });
            case 41:
              _context.next = 43;
              return new Promise(function (resolve) {
                return setTimeout(resolve, 2000);
              });
            case 43:
              console.log("ML backend data refresh triggered.");
              _context.next = 49;
              break;
            case 46:
              _context.prev = 46;
              _context.t0 = _context["catch"](38);
              console.warn("Failed to trigger ML backend data refresh:", _context.t0);
            case 49:
              _this.showAddForm();
              _this.fetchUserItems();
              _context.next = 57;
              break;
            case 53:
              console.error("Failed to add item (API error):", result.message, result.errors);
              errorMessage = "Gagal menambahkan item: " + result.message;
              if (result.errors && Array.isArray(result.errors)) {
                errorMessage += "\nValidasi error:";
                result.errors.forEach(function (err) {
                  errorMessage += "\n- ".concat(err.param, ": ").concat(err.msg);
                });
              }
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Gagal Menambahkan Item',
                text: errorMessage,
                confirmButtonColor: '#ef4444'
              });
            case 57:
              _context.next = 63;
              break;
            case 59:
              _context.prev = 59;
              _context.t1 = _context["catch"](30);
              console.error("Error adding item:", _context.t1);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Terjadi Kesalahan',
                text: 'Terjadi kesalahan saat menambahkan item. Silakan coba lagi.',
                confirmButtonColor: '#ef4444'
              });
            case 63:
            case "end":
              return _context.stop();
          }
        }, _callee, null, [[30, 59], [38, 46]]);
      }));
      return function (_x) {
        return _ref.apply(this, arguments);
      };
    }());
    my_items_page_defineProperty(_this, "handleUpdateItem", /*#__PURE__*/function () {
      var _ref2 = my_items_page_asyncToGenerator(/*#__PURE__*/my_items_page_regeneratorRuntime().mark(function _callee2(event) {
        var form, formData, availableSellCheckbox, availableRentCheckbox, statusSelect, validation, depositInput, priceSellInput, priceRentInput, _iterator2, _step2, pair, result, errorMessage;
        return my_items_page_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              event.preventDefault();
              form = event.target;
              formData = new FormData(form);
              if (_this.editingItemId) {
                _context2.next = 7;
                break;
              }
              console.error("No item ID set for editing.");
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Error',
                text: 'Terjadi kesalahan: ID item yang diedit tidak ditemukan.',
                confirmButtonColor: '#ef4444'
              });
              return _context2.abrupt("return");
            case 7:
              if (_this.canEditOrDelete(_this.editingItemData)) {
                _context2.next = 10;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Tidak Dapat Diedit',
                text: 'Item ini tidak dapat diedit karena sudah sold atau rented.',
                confirmButtonColor: '#f59e0b'
              });
              return _context2.abrupt("return");
            case 10:
              availableSellCheckbox = form.querySelector("#edit-item-available-sell");
              availableRentCheckbox = form.querySelector("#edit-item-available-rent");
              statusSelect = form.querySelector("#edit-item-status"); // Validasi availability berdasarkan status
              validation = _this.validateAvailability({
                status: statusSelect.value
              }, availableSellCheckbox.checked, availableRentCheckbox.checked);
              if (validation.valid) {
                _context2.next = 17;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Validasi Error',
                text: validation.message,
                confirmButtonColor: '#f59e0b'
              });
              return _context2.abrupt("return");
            case 17:
              if (!(!availableSellCheckbox.checked && !availableRentCheckbox.checked)) {
                _context2.next = 20;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Validasi Error',
                text: 'Item harus tersedia untuk dijual atau disewa (minimal salah satu).',
                confirmButtonColor: '#f59e0b'
              });
              return _context2.abrupt("return");
            case 20:
              if (!(availableSellCheckbox.checked && !form.querySelector("#edit-item-price-sell").value)) {
                _context2.next = 23;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Harga Jual Kosong',
                text: 'Harga jual harus diisi jika item tersedia untuk dijual.',
                confirmButtonColor: '#f59e0b'
              }).then(function () {
                form.querySelector("#edit-item-price-sell").focus();
              });
              return _context2.abrupt("return");
            case 23:
              if (!(availableRentCheckbox.checked && !form.querySelector("#edit-item-price-rent").value)) {
                _context2.next = 26;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Harga Sewa Kosong',
                text: 'Harga sewa harus diisi jika item tersedia untuk disewa.',
                confirmButtonColor: '#f59e0b'
              }).then(function () {
                form.querySelector("#edit-item-price-rent").focus();
              });
              return _context2.abrupt("return");
            case 26:
              formData["delete"]("is_available_for_sell");
              formData["delete"]("is_available_for_rent");
              formData.append("is_available_for_sell", availableSellCheckbox.checked ? "true" : "false");
              formData.append("is_available_for_rent", availableRentCheckbox.checked ? "true" : "false");
              depositInput = form.querySelector("#edit-item-deposit");
              if (!availableRentCheckbox.checked || !depositInput.value) {
                formData["delete"]("deposit_amount");
              }
              priceSellInput = _this.querySelector("#edit-item-price-sell");
              priceRentInput = _this.querySelector("#edit-item-price-rent");
              if (!priceSellInput.value || priceSellInput.disabled) formData["delete"]("price_sell");
              if (!priceRentInput.value || priceRentInput.disabled) formData["delete"]("price_rent");
              formData.append("id", _this.editingItemId);
              console.log("Sending updated item FormData:");
              _iterator2 = _createForOfIteratorHelper(formData.entries());
              try {
                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                  pair = _step2.value;
                  console.log(pair[0] + ": " + pair[1]);
                }
              } catch (err) {
                _iterator2.e(err);
              } finally {
                _iterator2.f();
              }
              _context2.prev = 40;
              _context2.next = 43;
              return apiFormDataRequest("PATCH", "/items/".concat(_this.editingItemId), formData);
            case 43:
              result = _context2.sent;
              if (!(result.status === "success")) {
                _context2.next = 63;
                break;
              }
              console.log("Item updated successfully:", result.data.item);
              sweetalert2_all_default().fire({
                icon: 'success',
                title: 'Berhasil!',
                text: 'Item berhasil diupdate!',
                confirmButtonColor: '#10b981'
              });
              console.log("Triggering ML backend data refresh...");
              _context2.prev = 48;
              _context2.next = 51;
              return fetch("http://localhost:5001/api/refresh_data", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({})
              });
            case 51:
              _context2.next = 53;
              return new Promise(function (resolve) {
                return setTimeout(resolve, 2000);
              });
            case 53:
              console.log("ML backend data refresh triggered.");
              _context2.next = 59;
              break;
            case 56:
              _context2.prev = 56;
              _context2.t0 = _context2["catch"](48);
              console.warn("Failed to trigger ML backend data refresh:", _context2.t0);
            case 59:
              _this.hideEditForm();
              _this.fetchUserItems();
              _context2.next = 67;
              break;
            case 63:
              console.error("Failed to update item (API error):", result.message, result.errors);
              errorMessage = "Gagal mengupdate item: " + result.message;
              if (result.errors && Array.isArray(result.errors)) {
                errorMessage += "\nValidasi error:";
                result.errors.forEach(function (err) {
                  errorMessage += "\n- ".concat(err.param, ": ").concat(err.msg);
                });
              }
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Gagal Mengupdate Item',
                text: errorMessage,
                confirmButtonColor: '#ef4444'
              });
            case 67:
              _context2.next = 73;
              break;
            case 69:
              _context2.prev = 69;
              _context2.t1 = _context2["catch"](40);
              console.error("Error updating item:", _context2.t1);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Terjadi Kesalahan',
                text: 'Terjadi kesalahan saat mengupdate item. Silakan coba lagi.',
                confirmButtonColor: '#ef4444'
              });
            case 73:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[40, 69], [48, 56]]);
      }));
      return function (_x2) {
        return _ref2.apply(this, arguments);
      };
    }());
    _this.fetchUserItems = _this.fetchUserItems.bind(_this);
    _this.renderUserItems = _this.renderUserItems.bind(_this);
    _this.handleItemActions = _this.handleItemActions.bind(_this);
    _this.handleEditItem = _this.handleEditItem.bind(_this);
    _this.handleDeleteItem = _this.handleDeleteItem.bind(_this);
    _this.handleUpdateItem = _this.handleUpdateItem.bind(_this);
    _this.handlePaginationClick = _this.handlePaginationClick.bind(_this);
    _this.editingItemId = null;
    _this.editingItemData = null;
    _this.user = null;

    // Pagination state
    _this.pagination = {
      total: 0,
      page: 1,
      limit: 10,
      totalPages: 1
    };
    _this.items = [];
    _this.isLoading = false;
    _this.error = null;
    return _this;
  }
  my_items_page_inherits(MyItemsPage, _HTMLElement);
  return my_items_page_createClass(MyItemsPage, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.loadUserData();
      this.render();
      this.fetchUserItems();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      this.removeEventListeners();
    }
  }, {
    key: "loadUserData",
    value: function loadUserData() {
      var userData = localStorage.getItem("user");
      if (userData) {
        this.user = JSON.parse(userData);
      }
    }
  }, {
    key: "handlePaginationClick",
    value: function handlePaginationClick(event) {
      // Only handle clicks on pagination buttons
      var target = event.target.closest("[data-page]");
      if (!target) return;

      // Prevent default behavior
      event.preventDefault();
      event.stopPropagation();
      var page = Number.parseInt(target.dataset.page);
      if (page && page !== this.pagination.page && page >= 1 && page <= this.pagination.totalPages) {
        this.pagination.page = page;
        this.fetchUserItems();
      }
    }

    // Helper function untuk mendapatkan status yang konsisten
  }, {
    key: "getItemStatus",
    value: function getItemStatus(item) {
      // Normalisasi status dari berbagai kemungkinan format
      if (!item.status) {
        return "available"; // default status
      }
      var status = item.status.toLowerCase().trim();

      // Mapping status yang mungkin berbeda ke format standar
      switch (status) {
        case "available":
        case "tersedia":
        case "aktif":
          return "available";
        case "pending":
        case "menunggu":
        case "proses":
          return "pending";
        case "sold":
        case "terjual":
        case "dijual":
          return "sold";
        case "rented":
        case "disewa":
        case "tersewa":
          return "rented";
        case "completed":
        case "selesai":
          return "completed";
        default:
          return "available";
      }
    }

    // Helper function untuk mendapatkan display status dan styling
  }, {
    key: "getStatusDisplay",
    value: function getStatusDisplay(status) {
      var normalizedStatus = this.getItemStatus({
        status: status
      });
      switch (normalizedStatus) {
        case "available":
          return {
            display: "Available",
            "class": "text-green-600 bg-green-100 px-2 py-0.5 rounded-full text-xs font-semibold font-poppins"
          };
        case "pending":
          return {
            display: "Pending",
            "class": "text-blue-600 bg-blue-100 px-2 py-0.5 rounded-full text-xs font-semibold font-poppins"
          };
        case "sold":
          return {
            display: "Sold",
            "class": "text-red-600 bg-red-100 px-2 py-0.5 rounded-full text-xs font-semibold font-poppins"
          };
        case "rented":
          return {
            display: "Rented",
            "class": "text-yellow-600 bg-yellow-100 px-2 py-0.5 rounded-full text-xs font-semibold font-poppins"
          };
        case "completed":
          return {
            display: "Completed",
            "class": "text-purple-600 bg-purple-100 px-2 py-0.5 rounded-full text-xs font-semibold font-poppins"
          };
        default:
          return {
            display: "Unknown",
            "class": "text-gray-600 bg-gray-100 px-2 py-0.5 rounded-full text-xs font-semibold font-poppins"
          };
      }
    }

    // Helper function untuk mengecek apakah item bisa diedit/dihapus
  }, {
    key: "canEditOrDelete",
    value: function canEditOrDelete(item) {
      var status = this.getItemStatus(item);
      // Item bisa diedit/dihapus jika statusnya available, pending, atau completed
      return status === "available" || status === "pending" || status === "completed";
    }

    // Helper function untuk mengecek apakah item bisa dijual
  }, {
    key: "canBeSold",
    value: function canBeSold(item) {
      var status = this.getItemStatus(item);
      // Item bisa dijual jika tidak sedang rented
      return status !== "rented";
    }

    // Helper function untuk validasi availability berdasarkan status
  }, {
    key: "validateAvailability",
    value: function validateAvailability(item, isAvailableForSell, isAvailableForRent) {
      var status = this.getItemStatus(item);

      // Jika item sedang rented, tidak bisa dijual
      if (status === "rented" && isAvailableForSell) {
        return {
          valid: false,
          message: "Item yang sedang disewa tidak dapat dijual sampai statusnya menjadi completed."
        };
      }

      // Jika item sudah sold, tidak bisa disewa
      if (status === "sold" && isAvailableForRent) {
        return {
          valid: false,
          message: "Item yang sudah terjual tidak dapat disewa."
        };
      }
      return {
        valid: true
      };
    }
  }, {
    key: "renderPagination",
    value: function renderPagination() {
      if (this.pagination.totalPages <= 1) {
        return "";
      }
      var currentPage = this.pagination.page;
      var totalPages = this.pagination.totalPages;
      var startItem = (currentPage - 1) * this.pagination.limit + 1;
      var endItem = Math.min(currentPage * this.pagination.limit, this.pagination.total);

      // Calculate page numbers to show
      var startPage = Math.max(1, currentPage - 2);
      var endPage = Math.min(totalPages, currentPage + 2);

      // Adjust if we're near the beginning or end
      if (currentPage <= 3) {
        endPage = Math.min(5, totalPages);
      }
      if (currentPage >= totalPages - 2) {
        startPage = Math.max(1, totalPages - 4);
      }
      var pageNumbers = [];
      for (var i = startPage; i <= endPage; i++) {
        pageNumbers.push(i);
      }
      return "\n      <div class=\"flex flex-col sm:flex-row items-center justify-between gap-4 mt-8 px-4\">\n        <!-- Results info -->\n        <div class=\"text-sm text-gray-700 font-poppins\">\n          Menampilkan <span class=\"font-medium\">".concat(startItem, "</span> sampai <span class=\"font-medium\">").concat(endItem, "</span> dari <span class=\"font-medium\">").concat(this.pagination.total, "</span> item\n        </div>\n        \n        <!-- Pagination controls -->\n        <div class=\"flex items-center gap-2\">\n          <!-- Previous button -->\n          <button \n            data-page=\"").concat(currentPage - 1, "\" \n            class=\"pagination-btn ").concat(currentPage === 1 ? "pagination-btn-disabled" : "pagination-btn-enabled", "\"\n            ").concat(currentPage === 1 ? "disabled" : "", "\n          >\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"></path>\n            </svg>\n            <span class=\"hidden sm:inline\">Previous</span>\n          </button>\n\n          <!-- Page numbers -->\n          <div class=\"flex items-center gap-1\">\n            ").concat(startPage > 1 ? "\n              <button data-page=\"1\" class=\"pagination-number\">1</button>\n              ".concat(startPage > 2 ? '<span class="px-2 text-gray-500">...</span>' : "", "\n            ") : "", "\n            \n            ").concat(pageNumbers.map(function (page) {
        return "\n              <button \n                data-page=\"".concat(page, "\" \n                class=\"pagination-number ").concat(page === currentPage ? "pagination-number-active" : "", "\"\n              >\n                ").concat(page, "\n              </button>\n            ");
      }).join(""), "\n            \n            ").concat(endPage < totalPages ? "\n              ".concat(endPage < totalPages - 1 ? '<span class="px-2 text-gray-500">...</span>' : "", "\n              <button data-page=\"").concat(totalPages, "\" class=\"pagination-number\">").concat(totalPages, "</button>\n            ") : "", "\n          </div>\n\n          <!-- Next button -->\n          <button \n            data-page=\"").concat(currentPage + 1, "\" \n            class=\"pagination-btn ").concat(currentPage === totalPages ? "pagination-btn-disabled" : "pagination-btn-enabled", "\"\n            ").concat(currentPage === totalPages ? "disabled" : "", "\n          >\n            <span class=\"hidden sm:inline\">Next</span>\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 5l7 7-7 7\"></path>\n            </svg>\n          </button>\n        </div>\n      </div>\n    ");
    }
  }, {
    key: "render",
    value: function render() {
      var _this$user, _this$user2, _this$user3, _this$user4, _this$user5, _this$user6, _this$user7, _this$user8, _this$user9, _this$user10, _this$user11, _this$user12;
      this.innerHTML = "\n            <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n                /* Pagination styles */\n                .pagination-btn {\n                    display: flex;\n                    align-items: center;\n                    gap: 0.5rem;\n                    padding: 0.5rem 0.75rem;\n                    border-radius: 0.5rem;\n                    font-size: 0.875rem;\n                    font-weight: 500;\n                    transition: all 0.2s;\n                }\n\n                .pagination-btn-enabled {\n                    background-color: white;\n                    border: 1px solid #d1d5db;\n                    color: #374151;\n                }\n\n                .pagination-btn-enabled:hover {\n                    background-color: #f9fafb;\n                    border-color: #9ca3af;\n                }\n\n                .pagination-btn-disabled {\n                    background-color: #f9fafb;\n                    border: 1px solid #e5e7eb;\n                    color: #9ca3af;\n                    cursor: not-allowed;\n                }\n\n                .pagination-number {\n                    min-width: 2.5rem;\n                    height: 2.5rem;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    border-radius: 0.5rem;\n                    font-size: 0.875rem;\n                    font-weight: 500;\n                    transition: all 0.2s;\n                    background-color: white;\n                    border: 1px solid #d1d5db;\n                    color: #374151;\n                }\n\n                .pagination-number:hover {\n                    background-color: #f3f4f6;\n                    border-color: #9ca3af;\n                }\n\n                .pagination-number-active {\n                    background-color: #3b82f6;\n                    border-color: #3b82f6;\n                    color: white;\n                }\n\n                .pagination-number-active:hover {\n                    background-color: #2563eb;\n                    border-color: #2563eb;\n                }\n            </style>\n            <div class=\"container mx-auto px-4 py-8 font-poppins\">\n                <h2 class=\"text-2xl font-bold mb-4\">Item Saya (Toko Saya)</h2>\n\n                <div id=\"add-item-section\" class=\"mt-8 p-6 bg-white rounded-lg shadow-md\">\n                    <h3 class=\"text-xl font-semibold mb-4\">Tambah Item Baru</h3>\n                    <form id=\"add-item-form\" class=\"space-y-4\">\n                        <div>\n                            <label for=\"item-name\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Nama Item <span class=\"text-red-500\">*</span></label>\n                            <input type=\"text\" id=\"item-name\" name=\"name\" required class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                        </div>\n                        \n                        <div>\n                            <label for=\"item-category\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Kategori</label>\n                            <select id=\"item-category\" name=\"category_id\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                                <option value=\"\">Pilih Kategori</option>\n                                <option value=\"1\">Masak</option>\n                                <option value=\"2\">Fotografi</option>\n                                <option value=\"3\">Membaca</option>\n                            </select>\n                        </div>\n                        \n                        <div>\n                            <label for=\"item-description\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Deskripsi</label>\n                            <textarea id=\"item-description\" name=\"description\" rows=\"3\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"></textarea>\n                        </div>\n\n                        <div class=\"flex items-center space-x-4 mb-4\">\n                            <div class=\"flex items-center\">\n                                <input id=\"item-available-sell\" name=\"is_available_for_sell\" type=\"checkbox\" value=\"true\" class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\">\n                                <label for=\"item-available-sell\" class=\"ml-2 block text-sm text-gray-900 font-poppins\">Tersedia untuk Dijual</label>\n                            </div>\n                            <div class=\"flex items-center\">\n                                <input id=\"item-available-rent\" name=\"is_available_for_rent\" type=\"checkbox\" value=\"true\" class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\">\n                                <label for=\"item-available-rent\" class=\"ml-2 block text-sm text-gray-900 font-poppins\">Tersedia untuk Disewa</label>\n                            </div>\n                        </div>\n\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label for=\"item-price-sell\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Harga Jual</label>\n                                <input type=\"number\" id=\"item-price-sell\" name=\"price_sell\" step=\"0.01\" disabled class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 disabled:opacity-50\">\n                            </div>\n                            <div>\n                                <label for=\"item-price-rent\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Harga Sewa</label>\n                                <input type=\"number\" id=\"item-price-rent\" name=\"price_rent\" step=\"0.01\" disabled class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 disabled:opacity-50\">\n                            </div>\n                        </div>\n\n                        <div id=\"deposit-field\" class=\"hidden\">\n                            <label for=\"item-deposit\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Jumlah Deposit</label>\n                            <input type=\"number\" id=\"item-deposit\" name=\"deposit_amount\" step=\"0.01\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                        </div>\n\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Provinsi</label>\n                                <input type=\"text\" value=\"".concat(((_this$user = this.user) === null || _this$user === void 0 ? void 0 : _this$user.province_name) || "Tidak diset", "\" disabled class=\"bg-gray-100 border border-gray-300 text-gray-700 text-sm rounded-lg block w-full p-2.5 disabled:opacity-75\">\n                                <input type=\"hidden\" name=\"province_id\" value=\"").concat(((_this$user2 = this.user) === null || _this$user2 === void 0 ? void 0 : _this$user2.province_id) || "", "\">\n                                <input type=\"hidden\" name=\"province_name\" value=\"").concat(((_this$user3 = this.user) === null || _this$user3 === void 0 ? void 0 : _this$user3.province_name) || "", "\">\n                            </div>\n                            <div>\n                                <label class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Kota/Kabupaten</label>\n                                <input type=\"text\" value=\"").concat(((_this$user4 = this.user) === null || _this$user4 === void 0 ? void 0 : _this$user4.city_name) || "Tidak diset", "\" disabled class=\"bg-gray-100 border border-gray-300 text-gray-700 text-sm rounded-lg block w-full p-2.5 disabled:opacity-75\">\n                                <input type=\"hidden\" name=\"city_id\" value=\"").concat(((_this$user5 = this.user) === null || _this$user5 === void 0 ? void 0 : _this$user5.city_id) || "", "\">\n                                <input type=\"hidden\" name=\"city_name\" value=\"").concat(((_this$user6 = this.user) === null || _this$user6 === void 0 ? void 0 : _this$user6.city_name) || "", "\">\n                            </div>\n                        </div>\n\n                        <div>\n                            <label class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\" for=\"item-photos\">Foto Item (Multiple)</label>\n                            <input class=\"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none\" id=\"item-photos\" name=\"photos\" multiple accept=\"image/*\" type=\"file\">\n                        </div>\n\n                        <!-- Hidden field untuk status default -->\n                        <input type=\"hidden\" name=\"status\" value=\"available\">\n\n                        <div>\n                            <button type=\"submit\" class=\"flex w-full justify-center rounded-md bg-blue-600 px-3 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-blue-700 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">\n                                Tambah Item\n                            </button>\n                        </div>\n                    </form>\n                </div>\n\n                <div id=\"edit-item-section\" class=\"mt-8 p-6 bg-white rounded-lg shadow-md hidden\"> \n                    <h3 class=\"text-xl font-semibold mb-4\">Edit Item <span id=\"editing-item-name\" class=\"font-normal italic text-gray-600\"></span></h3>\n                    <form id=\"edit-item-form\" class=\"space-y-4\">\n                        <div>\n                            <label for=\"edit-item-name\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Nama Item <span class=\"text-red-500\">*</span></label>\n                            <input type=\"text\" id=\"edit-item-name\" name=\"name\" required class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                        </div>\n                        \n                        <div>\n                            <label for=\"edit-item-category\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Kategori</label>\n                            <select id=\"edit-item-category\" name=\"category_id\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                                <option value=\"\">Pilih Kategori</option>\n                                <option value=\"1\">Masak</option>\n                                <option value=\"2\">Fotografi</option>\n                                <option value=\"3\">Membaca</option>\n                            </select>\n                        </div>\n                        \n                        <div>\n                            <label for=\"edit-item-description\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Deskripsi</label>\n                            <textarea id=\"edit-item-description\" name=\"description\" rows=\"3\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\"></textarea>\n                        </div>\n\n                        <!-- Status selector untuk edit -->\n                        <div>\n                            <label for=\"edit-item-status\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Status Item</label>\n                            <select id=\"edit-item-status\" name=\"status\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                                <option value=\"available\">Available</option>\n                                <option value=\"pending\">Pending</option>\n                                <option value=\"sold\">Sold</option>\n                                <option value=\"rented\">Rented</option>\n                                <option value=\"completed\">Completed</option>\n                            </select>\n                        </div>\n\n                        <div class=\"flex items-center space-x-4 mb-4\">\n                            <div class=\"flex items-center\">\n                                <input id=\"edit-item-available-sell\" name=\"is_available_for_sell\" type=\"checkbox\" value=\"true\" class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\">\n                                <label for=\"edit-item-available-sell\" class=\"ml-2 block text-sm text-gray-900 font-poppins\">Tersedia untuk Dijual</label>\n                            </div>\n                            <div class=\"flex items-center\">\n                                <input id=\"edit-item-available-rent\" name=\"is_available_for_rent\" type=\"checkbox\" value=\"true\" class=\"focus:ring-indigo-500 h-4 w-4 text-indigo-600 border-gray-300 rounded\">\n                                <label for=\"edit-item-available-rent\" class=\"ml-2 block text-sm text-gray-900 font-poppins\">Tersedia untuk Disewa</label>\n                            </div>\n                        </div>\n\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label for=\"edit-item-price-sell\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Harga Jual</label>\n                                <input type=\"number\" id=\"edit-item-price-sell\" name=\"price_sell\" step=\"0.01\" disabled class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 disabled:opacity-50\">\n                            </div>\n                            <div>\n                                <label for=\"edit-item-price-rent\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Harga Sewa</label>\n                                <input type=\"number\" id=\"edit-item-price-rent\" name=\"price_rent\" step=\"0.01\" disabled class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 disabled:opacity-50\">\n                            </div>\n                        </div>\n\n                        <div id=\"edit-deposit-field\" class=\"hidden\"> \n                            <label for=\"edit-item-deposit\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Jumlah Deposit</label>\n                            <input type=\"number\" id=\"edit-item-deposit\" name=\"deposit_amount\" step=\"0.01\" class=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5\">\n                        </div>\n\n                        <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                            <div>\n                                <label class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Provinsi</label>\n                                <input type=\"text\" value=\"").concat(((_this$user7 = this.user) === null || _this$user7 === void 0 ? void 0 : _this$user7.province_name) || "Tidak diset", "\" disabled class=\"bg-gray-100 border border-gray-300 text-gray-700 text-sm rounded-lg block w-full p-2.5 disabled:opacity-75\">\n                                <input type=\"hidden\" name=\"province_id\" value=\"").concat(((_this$user8 = this.user) === null || _this$user8 === void 0 ? void 0 : _this$user8.province_id) || "", "\">\n                                <input type=\"hidden\" name=\"province_name\" value=\"").concat(((_this$user9 = this.user) === null || _this$user9 === void 0 ? void 0 : _this$user9.province_name) || "", "\">\n                            </div>\n                            <div>\n                                <label class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Kota/Kabupaten</label>\n                                <input type=\"text\" value=\"").concat(((_this$user10 = this.user) === null || _this$user10 === void 0 ? void 0 : _this$user10.city_name) || "Tidak diset", "\" disabled class=\"bg-gray-100 border border-gray-300 text-gray-700 text-sm rounded-lg block w-full p-2.5 disabled:opacity-75\">\n                                <input type=\"hidden\" name=\"city_id\" value=\"").concat(((_this$user11 = this.user) === null || _this$user11 === void 0 ? void 0 : _this$user11.city_id) || "", "\">\n                                <input type=\"hidden\" name=\"city_name\" value=\"").concat(((_this$user12 = this.user) === null || _this$user12 === void 0 ? void 0 : _this$user12.city_name) || "", "\">\n                            </div>\n                        </div>\n\n                        <div>\n                            <label for=\"edit-item-photos\" class=\"block mb-2 text-sm font-medium text-gray-900 font-poppins font-bold\">Foto Item Baru (Multiple)</label>\n                            <input type=\"file\" id=\"edit-item-photos\" name=\"photos\" multiple accept=\"image/*\" class=\"block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 focus:outline-none\">\n                        </div>\n\n                        <div class=\"flex space-x-4\">\n                            <button type=\"submit\" class=\"flex-1 justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600\">\n                                Simpan Perubahan\n                            </button>\n                            <button type=\"button\" id=\"cancel-edit-button\" class=\"flex-1 justify-center rounded-md bg-gray-300 px-3 py-1.5 text-sm font-semibold text-gray-700 shadow-sm hover:bg-gray-400\">\n                                Batal\n                            </button>\n                        </div>\n                    </form>\n                </div>\n\n                <hr class=\"my-8\">\n\n                <div class=\"mt-8\">\n                    <h3 class=\"text-xl font-semibold mb-4\">Daftar Item Anda</h3>\n                    <div id=\"user-items-list\">\n                        ").concat(this.renderItemsList(), "\n                    </div>\n                    ").concat(this.renderPagination(), "\n                </div>\n            </div>\n        ");

      // Setup event listeners setelah render
      this.setupEventListeners();
    }
  }, {
    key: "renderItemsList",
    value: function renderItemsList() {
      var _this2 = this;
      if (this.isLoading) {
        return "\n        <div class=\"flex justify-center items-center py-12\">\n          <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n          <span class=\"ml-3 text-gray-600\">Loading items...</span>\n        </div>\n      ";
      }
      if (this.error) {
        return "\n        <div class=\"text-center py-12\">\n          <div class=\"bg-red-50 border border-red-200 rounded-xl p-6 max-w-md mx-auto\">\n            <svg class=\"w-12 h-12 text-red-500 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n            </svg>\n            <p class=\"text-red-600 font-semibold\">Error: ".concat(this.error, "</p>\n          </div>\n        </div>\n      ");
      }
      if (!this.items || this.items.length === 0) {
        return "\n        <div class=\"text-center py-16\">\n          <div class=\"bg-gray-50 border-2 border-dashed border-gray-300 rounded-xl p-8 max-w-md mx-auto\">\n            <svg class=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2M4 13h2m13-8l-4 4m0 0l-4-4m4 4V3\"></path>\n            </svg>\n            <h3 class=\"mt-2 text-sm font-medium text-gray-900\">Belum ada item</h3>\n            <p class=\"mt-1 text-sm text-gray-500\">Mulai dengan menambahkan item pertama Anda.</p>\n          </div>\n        </div>\n      ";
      }
      return this.items.map(function (item) {
        return _this2.renderSingleItem(item);
      }).join("");
    }
  }, {
    key: "renderSingleItem",
    value: function renderSingleItem(item) {
      var statusInfo = this.getStatusDisplay(item.status);
      var canEdit = this.canEditOrDelete(item);
      var canSell = this.canBeSold(item);
      var getCategoryName = function getCategoryName(categoryId) {
        switch (categoryId) {
          case 1:
            return "Masak";
          case 2:
            return "Fotografi";
          case 3:
            return "Membaca";
          default:
            return "Tidak dikategorikan";
        }
      };

      // Tambahkan informasi tambahan untuk status
      var statusNote = "";
      var status = this.getItemStatus(item);
      if (status === "rented") {
        statusNote = '<span class="text-xs text-orange-600 bg-orange-100 px-2 py-0.5 rounded-full ml-2">🚫 Tidak dapat dijual saat disewa</span>';
      } else if (status === "completed") {
        statusNote = '<span class="text-xs text-green-600 bg-green-100 px-2 py-0.5 rounded-full ml-2">✅ Dapat dijual/disewa lagi</span>';
      }
      return "\n      <div class=\"mb-6 p-6 bg-white rounded-xl shadow-lg border border-gray-200 hover:shadow-xl transition-shadow duration-300 ".concat(!canEdit ? "opacity-75 border-gray-400" : "", "\">\n        <div class=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\n          <div class=\"flex items-start gap-4 flex-1\">\n            ").concat(item.thumbnail ? "<img src=\"http://localhost:5000".concat(item.thumbnail, "\" alt=\"Thumbnail ").concat(item.name, "\" class=\"w-20 h-20 object-cover rounded-lg border-2 border-gray-200 flex-shrink-0\">") : "<div class=\"w-20 h-20 bg-gray-200 rounded-lg border-2 border-gray-300 flex items-center justify-center flex-shrink-0\">\n                    <span class=\"text-gray-500 text-xs\">No Image</span>\n                  </div>", "\n            <div class=\"flex-1 min-w-0\">\n              <div class=\"flex items-center gap-2 mb-2 flex-wrap\">\n                <h4 class=\"text-lg font-poppins font-bold text-gray-800 truncate\">").concat(item.name, "</h4>\n                <span class=\"").concat(statusInfo["class"], "\">").concat(statusInfo.display, "</span>\n                ").concat(statusNote, "\n                ").concat(!canEdit ? '<span class="text-xs text-gray-500 bg-gray-100 px-2 py-0.5 rounded-full">🔒 Tidak dapat diedit</span>' : "", "\n              </div>\n              <p class=\"text-sm text-gray-600 font-poppins mb-1 line-clamp-2\">").concat(item.description || "Tidak ada deskripsi", "</p>\n              <div class=\"flex flex-wrap gap-4 text-sm text-gray-500 font-poppins\">\n                <span><strong>Kategori:</strong> ").concat(getCategoryName(item.category_id), "</span>\n                <span><strong>Lokasi:</strong> ").concat(item.city_name || "-", ", ").concat(item.province_name || "-", "</span>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"flex flex-col lg:flex-row lg:items-center gap-4\">\n            <div class=\"flex flex-col sm:flex-row gap-2 text-sm font-poppins\">\n              ").concat(item.price_sell ? "<div class=\"bg-green-50 border border-green-200 rounded-lg px-3 py-2\">\n                      <span class=\"text-green-700 font-semibold\">Jual: Rp ".concat(Number.parseFloat(item.price_sell).toLocaleString("id-ID"), "</span>\n                    </div>") : "", "\n              ").concat(item.price_rent ? "<div class=\"bg-blue-50 border border-blue-200 rounded-lg px-3 py-2\">\n                      <span class=\"text-blue-700 font-semibold\">Sewa: Rp ".concat(Number.parseFloat(item.price_rent).toLocaleString("id-ID"), "/hari</span>\n                    </div>") : "", "\n              ").concat(item.is_available_for_rent && item.deposit_amount ? "<div class=\"bg-yellow-50 border border-yellow-200 rounded-lg px-3 py-2\">\n                      <span class=\"text-yellow-700 font-semibold\">Deposit: Rp ".concat(Number.parseFloat(item.deposit_amount).toLocaleString("id-ID"), "</span>\n                    </div>") : "", "\n            </div>\n            \n            <div class=\"flex gap-2\">\n              <button class=\"edit-item-button ").concat(canEdit ? "bg-yellow-500 hover:bg-yellow-600" : "bg-gray-400 cursor-not-allowed", " text-white text-sm px-4 py-2 rounded-lg font-semibold transition-colors duration-200 flex items-center gap-1\" \n                      data-item-id=\"").concat(item.id, "\" \n                      ").concat(!canEdit ? 'disabled title="Item tidak dapat diedit karena sudah sold/rented"' : "", ">\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                </svg>\n                Edit\n              </button>\n              <button class=\"delete-item-button ").concat(canEdit ? "bg-red-500 hover:bg-red-600" : "bg-gray-400 cursor-not-allowed", " text-white text-sm px-4 py-2 rounded-lg font-semibold transition-colors duration-200 flex items-center gap-1\" \n                      data-item-id=\"").concat(item.id, "\"\n                      ").concat(!canEdit ? 'disabled title="Item tidak dapat dihapus karena sudah sold/rented"' : "", ">\n                <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"></path>\n                </svg>\n                Hapus\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    ");
    }
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var addItemForm = this.querySelector("#add-item-form");
      if (addItemForm) {
        addItemForm.addEventListener("submit", this.handleAddItem);
      }

      // Setup checkbox listeners untuk form tambah item
      this.setupAvailabilityListeners("add");
      var itemListDiv = this.querySelector("#user-items-list");
      if (itemListDiv) {
        itemListDiv.addEventListener("click", this.handleItemActions);
      }
      var editItemForm = this.querySelector("#edit-item-form");
      if (editItemForm) {
        editItemForm.addEventListener("submit", this.handleUpdateItem);
      }

      // Setup checkbox listeners untuk form edit item
      this.setupAvailabilityListeners("edit");
      var cancelEditButton = this.querySelector("#cancel-edit-button");
      if (cancelEditButton) {
        cancelEditButton.addEventListener("click", this.hideEditForm.bind(this));
      }
      this.addEventListener("click", this.handlePaginationClick);
    }

    // Helper method untuk setup availability listeners
  }, {
    key: "setupAvailabilityListeners",
    value: function setupAvailabilityListeners(formType) {
      var prefix = formType === "add" ? "item" : "edit-item";
      var availableSellCheckbox = this.querySelector("#".concat(prefix, "-available-sell"));
      var availableRentCheckbox = this.querySelector("#".concat(prefix, "-available-rent"));
      var priceSellInput = this.querySelector("#".concat(prefix, "-price-sell"));
      var priceRentInput = this.querySelector("#".concat(prefix, "-price-rent"));
      var depositFieldDiv = this.querySelector("#".concat(formType === "add" ? "deposit" : "edit-deposit", "-field"));
      var depositInput = this.querySelector("#".concat(prefix, "-deposit"));
      if (availableSellCheckbox && priceSellInput) {
        availableSellCheckbox.addEventListener("change", function (event) {
          priceSellInput.disabled = !event.target.checked;
          if (!event.target.checked) {
            priceSellInput.value = "";
          } else {
            setTimeout(function () {
              return priceSellInput.focus();
            }, 100);
          }
        });
      }
      if (availableRentCheckbox && priceRentInput && depositFieldDiv && depositInput) {
        availableRentCheckbox.addEventListener("change", function (event) {
          priceRentInput.disabled = !event.target.checked;
          if (event.target.checked) {
            depositFieldDiv.classList.remove("hidden");
            setTimeout(function () {
              return priceRentInput.focus();
            }, 100);
          } else {
            depositFieldDiv.classList.add("hidden");
            priceRentInput.value = "";
            depositInput.value = "";
          }
        });
      }
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      var addItemForm = this.querySelector("#add-item-form");
      if (addItemForm) {
        addItemForm.removeEventListener("submit", this.handleAddItem);
      }
      var itemListDiv = this.querySelector("#user-items-list");
      if (itemListDiv) {
        itemListDiv.removeEventListener("click", this.handleItemActions);
      }
      var editItemForm = this.querySelector("#edit-item-form");
      if (editItemForm) {
        editItemForm.removeEventListener("submit", this.handleUpdateItem);
      }
      var cancelEditButton = this.querySelector("#cancel-edit-button");
      if (cancelEditButton) {
        cancelEditButton.removeEventListener("click", this.hideEditForm.bind(this));
      }
      this.removeEventListener("click", this.handlePaginationClick);
    }
  }, {
    key: "showAddForm",
    value: function showAddForm() {
      this.querySelector("#add-item-section").classList.remove("hidden");
      this.querySelector("#edit-item-section").classList.add("hidden");
      var addItemForm = this.querySelector("#add-item-form");
      if (addItemForm) addItemForm.reset();

      // Reset form state
      var priceSellInput = this.querySelector("#item-price-sell");
      var priceRentInput = this.querySelector("#item-price-rent");
      var depositField = this.querySelector("#deposit-field");
      if (priceSellInput) priceSellInput.disabled = true;
      if (priceRentInput) priceRentInput.disabled = true;
      if (depositField) depositField.classList.add("hidden");
      this.editingItemId = null;
    }
  }, {
    key: "showEditForm",
    value: function showEditForm() {
      this.querySelector("#add-item-section").classList.add("hidden");
      this.querySelector("#edit-item-section").classList.remove("hidden");
    }
  }, {
    key: "hideEditForm",
    value: function hideEditForm() {
      this.showAddForm();
    }
  }, {
    key: "fetchUserItems",
    value: function () {
      var _fetchUserItems = my_items_page_asyncToGenerator(/*#__PURE__*/my_items_page_regeneratorRuntime().mark(function _callee3() {
        var user, userId, queryParams, queryString, result;
        return my_items_page_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              this.isLoading = true;
              this.error = null;
              this.render();
              _context3.prev = 3;
              user = localStorage.getItem("user");
              if (user) {
                _context3.next = 11;
                break;
              }
              console.error("User not found in localStorage. Cannot fetch items.");
              this.items = [];
              this.isLoading = false;
              this.render();
              return _context3.abrupt("return");
            case 11:
              userId = JSON.parse(user).id; // Add pagination parameters
              queryParams = {
                user_id: userId,
                limit: this.pagination.limit,
                page: this.pagination.page
              };
              queryString = Object.keys(queryParams).map(function (key) {
                return "".concat(encodeURIComponent(key), "=").concat(encodeURIComponent(queryParams[key]));
              }).join("&");
              _context3.next = 16;
              return apiGet("/items?".concat(queryString));
            case 16:
              result = _context3.sent;
              if (result.status === "success") {
                this.items = Array.isArray(result.data) ? result.data : [];

                // Update pagination info from API response
                if (result.pagination) {
                  this.pagination = {
                    total: result.pagination.total || 0,
                    page: result.pagination.page || 1,
                    limit: result.pagination.limit || 10,
                    totalPages: result.pagination.totalPages || 1
                  };
                }
                console.log("User Items:", this.items);
                console.log("Pagination:", this.pagination);
                this.isLoading = false;
                this.error = null;
              } else {
                console.error("Failed to fetch user items:", result.message);
                this.items = [];
                this.error = result.message || "Gagal memuat item.";
                this.isLoading = false;
              }
              _context3.next = 26;
              break;
            case 20:
              _context3.prev = 20;
              _context3.t0 = _context3["catch"](3);
              console.error("Error fetching user items:", _context3.t0);
              this.items = [];
              this.error = _context3.t0.message || "Terjadi kesalahan saat memuat item.";
              this.isLoading = false;
            case 26:
              _context3.prev = 26;
              this.render();
              return _context3.finish(26);
            case 29:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this, [[3, 20, 26, 29]]);
      }));
      function fetchUserItems() {
        return _fetchUserItems.apply(this, arguments);
      }
      return fetchUserItems;
    }()
  }, {
    key: "renderUserItems",
    value: function renderUserItems(items) {
      // This method is now replaced by renderItemsList() which is called in render()
      // Keeping for backward compatibility but it's no longer used
      console.warn("renderUserItems is deprecated, use renderItemsList instead");
    }
  }, {
    key: "handleItemActions",
    value: function handleItemActions(event) {
      var target = event.target.closest("button");
      if (!target) return;

      // Cek apakah button disabled
      if (target.disabled) {
        return;
      }
      if (target.classList.contains("edit-item-button")) {
        var itemId = target.dataset.itemId;
        if (itemId) {
          this.handleEditItem(itemId);
        }
      }
      if (target.classList.contains("delete-item-button")) {
        var _itemId = target.dataset.itemId;
        if (_itemId) {
          this.handleDeleteItem(_itemId);
        }
      }
    }
  }, {
    key: "handleEditItem",
    value: function () {
      var _handleEditItem = my_items_page_asyncToGenerator(/*#__PURE__*/my_items_page_regeneratorRuntime().mark(function _callee4(itemId) {
        var apiResult, confirmation;
        return my_items_page_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              console.log("Attempting to edit item with ID:", itemId);
              this.editingItemId = itemId;
              _context4.prev = 2;
              _context4.next = 5;
              return apiGet("/items/".concat(itemId));
            case 5:
              apiResult = _context4.sent;
              if (!(apiResult.status === "success")) {
                _context4.next = 20;
                break;
              }
              this.editingItemData = apiResult.data;
              console.log("Fetched item details for editing:", this.editingItemData);

              // Cek apakah item bisa diedit
              if (this.canEditOrDelete(this.editingItemData)) {
                _context4.next = 14;
                break;
              }
              sweetalert2_all_default().fire({
                icon: 'warning',
                title: 'Tidak Dapat Diedit',
                text: 'Item ini tidak dapat diedit karena sudah sold atau rented.',
                confirmButtonColor: '#f59e0b'
              });
              this.editingItemId = null;
              this.editingItemData = null;
              return _context4.abrupt("return");
            case 14:
              _context4.next = 16;
              return sweetalert2_all_default().fire({
                title: 'Edit Item',
                text: "Apakah Anda yakin ingin mengedit item \"".concat(this.editingItemData.name, "\"?"),
                icon: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3b82f6',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Ya, Edit',
                cancelButtonText: 'Batal'
              });
            case 16:
              confirmation = _context4.sent;
              if (confirmation.isConfirmed) {
                this.showEditForm();
                this.populateEditForm(this.editingItemData);
              } else {
                this.editingItemId = null;
                this.editingItemData = null;
              }
              _context4.next = 24;
              break;
            case 20:
              console.error("Failed to fetch item details for editing:", apiResult.message);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Gagal Mengambil Data',
                text: "Gagal mengambil detail item untuk diedit: " + apiResult.message,
                confirmButtonColor: '#ef4444'
              });
              this.editingItemId = null;
              this.editingItemData = null;
            case 24:
              _context4.next = 32;
              break;
            case 26:
              _context4.prev = 26;
              _context4.t0 = _context4["catch"](2);
              console.error("Error fetching item details for editing:", _context4.t0);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Terjadi Kesalahan',
                text: 'Terjadi kesalahan saat mengambil detail item.',
                confirmButtonColor: '#ef4444'
              });
              this.editingItemId = null;
              this.editingItemData = null;
            case 32:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this, [[2, 26]]);
      }));
      function handleEditItem(_x3) {
        return _handleEditItem.apply(this, arguments);
      }
      return handleEditItem;
    }()
  }, {
    key: "populateEditForm",
    value: function () {
      var _populateEditForm = my_items_page_asyncToGenerator(/*#__PURE__*/my_items_page_regeneratorRuntime().mark(function _callee5(item) {
        var form, editingItemNameSpan, statusSelect, normalizedStatus, availableSellCheckbox, availableRentCheckbox, priceSellInput, priceRentInput, depositFieldDiv, depositInput;
        return my_items_page_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              form = this.querySelector("#edit-item-form");
              if (!(!form || !item)) {
                _context5.next = 3;
                break;
              }
              return _context5.abrupt("return");
            case 3:
              form.querySelector("#edit-item-name").value = item.name || "";
              editingItemNameSpan = this.querySelector("#editing-item-name");
              if (editingItemNameSpan) {
                editingItemNameSpan.textContent = item.name || "";
              }
              form.querySelector("#edit-item-category").value = item.category_id || "";
              form.querySelector("#edit-item-description").value = item.description || "";
              form.querySelector("#edit-item-price-sell").value = item.price_sell || "";
              form.querySelector("#edit-item-price-rent").value = item.price_rent || "";

              // Set status
              statusSelect = form.querySelector("#edit-item-status");
              if (statusSelect) {
                normalizedStatus = this.getItemStatus(item);
                statusSelect.value = normalizedStatus;
              }
              availableSellCheckbox = form.querySelector("#edit-item-available-sell");
              availableRentCheckbox = form.querySelector("#edit-item-available-rent");
              priceSellInput = this.querySelector("#edit-item-price-sell");
              priceRentInput = this.querySelector("#edit-item-price-rent");
              availableSellCheckbox.checked = item.is_available_for_sell === 1 || item.is_available_for_sell === true;
              availableRentCheckbox.checked = item.is_available_for_rent === 1 || item.is_available_for_rent === true;
              priceSellInput.disabled = !availableSellCheckbox.checked;
              priceRentInput.disabled = !availableRentCheckbox.checked;
              depositFieldDiv = this.querySelector("#edit-deposit-field");
              depositInput = form.querySelector("#edit-item-deposit");
              if (item.is_available_for_rent === 1 || item.is_available_for_rent === true) {
                if (depositFieldDiv) depositFieldDiv.classList.remove("hidden");
                if (depositInput) depositInput.value = item.deposit_amount || "";
              } else {
                if (depositFieldDiv) depositFieldDiv.classList.add("hidden");
                if (depositInput) depositInput.value = "";
              }

              // Setup status change listener untuk validasi availability
              if (statusSelect) {
                statusSelect.addEventListener("change", function (event) {
                  var newStatus = event.target.value;

                  // Jika status berubah ke rented, disable checkbox jual
                  if (newStatus === "rented") {
                    availableSellCheckbox.disabled = true;
                    availableSellCheckbox.checked = false;
                    priceSellInput.disabled = true;
                    priceSellInput.value = "";
                  } else {
                    availableSellCheckbox.disabled = false;
                  }
                });
              }
            case 24:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this);
      }));
      function populateEditForm(_x4) {
        return _populateEditForm.apply(this, arguments);
      }
      return populateEditForm;
    }()
  }, {
    key: "handleDeleteItem",
    value: function () {
      var _handleDeleteItem = my_items_page_asyncToGenerator(/*#__PURE__*/my_items_page_regeneratorRuntime().mark(function _callee6(itemId) {
        var result, deleteResult;
        return my_items_page_regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              console.log("Attempting to delete item with ID:", itemId);
              _context6.prev = 1;
              _context6.next = 4;
              return sweetalert2_all_default().fire({
                title: 'Hapus Item',
                text: "Apakah Anda yakin ingin menghapus item ini?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ef4444',
                cancelButtonColor: '#6b7280',
                confirmButtonText: 'Ya, Hapus',
                cancelButtonText: 'Batal'
              });
            case 4:
              result = _context6.sent;
              if (!result.isConfirmed) {
                _context6.next = 29;
                break;
              }
              _context6.next = 8;
              return apiDelete("/items/".concat(itemId));
            case 8:
              deleteResult = _context6.sent;
              if (!(deleteResult.status === "success")) {
                _context6.next = 27;
                break;
              }
              console.log("Item deleted successfully.");
              sweetalert2_all_default().fire({
                icon: 'success',
                title: 'Berhasil!',
                text: 'Item berhasil dihapus!',
                confirmButtonColor: '#10b981'
              });
              console.log("Triggering ML backend data refresh...");
              _context6.prev = 13;
              _context6.next = 16;
              return fetch("http://localhost:5001/api/refresh_data", {
                method: "POST",
                headers: {
                  "Content-Type": "application/json"
                },
                body: JSON.stringify({})
              });
            case 16:
              _context6.next = 18;
              return new Promise(function (resolve) {
                return setTimeout(resolve, 2000);
              });
            case 18:
              console.log("ML backend data refresh triggered.");
              _context6.next = 24;
              break;
            case 21:
              _context6.prev = 21;
              _context6.t0 = _context6["catch"](13);
              console.warn("Failed to trigger ML backend data refresh:", _context6.t0);
            case 24:
              this.fetchUserItems();
              _context6.next = 29;
              break;
            case 27:
              console.error("Failed to delete item:", deleteResult.message);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Gagal Menghapus Item',
                text: "Gagal menghapus item: " + deleteResult.message,
                confirmButtonColor: '#ef4444'
              });
            case 29:
              _context6.next = 35;
              break;
            case 31:
              _context6.prev = 31;
              _context6.t1 = _context6["catch"](1);
              console.error("Error deleting item:", _context6.t1);
              sweetalert2_all_default().fire({
                icon: 'error',
                title: 'Terjadi Kesalahan',
                text: 'Terjadi kesalahan saat menghapus item. Silakan coba lagi.',
                confirmButtonColor: '#ef4444'
              });
            case 35:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this, [[1, 31], [13, 21]]);
      }));
      function handleDeleteItem(_x5) {
        return _handleDeleteItem.apply(this, arguments);
      }
      return handleDeleteItem;
    }()
  }]);
}(/*#__PURE__*/my_items_page_wrapNativeSuper(HTMLElement));
customElements.define("my-items-page", MyItemsPage);
;// ./user/src/script/components/transaction/my-transactions-page.js
function my_transactions_page_typeof(o) { "@babel/helpers - typeof"; return my_transactions_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, my_transactions_page_typeof(o); }
function my_transactions_page_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ my_transactions_page_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == my_transactions_page_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(my_transactions_page_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function my_transactions_page_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function my_transactions_page_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { my_transactions_page_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { my_transactions_page_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function my_transactions_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function my_transactions_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, my_transactions_page_toPropertyKey(o.key), o); } }
function my_transactions_page_createClass(e, r, t) { return r && my_transactions_page_defineProperties(e.prototype, r), t && my_transactions_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function my_transactions_page_toPropertyKey(t) { var i = my_transactions_page_toPrimitive(t, "string"); return "symbol" == my_transactions_page_typeof(i) ? i : i + ""; }
function my_transactions_page_toPrimitive(t, r) { if ("object" != my_transactions_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != my_transactions_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function my_transactions_page_callSuper(t, o, e) { return o = my_transactions_page_getPrototypeOf(o), my_transactions_page_possibleConstructorReturn(t, my_transactions_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], my_transactions_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function my_transactions_page_possibleConstructorReturn(t, e) { if (e && ("object" == my_transactions_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return my_transactions_page_assertThisInitialized(t); }
function my_transactions_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function my_transactions_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && my_transactions_page_setPrototypeOf(t, e); }
function my_transactions_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return my_transactions_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !my_transactions_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return my_transactions_page_construct(t, arguments, my_transactions_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), my_transactions_page_setPrototypeOf(Wrapper, t); }, my_transactions_page_wrapNativeSuper(t); }
function my_transactions_page_construct(t, e, r) { if (my_transactions_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && my_transactions_page_setPrototypeOf(p, r.prototype), p; }
function my_transactions_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (my_transactions_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function my_transactions_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function my_transactions_page_setPrototypeOf(t, e) { return my_transactions_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, my_transactions_page_setPrototypeOf(t, e); }
function my_transactions_page_getPrototypeOf(t) { return my_transactions_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, my_transactions_page_getPrototypeOf(t); }

 // Assuming Utils has isAuthenticated and redirectToLogin
var MyTransactionsPage = /*#__PURE__*/function (_HTMLElement) {
  function MyTransactionsPage() {
    var _this;
    my_transactions_page_classCallCheck(this, MyTransactionsPage);
    _this = my_transactions_page_callSuper(this, MyTransactionsPage);
    // State to hold transaction data
    _this.transactions = [];
    _this.transactionType = null; // 'buy' or 'rent', determined from URL

    // Bind event handlers if not using arrow functions
    // this.renderTransactions = this.renderTransactions.bind(this); // If not arrow function
    // this.fetchTransactions = this.fetchTransactions.bind(this); // If not arrow function
    return _this;
  }
  my_transactions_page_inherits(MyTransactionsPage, _HTMLElement);
  return my_transactions_page_createClass(MyTransactionsPage, [{
    key: "_emptyContent",
    value: function _emptyContent() {
      this.innerHTML = "";
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      // Check login status - crucial for authenticated pages
      if (!utils.isAuthenticated()) {
        alert('Anda harus login untuk melihat halaman ini.');
        utils.redirectToLogin(); // Redirect if not logged in
        return; // Stop further execution
      }
      this._emptyContent(); // Clear initial content

      // Determine transaction type from URL hash
      this.transactionType = this.getTransactionTypeFromUrl();
      console.log('Fetching transactions of type:', this.transactionType);
      this.renderLayout(); // Render basic layout first
      this.fetchTransactions(this.transactionType); // Fetch transactions based on type
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      // Cleanup if necessary (e.g., remove event listeners, though none added yet)
    }

    // Method to determine transaction type from URL hash
  }, {
    key: "getTransactionTypeFromUrl",
    value: function getTransactionTypeFromUrl() {
      var hash = window.location.hash;
      if (hash.includes('/my-rentals')) {
        return 'rent';
      } else if (hash.includes('/my-transactions')) {
        return 'buy';
      }
      // Default or fallback if needed, though routing should handle this
      return null;
    }
  }, {
    key: "renderLayout",
    value: function renderLayout() {
      var pageTitle = this.transactionType === 'rent' ? 'Pinjaman Saya' : 'Transaksi Pembelian Saya';
      this.innerHTML = "\n            <div class=\"container mx-auto px-4 py-8\">\n                <h1 class=\"text-2xl font-bold mb-6\">".concat(pageTitle, "</h1>\n\n                <!-- Transaction List Area -->\n                <div id=\"transactions-list\">\n                    <p>Memuat transaksi...</p>\n                </div>\n\n                <!-- TODO: Add Pagination here if needed -->\n            </div>\n        ");
    }
  }, {
    key: "renderTransactions",
    value: function renderTransactions() {
      var transactionsListElement = this.querySelector('#transactions-list');
      if (!transactionsListElement) {
        console.error('Transactions list element not found!');
        return;
      }
      transactionsListElement.innerHTML = ''; // Bersihkan daftar sebelumnya

      if (this.transactions.length === 0) {
        // Added font-poppins and text-gray-700 for consistency
        transactionsListElement.innerHTML = "<p class=\"text-gray-700 font-poppins\">Anda belum memiliki ".concat(this.transactionType === 'rent' ? 'pinjaman' : 'transaksi pembelian', " apapun.</p>");
        return;
      }

      // Added space-y-4 for spacing between transaction cards
      transactionsListElement.innerHTML = "\n        <style>\n            @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800&display=swap');\n            \n            * {\n                font-family: 'Poppins', sans-serif;\n            }\n        </style>\n             <div class=\"space-y-4\">\n                ".concat(this.transactions.map(function (transaction) {
        return "\n                    <!-- Card Container for each transaction item -->\n                    <!-- Added modern card styling: bg-white, p-6, rounded-lg, shadow-md, text-gray-800 for default text -->\n                    <div class=\"p-6 bg-white rounded-lg shadow-md text-gray-800\">\n                        <!-- Flex container for content and actions -->\n                        <div class=\"flex flex-col md:flex-row justify-between items-start md:items-center flex-wrap\">\n                            <!-- Transaction Details Area -->\n                            <div class=\"flex-1 min-w-0 mr-0 md:mr-4 mb-4 md:mb-0\">\n                                <h3 class=\"text-lg font-poppins font-bold mb-2\">".concat(transaction.item_name || 'Nama Item Tidak Diketahui', "</h3>\n                                <!-- Transaction Details: Font Open Sans -->\n                                <p class=\"text-sm text-gray-700 font-poppins\">Tipe: <span class=\"capitalize\">").concat(transaction.type, "</span></p>\n                                <p class=\"text-sm text-gray-700 font-poppins\">Status: <span class=\"capitalize\">").concat(transaction.status, "</span></p>\n                                <p class=\"text-sm font-semibold text-gray-800 font-poppins\">Total Harga: Rp ").concat(transaction.total_price ? parseFloat(transaction.total_price).toLocaleString('id-ID') : 'N/A', "</p>\n                                ").concat(transaction.type === 'rent' ? "\n                                    <p class=\"text-sm text-gray-700 font-poppins\">Tanggal Sewa: ".concat(transaction.rent_start_date ? new Date(transaction.rent_start_date).toLocaleDateString('id-ID') : '-', " - ").concat(transaction.rent_end_date ? new Date(transaction.rent_end_date).toLocaleDateString('id-ID') : '-', "</p>\n                                    <p class=\"text-sm text-gray-700 font-poppins\">Deposit Dibayar: Rp ").concat(transaction.deposit_paid ? parseFloat(transaction.deposit_paid).toLocaleString('id-ID') : '0', "</p>\n                                ") : '', "\n                                <p class=\"text-sm text-gray-700 font-poppins\">Tanggal Transaksi: ").concat(transaction.created_at ? new Date(transaction.created_at).toLocaleDateString('id-ID') : '-', "</p>\n                                <!-- Add more details as needed -->\n                            </div>\n                            <!-- Action Buttons Area -->\n                            <div class=\"flex flex-wrap gap-2\">\n                                <!-- Detail Button: Styled like primary button -->\n                               <a href=\"/#/transactions/").concat(transaction.id, "\" class=\"bg-blue-600 hover:bg-blue-700 text-white text-sm px-4 py-2 rounded-md font-semibold inline-block text-center font-poppins\">Detail</a>\n\n                               ").concat(transaction.status === 'completed' ? "\n                                    <!-- Review Button: Styled like secondary/success button -->\n                                     <a href=\"/#/items/".concat(transaction.item_id, "#review\" class=\"bg-green-600 hover:bg-green-700 text-white text-sm px-4 py-2 rounded-md font-semibold inline-block text-center font-poppins\">\n                                         Beri Review\n                                     </a>\n                                 ") : '', "\n                            </div>\n                        </div>\n                    </div>\n                ");
      }).join(''), "\n             </div>\n        ");
      // Note: Ensure transaction properties like item_name, type, status, total_price, rent_start_date, etc.,
      // match the structure returned by your backend API\'s GET /transactions endpoint.
    }

    // Method to fetch transactions from the backend API
  }, {
    key: "fetchTransactions",
    value: function () {
      var _fetchTransactions = my_transactions_page_asyncToGenerator(/*#__PURE__*/my_transactions_page_regeneratorRuntime().mark(function _callee(type) {
        var queryParams, response, transactionsListElement, _transactionsListElement, errorMessage;
        return my_transactions_page_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              // Construct query parameters if type is specified
              queryParams = type ? "?type=".concat(type) : '';
              console.log("Fetching transactions from /transactions".concat(queryParams));

              // Use authenticatedRequest as this endpoint requires authentication
              _context.next = 5;
              return authenticatedRequest("/transactions".concat(queryParams));
            case 5:
              response = _context.sent;
              if (response.status === 'success' && response.data) {
                console.log('Fetched transactions:', response.data);
                // Assuming response.data is the array of transactions
                this.transactions = Array.isArray(response.data) ? response.data : []; // Ensure it's an array
                this.renderTransactions(); // Render the list once data is fetched
              } else {
                console.error('Error fetching transactions:', response.message || 'Unknown error', response);
                // Display error message to the user
                transactionsListElement = this.querySelector('#transactions-list');
                if (transactionsListElement) {
                  transactionsListElement.innerHTML = "<p class=\"text-red-500\">Gagal memuat daftar transaksi: ".concat(response.message || 'Terjadi kesalahan', "</p>");
                }
              }
              _context.next = 14;
              break;
            case 9:
              _context.prev = 9;
              _context.t0 = _context["catch"](0);
              console.error('Error during API request:', _context.t0);
              // Display error message to the user
              _transactionsListElement = this.querySelector('#transactions-list');
              if (_transactionsListElement) {
                // Check if error has a message property
                errorMessage = _context.t0.message || 'Terjadi kesalahan tidak diketahui';
                _transactionsListElement.innerHTML = "<p class=\"text-red-500\">Terjadi kesalahan saat memuat transaksi: ".concat(errorMessage, "</p>");
              }
            case 14:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 9]]);
      }));
      function fetchTransactions(_x) {
        return _fetchTransactions.apply(this, arguments);
      }
      return fetchTransactions;
    }()
  }]);
}(/*#__PURE__*/my_transactions_page_wrapNativeSuper(HTMLElement));
customElements.define('my-transactions-page', MyTransactionsPage);
;// ./node_modules/engine.io-parser/build/esm/commons.js
const PACKET_TYPES = Object.create(null); // no Map = no polyfill
PACKET_TYPES["open"] = "0";
PACKET_TYPES["close"] = "1";
PACKET_TYPES["ping"] = "2";
PACKET_TYPES["pong"] = "3";
PACKET_TYPES["message"] = "4";
PACKET_TYPES["upgrade"] = "5";
PACKET_TYPES["noop"] = "6";
const PACKET_TYPES_REVERSE = Object.create(null);
Object.keys(PACKET_TYPES).forEach((key) => {
    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;
});
const ERROR_PACKET = { type: "error", data: "parser error" };


;// ./node_modules/engine.io-parser/build/esm/encodePacket.browser.js

const withNativeBlob = typeof Blob === "function" ||
    (typeof Blob !== "undefined" &&
        Object.prototype.toString.call(Blob) === "[object BlobConstructor]");
const withNativeArrayBuffer = typeof ArrayBuffer === "function";
// ArrayBuffer.isView method is not defined in IE10
const isView = (obj) => {
    return typeof ArrayBuffer.isView === "function"
        ? ArrayBuffer.isView(obj)
        : obj && obj.buffer instanceof ArrayBuffer;
};
const encodePacket = ({ type, data }, supportsBinary, callback) => {
    if (withNativeBlob && data instanceof Blob) {
        if (supportsBinary) {
            return callback(data);
        }
        else {
            return encodeBlobAsBase64(data, callback);
        }
    }
    else if (withNativeArrayBuffer &&
        (data instanceof ArrayBuffer || isView(data))) {
        if (supportsBinary) {
            return callback(data);
        }
        else {
            return encodeBlobAsBase64(new Blob([data]), callback);
        }
    }
    // plain string
    return callback(PACKET_TYPES[type] + (data || ""));
};
const encodeBlobAsBase64 = (data, callback) => {
    const fileReader = new FileReader();
    fileReader.onload = function () {
        const content = fileReader.result.split(",")[1];
        callback("b" + (content || ""));
    };
    return fileReader.readAsDataURL(data);
};
function toArray(data) {
    if (data instanceof Uint8Array) {
        return data;
    }
    else if (data instanceof ArrayBuffer) {
        return new Uint8Array(data);
    }
    else {
        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);
    }
}
let TEXT_ENCODER;
function encodePacketToBinary(packet, callback) {
    if (withNativeBlob && packet.data instanceof Blob) {
        return packet.data.arrayBuffer().then(toArray).then(callback);
    }
    else if (withNativeArrayBuffer &&
        (packet.data instanceof ArrayBuffer || isView(packet.data))) {
        return callback(toArray(packet.data));
    }
    encodePacket(packet, false, (encoded) => {
        if (!TEXT_ENCODER) {
            TEXT_ENCODER = new TextEncoder();
        }
        callback(TEXT_ENCODER.encode(encoded));
    });
}


;// ./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js
// imported from https://github.com/socketio/base64-arraybuffer
const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
// Use a lookup table to find the index.
const lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);
for (let i = 0; i < chars.length; i++) {
    lookup[chars.charCodeAt(i)] = i;
}
const encode = (arraybuffer) => {
    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';
    for (i = 0; i < len; i += 3) {
        base64 += chars[bytes[i] >> 2];
        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];
        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];
        base64 += chars[bytes[i + 2] & 63];
    }
    if (len % 3 === 2) {
        base64 = base64.substring(0, base64.length - 1) + '=';
    }
    else if (len % 3 === 1) {
        base64 = base64.substring(0, base64.length - 2) + '==';
    }
    return base64;
};
const decode = (base64) => {
    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;
    if (base64[base64.length - 1] === '=') {
        bufferLength--;
        if (base64[base64.length - 2] === '=') {
            bufferLength--;
        }
    }
    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);
    for (i = 0; i < len; i += 4) {
        encoded1 = lookup[base64.charCodeAt(i)];
        encoded2 = lookup[base64.charCodeAt(i + 1)];
        encoded3 = lookup[base64.charCodeAt(i + 2)];
        encoded4 = lookup[base64.charCodeAt(i + 3)];
        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);
        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);
        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);
    }
    return arraybuffer;
};

;// ./node_modules/engine.io-parser/build/esm/decodePacket.browser.js


const decodePacket_browser_withNativeArrayBuffer = typeof ArrayBuffer === "function";
const decodePacket = (encodedPacket, binaryType) => {
    if (typeof encodedPacket !== "string") {
        return {
            type: "message",
            data: mapBinary(encodedPacket, binaryType),
        };
    }
    const type = encodedPacket.charAt(0);
    if (type === "b") {
        return {
            type: "message",
            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),
        };
    }
    const packetType = PACKET_TYPES_REVERSE[type];
    if (!packetType) {
        return ERROR_PACKET;
    }
    return encodedPacket.length > 1
        ? {
            type: PACKET_TYPES_REVERSE[type],
            data: encodedPacket.substring(1),
        }
        : {
            type: PACKET_TYPES_REVERSE[type],
        };
};
const decodeBase64Packet = (data, binaryType) => {
    if (decodePacket_browser_withNativeArrayBuffer) {
        const decoded = decode(data);
        return mapBinary(decoded, binaryType);
    }
    else {
        return { base64: true, data }; // fallback for old browsers
    }
};
const mapBinary = (data, binaryType) => {
    switch (binaryType) {
        case "blob":
            if (data instanceof Blob) {
                // from WebSocket + binaryType "blob"
                return data;
            }
            else {
                // from HTTP long-polling or WebTransport
                return new Blob([data]);
            }
        case "arraybuffer":
        default:
            if (data instanceof ArrayBuffer) {
                // from HTTP long-polling (base64) or WebSocket + binaryType "arraybuffer"
                return data;
            }
            else {
                // from WebTransport (Uint8Array)
                return data.buffer;
            }
    }
};

;// ./node_modules/engine.io-parser/build/esm/index.js



const SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text
const encodePayload = (packets, callback) => {
    // some packets may be added to the array while encoding, so the initial length must be saved
    const length = packets.length;
    const encodedPackets = new Array(length);
    let count = 0;
    packets.forEach((packet, i) => {
        // force base64 encoding for binary packets
        encodePacket(packet, false, (encodedPacket) => {
            encodedPackets[i] = encodedPacket;
            if (++count === length) {
                callback(encodedPackets.join(SEPARATOR));
            }
        });
    });
};
const decodePayload = (encodedPayload, binaryType) => {
    const encodedPackets = encodedPayload.split(SEPARATOR);
    const packets = [];
    for (let i = 0; i < encodedPackets.length; i++) {
        const decodedPacket = decodePacket(encodedPackets[i], binaryType);
        packets.push(decodedPacket);
        if (decodedPacket.type === "error") {
            break;
        }
    }
    return packets;
};
function createPacketEncoderStream() {
    return new TransformStream({
        transform(packet, controller) {
            encodePacketToBinary(packet, (encodedPacket) => {
                const payloadLength = encodedPacket.length;
                let header;
                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length
                if (payloadLength < 126) {
                    header = new Uint8Array(1);
                    new DataView(header.buffer).setUint8(0, payloadLength);
                }
                else if (payloadLength < 65536) {
                    header = new Uint8Array(3);
                    const view = new DataView(header.buffer);
                    view.setUint8(0, 126);
                    view.setUint16(1, payloadLength);
                }
                else {
                    header = new Uint8Array(9);
                    const view = new DataView(header.buffer);
                    view.setUint8(0, 127);
                    view.setBigUint64(1, BigInt(payloadLength));
                }
                // first bit indicates whether the payload is plain text (0) or binary (1)
                if (packet.data && typeof packet.data !== "string") {
                    header[0] |= 0x80;
                }
                controller.enqueue(header);
                controller.enqueue(encodedPacket);
            });
        },
    });
}
let TEXT_DECODER;
function totalLength(chunks) {
    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);
}
function concatChunks(chunks, size) {
    if (chunks[0].length === size) {
        return chunks.shift();
    }
    const buffer = new Uint8Array(size);
    let j = 0;
    for (let i = 0; i < size; i++) {
        buffer[i] = chunks[0][j++];
        if (j === chunks[0].length) {
            chunks.shift();
            j = 0;
        }
    }
    if (chunks.length && j < chunks[0].length) {
        chunks[0] = chunks[0].slice(j);
    }
    return buffer;
}
function createPacketDecoderStream(maxPayload, binaryType) {
    if (!TEXT_DECODER) {
        TEXT_DECODER = new TextDecoder();
    }
    const chunks = [];
    let state = 0 /* State.READ_HEADER */;
    let expectedLength = -1;
    let isBinary = false;
    return new TransformStream({
        transform(chunk, controller) {
            chunks.push(chunk);
            while (true) {
                if (state === 0 /* State.READ_HEADER */) {
                    if (totalLength(chunks) < 1) {
                        break;
                    }
                    const header = concatChunks(chunks, 1);
                    isBinary = (header[0] & 0x80) === 0x80;
                    expectedLength = header[0] & 0x7f;
                    if (expectedLength < 126) {
                        state = 3 /* State.READ_PAYLOAD */;
                    }
                    else if (expectedLength === 126) {
                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;
                    }
                    else {
                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;
                    }
                }
                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {
                    if (totalLength(chunks) < 2) {
                        break;
                    }
                    const headerArray = concatChunks(chunks, 2);
                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);
                    state = 3 /* State.READ_PAYLOAD */;
                }
                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {
                    if (totalLength(chunks) < 8) {
                        break;
                    }
                    const headerArray = concatChunks(chunks, 8);
                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);
                    const n = view.getUint32(0);
                    if (n > Math.pow(2, 53 - 32) - 1) {
                        // the maximum safe integer in JavaScript is 2^53 - 1
                        controller.enqueue(ERROR_PACKET);
                        break;
                    }
                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);
                    state = 3 /* State.READ_PAYLOAD */;
                }
                else {
                    if (totalLength(chunks) < expectedLength) {
                        break;
                    }
                    const data = concatChunks(chunks, expectedLength);
                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));
                    state = 0 /* State.READ_HEADER */;
                }
                if (expectedLength === 0 || expectedLength > maxPayload) {
                    controller.enqueue(ERROR_PACKET);
                    break;
                }
            }
        },
    });
}
const protocol = 4;


;// ./node_modules/@socket.io/component-emitter/lib/esm/index.js
/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
}

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  function on() {
    this.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks['$' + event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks['$' + event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }

  // Remove event specific arrays for event types that no
  // one is subscribed for to avoid memory leak.
  if (callbacks.length === 0) {
    delete this._callbacks['$' + event];
  }

  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};

  var args = new Array(arguments.length - 1)
    , callbacks = this._callbacks['$' + event];

  for (var i = 1; i < arguments.length; i++) {
    args[i - 1] = arguments[i];
  }

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

// alias used for reserved events (protected method)
Emitter.prototype.emitReserved = Emitter.prototype.emit;

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks['$' + event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

;// ./node_modules/engine.io-client/build/esm/globals.js
const nextTick = (() => {
    const isPromiseAvailable = typeof Promise === "function" && typeof Promise.resolve === "function";
    if (isPromiseAvailable) {
        return (cb) => Promise.resolve().then(cb);
    }
    else {
        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);
    }
})();
const globalThisShim = (() => {
    if (typeof self !== "undefined") {
        return self;
    }
    else if (typeof window !== "undefined") {
        return window;
    }
    else {
        return Function("return this")();
    }
})();
const defaultBinaryType = "arraybuffer";
function createCookieJar() { }

;// ./node_modules/engine.io-client/build/esm/util.js

function pick(obj, ...attr) {
    return attr.reduce((acc, k) => {
        if (obj.hasOwnProperty(k)) {
            acc[k] = obj[k];
        }
        return acc;
    }, {});
}
// Keep a reference to the real timeout functions so they can be used when overridden
const NATIVE_SET_TIMEOUT = globalThisShim.setTimeout;
const NATIVE_CLEAR_TIMEOUT = globalThisShim.clearTimeout;
function installTimerFunctions(obj, opts) {
    if (opts.useNativeTimers) {
        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThisShim);
        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThisShim);
    }
    else {
        obj.setTimeoutFn = globalThisShim.setTimeout.bind(globalThisShim);
        obj.clearTimeoutFn = globalThisShim.clearTimeout.bind(globalThisShim);
    }
}
// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)
const BASE64_OVERHEAD = 1.33;
// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9
function byteLength(obj) {
    if (typeof obj === "string") {
        return utf8Length(obj);
    }
    // arraybuffer or blob
    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);
}
function utf8Length(str) {
    let c = 0, length = 0;
    for (let i = 0, l = str.length; i < l; i++) {
        c = str.charCodeAt(i);
        if (c < 0x80) {
            length += 1;
        }
        else if (c < 0x800) {
            length += 2;
        }
        else if (c < 0xd800 || c >= 0xe000) {
            length += 3;
        }
        else {
            i++;
            length += 4;
        }
    }
    return length;
}
/**
 * Generates a random 8-characters string.
 */
function randomString() {
    return (Date.now().toString(36).substring(3) +
        Math.random().toString(36).substring(2, 5));
}

;// ./node_modules/engine.io-client/build/esm/contrib/parseqs.js
// imported from https://github.com/galkn/querystring
/**
 * Compiles a querystring
 * Returns string representation of the object
 *
 * @param {Object}
 * @api private
 */
function parseqs_encode(obj) {
    let str = '';
    for (let i in obj) {
        if (obj.hasOwnProperty(i)) {
            if (str.length)
                str += '&';
            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);
        }
    }
    return str;
}
/**
 * Parses a simple querystring into an object
 *
 * @param {String} qs
 * @api private
 */
function parseqs_decode(qs) {
    let qry = {};
    let pairs = qs.split('&');
    for (let i = 0, l = pairs.length; i < l; i++) {
        let pair = pairs[i].split('=');
        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
    }
    return qry;
}

;// ./node_modules/engine.io-client/build/esm/transport.js




class TransportError extends Error {
    constructor(reason, description, context) {
        super(reason);
        this.description = description;
        this.context = context;
        this.type = "TransportError";
    }
}
class Transport extends Emitter {
    /**
     * Transport abstract constructor.
     *
     * @param {Object} opts - options
     * @protected
     */
    constructor(opts) {
        super();
        this.writable = false;
        installTimerFunctions(this, opts);
        this.opts = opts;
        this.query = opts.query;
        this.socket = opts.socket;
        this.supportsBinary = !opts.forceBase64;
    }
    /**
     * Emits an error.
     *
     * @param {String} reason
     * @param description
     * @param context - the error context
     * @return {Transport} for chaining
     * @protected
     */
    onError(reason, description, context) {
        super.emitReserved("error", new TransportError(reason, description, context));
        return this;
    }
    /**
     * Opens the transport.
     */
    open() {
        this.readyState = "opening";
        this.doOpen();
        return this;
    }
    /**
     * Closes the transport.
     */
    close() {
        if (this.readyState === "opening" || this.readyState === "open") {
            this.doClose();
            this.onClose();
        }
        return this;
    }
    /**
     * Sends multiple packets.
     *
     * @param {Array} packets
     */
    send(packets) {
        if (this.readyState === "open") {
            this.write(packets);
        }
        else {
            // this might happen if the transport was silently closed in the beforeunload event handler
        }
    }
    /**
     * Called upon open
     *
     * @protected
     */
    onOpen() {
        this.readyState = "open";
        this.writable = true;
        super.emitReserved("open");
    }
    /**
     * Called with data.
     *
     * @param {String} data
     * @protected
     */
    onData(data) {
        const packet = decodePacket(data, this.socket.binaryType);
        this.onPacket(packet);
    }
    /**
     * Called with a decoded packet.
     *
     * @protected
     */
    onPacket(packet) {
        super.emitReserved("packet", packet);
    }
    /**
     * Called upon close.
     *
     * @protected
     */
    onClose(details) {
        this.readyState = "closed";
        super.emitReserved("close", details);
    }
    /**
     * Pauses the transport, in order not to lose packets during an upgrade.
     *
     * @param onPause
     */
    pause(onPause) { }
    createUri(schema, query = {}) {
        return (schema +
            "://" +
            this._hostname() +
            this._port() +
            this.opts.path +
            this._query(query));
    }
    _hostname() {
        const hostname = this.opts.hostname;
        return hostname.indexOf(":") === -1 ? hostname : "[" + hostname + "]";
    }
    _port() {
        if (this.opts.port &&
            ((this.opts.secure && Number(this.opts.port !== 443)) ||
                (!this.opts.secure && Number(this.opts.port) !== 80))) {
            return ":" + this.opts.port;
        }
        else {
            return "";
        }
    }
    _query(query) {
        const encodedQuery = parseqs_encode(query);
        return encodedQuery.length ? "?" + encodedQuery : "";
    }
}

;// ./node_modules/engine.io-client/build/esm/transports/polling.js



class polling_Polling extends Transport {
    constructor() {
        super(...arguments);
        this._polling = false;
    }
    get name() {
        return "polling";
    }
    /**
     * Opens the socket (triggers polling). We write a PING message to determine
     * when the transport is open.
     *
     * @protected
     */
    doOpen() {
        this._poll();
    }
    /**
     * Pauses polling.
     *
     * @param {Function} onPause - callback upon buffers are flushed and transport is paused
     * @package
     */
    pause(onPause) {
        this.readyState = "pausing";
        const pause = () => {
            this.readyState = "paused";
            onPause();
        };
        if (this._polling || !this.writable) {
            let total = 0;
            if (this._polling) {
                total++;
                this.once("pollComplete", function () {
                    --total || pause();
                });
            }
            if (!this.writable) {
                total++;
                this.once("drain", function () {
                    --total || pause();
                });
            }
        }
        else {
            pause();
        }
    }
    /**
     * Starts polling cycle.
     *
     * @private
     */
    _poll() {
        this._polling = true;
        this.doPoll();
        this.emitReserved("poll");
    }
    /**
     * Overloads onData to detect payloads.
     *
     * @protected
     */
    onData(data) {
        const callback = (packet) => {
            // if its the first message we consider the transport open
            if ("opening" === this.readyState && packet.type === "open") {
                this.onOpen();
            }
            // if its a close packet, we close the ongoing requests
            if ("close" === packet.type) {
                this.onClose({ description: "transport closed by the server" });
                return false;
            }
            // otherwise bypass onData and handle the message
            this.onPacket(packet);
        };
        // decode payload
        decodePayload(data, this.socket.binaryType).forEach(callback);
        // if an event did not trigger closing
        if ("closed" !== this.readyState) {
            // if we got data we're not polling
            this._polling = false;
            this.emitReserved("pollComplete");
            if ("open" === this.readyState) {
                this._poll();
            }
            else {
            }
        }
    }
    /**
     * For polling, send a close packet.
     *
     * @protected
     */
    doClose() {
        const close = () => {
            this.write([{ type: "close" }]);
        };
        if ("open" === this.readyState) {
            close();
        }
        else {
            // in case we're trying to close while
            // handshaking is in progress (GH-164)
            this.once("open", close);
        }
    }
    /**
     * Writes a packets payload.
     *
     * @param {Array} packets - data packets
     * @protected
     */
    write(packets) {
        this.writable = false;
        encodePayload(packets, (data) => {
            this.doWrite(data, () => {
                this.writable = true;
                this.emitReserved("drain");
            });
        });
    }
    /**
     * Generates uri for connection.
     *
     * @private
     */
    uri() {
        const schema = this.opts.secure ? "https" : "http";
        const query = this.query || {};
        // cache busting is forced
        if (false !== this.opts.timestampRequests) {
            query[this.opts.timestampParam] = randomString();
        }
        if (!this.supportsBinary && !query.sid) {
            query.b64 = 1;
        }
        return this.createUri(schema, query);
    }
}

;// ./node_modules/engine.io-client/build/esm/contrib/has-cors.js
// imported from https://github.com/component/has-cors
let value = false;
try {
    value = typeof XMLHttpRequest !== 'undefined' &&
        'withCredentials' in new XMLHttpRequest();
}
catch (err) {
    // if XMLHttp support is disabled in IE then it will throw
    // when trying to create
}
const hasCORS = value;

;// ./node_modules/engine.io-client/build/esm/transports/polling-xhr.js





function empty() { }
class BaseXHR extends polling_Polling {
    /**
     * XHR Polling constructor.
     *
     * @param {Object} opts
     * @package
     */
    constructor(opts) {
        super(opts);
        if (typeof location !== "undefined") {
            const isSSL = "https:" === location.protocol;
            let port = location.port;
            // some user agents have empty `location.port`
            if (!port) {
                port = isSSL ? "443" : "80";
            }
            this.xd =
                (typeof location !== "undefined" &&
                    opts.hostname !== location.hostname) ||
                    port !== opts.port;
        }
    }
    /**
     * Sends data.
     *
     * @param {String} data to send.
     * @param {Function} called upon flush.
     * @private
     */
    doWrite(data, fn) {
        const req = this.request({
            method: "POST",
            data: data,
        });
        req.on("success", fn);
        req.on("error", (xhrStatus, context) => {
            this.onError("xhr post error", xhrStatus, context);
        });
    }
    /**
     * Starts a poll cycle.
     *
     * @private
     */
    doPoll() {
        const req = this.request();
        req.on("data", this.onData.bind(this));
        req.on("error", (xhrStatus, context) => {
            this.onError("xhr poll error", xhrStatus, context);
        });
        this.pollXhr = req;
    }
}
class Request extends Emitter {
    /**
     * Request constructor
     *
     * @param {Object} options
     * @package
     */
    constructor(createRequest, uri, opts) {
        super();
        this.createRequest = createRequest;
        installTimerFunctions(this, opts);
        this._opts = opts;
        this._method = opts.method || "GET";
        this._uri = uri;
        this._data = undefined !== opts.data ? opts.data : null;
        this._create();
    }
    /**
     * Creates the XHR object and sends the request.
     *
     * @private
     */
    _create() {
        var _a;
        const opts = pick(this._opts, "agent", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "autoUnref");
        opts.xdomain = !!this._opts.xd;
        const xhr = (this._xhr = this.createRequest(opts));
        try {
            xhr.open(this._method, this._uri, true);
            try {
                if (this._opts.extraHeaders) {
                    // @ts-ignore
                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);
                    for (let i in this._opts.extraHeaders) {
                        if (this._opts.extraHeaders.hasOwnProperty(i)) {
                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);
                        }
                    }
                }
            }
            catch (e) { }
            if ("POST" === this._method) {
                try {
                    xhr.setRequestHeader("Content-type", "text/plain;charset=UTF-8");
                }
                catch (e) { }
            }
            try {
                xhr.setRequestHeader("Accept", "*/*");
            }
            catch (e) { }
            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);
            // ie6 check
            if ("withCredentials" in xhr) {
                xhr.withCredentials = this._opts.withCredentials;
            }
            if (this._opts.requestTimeout) {
                xhr.timeout = this._opts.requestTimeout;
            }
            xhr.onreadystatechange = () => {
                var _a;
                if (xhr.readyState === 3) {
                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(
                    // @ts-ignore
                    xhr.getResponseHeader("set-cookie"));
                }
                if (4 !== xhr.readyState)
                    return;
                if (200 === xhr.status || 1223 === xhr.status) {
                    this._onLoad();
                }
                else {
                    // make sure the `error` event handler that's user-set
                    // does not throw in the same tick and gets caught here
                    this.setTimeoutFn(() => {
                        this._onError(typeof xhr.status === "number" ? xhr.status : 0);
                    }, 0);
                }
            };
            xhr.send(this._data);
        }
        catch (e) {
            // Need to defer since .create() is called directly from the constructor
            // and thus the 'error' event can only be only bound *after* this exception
            // occurs.  Therefore, also, we cannot throw here at all.
            this.setTimeoutFn(() => {
                this._onError(e);
            }, 0);
            return;
        }
        if (typeof document !== "undefined") {
            this._index = Request.requestsCount++;
            Request.requests[this._index] = this;
        }
    }
    /**
     * Called upon error.
     *
     * @private
     */
    _onError(err) {
        this.emitReserved("error", err, this._xhr);
        this._cleanup(true);
    }
    /**
     * Cleans up house.
     *
     * @private
     */
    _cleanup(fromError) {
        if ("undefined" === typeof this._xhr || null === this._xhr) {
            return;
        }
        this._xhr.onreadystatechange = empty;
        if (fromError) {
            try {
                this._xhr.abort();
            }
            catch (e) { }
        }
        if (typeof document !== "undefined") {
            delete Request.requests[this._index];
        }
        this._xhr = null;
    }
    /**
     * Called upon load.
     *
     * @private
     */
    _onLoad() {
        const data = this._xhr.responseText;
        if (data !== null) {
            this.emitReserved("data", data);
            this.emitReserved("success");
            this._cleanup();
        }
    }
    /**
     * Aborts the request.
     *
     * @package
     */
    abort() {
        this._cleanup();
    }
}
Request.requestsCount = 0;
Request.requests = {};
/**
 * Aborts pending requests when unloading the window. This is needed to prevent
 * memory leaks (e.g. when using IE) and to ensure that no spurious error is
 * emitted.
 */
if (typeof document !== "undefined") {
    // @ts-ignore
    if (typeof attachEvent === "function") {
        // @ts-ignore
        attachEvent("onunload", unloadHandler);
    }
    else if (typeof addEventListener === "function") {
        const terminationEvent = "onpagehide" in globalThisShim ? "pagehide" : "unload";
        addEventListener(terminationEvent, unloadHandler, false);
    }
}
function unloadHandler() {
    for (let i in Request.requests) {
        if (Request.requests.hasOwnProperty(i)) {
            Request.requests[i].abort();
        }
    }
}
const hasXHR2 = (function () {
    const xhr = newRequest({
        xdomain: false,
    });
    return xhr && xhr.responseType !== null;
})();
/**
 * HTTP long-polling based on the built-in `XMLHttpRequest` object.
 *
 * Usage: browser
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
 */
class XHR extends BaseXHR {
    constructor(opts) {
        super(opts);
        const forceBase64 = opts && opts.forceBase64;
        this.supportsBinary = hasXHR2 && !forceBase64;
    }
    request(opts = {}) {
        Object.assign(opts, { xd: this.xd }, this.opts);
        return new Request(newRequest, this.uri(), opts);
    }
}
function newRequest(opts) {
    const xdomain = opts.xdomain;
    // XMLHttpRequest can be disabled on IE
    try {
        if ("undefined" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {
            return new XMLHttpRequest();
        }
    }
    catch (e) { }
    if (!xdomain) {
        try {
            return new globalThisShim[["Active"].concat("Object").join("X")]("Microsoft.XMLHTTP");
        }
        catch (e) { }
    }
}

;// ./node_modules/engine.io-client/build/esm/transports/websocket.js




// detect ReactNative environment
const isReactNative = typeof navigator !== "undefined" &&
    typeof navigator.product === "string" &&
    navigator.product.toLowerCase() === "reactnative";
class BaseWS extends Transport {
    get name() {
        return "websocket";
    }
    doOpen() {
        const uri = this.uri();
        const protocols = this.opts.protocols;
        // React Native only supports the 'headers' option, and will print a warning if anything else is passed
        const opts = isReactNative
            ? {}
            : pick(this.opts, "agent", "perMessageDeflate", "pfx", "key", "passphrase", "cert", "ca", "ciphers", "rejectUnauthorized", "localAddress", "protocolVersion", "origin", "maxPayload", "family", "checkServerIdentity");
        if (this.opts.extraHeaders) {
            opts.headers = this.opts.extraHeaders;
        }
        try {
            this.ws = this.createSocket(uri, protocols, opts);
        }
        catch (err) {
            return this.emitReserved("error", err);
        }
        this.ws.binaryType = this.socket.binaryType;
        this.addEventListeners();
    }
    /**
     * Adds event listeners to the socket
     *
     * @private
     */
    addEventListeners() {
        this.ws.onopen = () => {
            if (this.opts.autoUnref) {
                this.ws._socket.unref();
            }
            this.onOpen();
        };
        this.ws.onclose = (closeEvent) => this.onClose({
            description: "websocket connection closed",
            context: closeEvent,
        });
        this.ws.onmessage = (ev) => this.onData(ev.data);
        this.ws.onerror = (e) => this.onError("websocket error", e);
    }
    write(packets) {
        this.writable = false;
        // encodePacket efficient as it uses WS framing
        // no need for encodePayload
        for (let i = 0; i < packets.length; i++) {
            const packet = packets[i];
            const lastPacket = i === packets.length - 1;
            encodePacket(packet, this.supportsBinary, (data) => {
                // Sometimes the websocket has already been closed but the browser didn't
                // have a chance of informing us about it yet, in that case send will
                // throw an error
                try {
                    this.doWrite(packet, data);
                }
                catch (e) {
                }
                if (lastPacket) {
                    // fake drain
                    // defer to next tick to allow Socket to clear writeBuffer
                    nextTick(() => {
                        this.writable = true;
                        this.emitReserved("drain");
                    }, this.setTimeoutFn);
                }
            });
        }
    }
    doClose() {
        if (typeof this.ws !== "undefined") {
            this.ws.onerror = () => { };
            this.ws.close();
            this.ws = null;
        }
    }
    /**
     * Generates uri for connection.
     *
     * @private
     */
    uri() {
        const schema = this.opts.secure ? "wss" : "ws";
        const query = this.query || {};
        // append timestamp to URI
        if (this.opts.timestampRequests) {
            query[this.opts.timestampParam] = randomString();
        }
        // communicate binary support capabilities
        if (!this.supportsBinary) {
            query.b64 = 1;
        }
        return this.createUri(schema, query);
    }
}
const WebSocketCtor = globalThisShim.WebSocket || globalThisShim.MozWebSocket;
/**
 * WebSocket transport based on the built-in `WebSocket` object.
 *
 * Usage: browser, Node.js (since v21), Deno, Bun
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket
 * @see https://caniuse.com/mdn-api_websocket
 * @see https://nodejs.org/api/globals.html#websocket
 */
class WS extends BaseWS {
    createSocket(uri, protocols, opts) {
        return !isReactNative
            ? protocols
                ? new WebSocketCtor(uri, protocols)
                : new WebSocketCtor(uri)
            : new WebSocketCtor(uri, protocols, opts);
    }
    doWrite(_packet, data) {
        this.ws.send(data);
    }
}

;// ./node_modules/engine.io-client/build/esm/transports/webtransport.js



/**
 * WebTransport transport based on the built-in `WebTransport` object.
 *
 * Usage: browser, Node.js (with the `@fails-components/webtransport` package)
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport
 * @see https://caniuse.com/webtransport
 */
class WT extends Transport {
    get name() {
        return "webtransport";
    }
    doOpen() {
        try {
            // @ts-ignore
            this._transport = new WebTransport(this.createUri("https"), this.opts.transportOptions[this.name]);
        }
        catch (err) {
            return this.emitReserved("error", err);
        }
        this._transport.closed
            .then(() => {
            this.onClose();
        })
            .catch((err) => {
            this.onError("webtransport error", err);
        });
        // note: we could have used async/await, but that would require some additional polyfills
        this._transport.ready.then(() => {
            this._transport.createBidirectionalStream().then((stream) => {
                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);
                const reader = stream.readable.pipeThrough(decoderStream).getReader();
                const encoderStream = createPacketEncoderStream();
                encoderStream.readable.pipeTo(stream.writable);
                this._writer = encoderStream.writable.getWriter();
                const read = () => {
                    reader
                        .read()
                        .then(({ done, value }) => {
                        if (done) {
                            return;
                        }
                        this.onPacket(value);
                        read();
                    })
                        .catch((err) => {
                    });
                };
                read();
                const packet = { type: "open" };
                if (this.query.sid) {
                    packet.data = `{"sid":"${this.query.sid}"}`;
                }
                this._writer.write(packet).then(() => this.onOpen());
            });
        });
    }
    write(packets) {
        this.writable = false;
        for (let i = 0; i < packets.length; i++) {
            const packet = packets[i];
            const lastPacket = i === packets.length - 1;
            this._writer.write(packet).then(() => {
                if (lastPacket) {
                    nextTick(() => {
                        this.writable = true;
                        this.emitReserved("drain");
                    }, this.setTimeoutFn);
                }
            });
        }
    }
    doClose() {
        var _a;
        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();
    }
}

;// ./node_modules/engine.io-client/build/esm/transports/index.js



const transports = {
    websocket: WS,
    webtransport: WT,
    polling: XHR,
};

;// ./node_modules/engine.io-client/build/esm/contrib/parseuri.js
// imported from https://github.com/galkn/parseuri
/**
 * Parses a URI
 *
 * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.
 *
 * See:
 * - https://developer.mozilla.org/en-US/docs/Web/API/URL
 * - https://caniuse.com/url
 * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B
 *
 * History of the parse() method:
 * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c
 * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3
 * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242
 *
 * @author Steven Levithan <stevenlevithan.com> (MIT license)
 * @api private
 */
const re = /^(?:(?![^:@\/?#]+:[^:@\/]*@)(http|https|ws|wss):\/\/)?((?:(([^:@\/?#]*)(?::([^:@\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/;
const parts = [
    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'
];
function parse(str) {
    if (str.length > 8000) {
        throw "URI too long";
    }
    const src = str, b = str.indexOf('['), e = str.indexOf(']');
    if (b != -1 && e != -1) {
        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);
    }
    let m = re.exec(str || ''), uri = {}, i = 14;
    while (i--) {
        uri[parts[i]] = m[i] || '';
    }
    if (b != -1 && e != -1) {
        uri.source = src;
        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');
        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');
        uri.ipv6uri = true;
    }
    uri.pathNames = pathNames(uri, uri['path']);
    uri.queryKey = queryKey(uri, uri['query']);
    return uri;
}
function pathNames(obj, path) {
    const regx = /\/{2,9}/g, names = path.replace(regx, "/").split("/");
    if (path.slice(0, 1) == '/' || path.length === 0) {
        names.splice(0, 1);
    }
    if (path.slice(-1) == '/') {
        names.splice(names.length - 1, 1);
    }
    return names;
}
function queryKey(uri, query) {
    const data = {};
    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {
        if ($1) {
            data[$1] = $2;
        }
    });
    return data;
}

;// ./node_modules/engine.io-client/build/esm/socket.js







const withEventListeners = typeof addEventListener === "function" &&
    typeof removeEventListener === "function";
const OFFLINE_EVENT_LISTENERS = [];
if (withEventListeners) {
    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the
    // script, so we create one single event listener here which will forward the event to the socket instances
    addEventListener("offline", () => {
        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());
    }, false);
}
/**
 * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established
 * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.
 *
 * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that
 * successfully establishes the connection.
 *
 * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.
 *
 * @example
 * import { SocketWithoutUpgrade, WebSocket } from "engine.io-client";
 *
 * const socket = new SocketWithoutUpgrade({
 *   transports: [WebSocket]
 * });
 *
 * socket.on("open", () => {
 *   socket.send("hello");
 * });
 *
 * @see SocketWithUpgrade
 * @see Socket
 */
class SocketWithoutUpgrade extends Emitter {
    /**
     * Socket constructor.
     *
     * @param {String|Object} uri - uri or options
     * @param {Object} opts - options
     */
    constructor(uri, opts) {
        super();
        this.binaryType = defaultBinaryType;
        this.writeBuffer = [];
        this._prevBufferLen = 0;
        this._pingInterval = -1;
        this._pingTimeout = -1;
        this._maxPayload = -1;
        /**
         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the
         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.
         */
        this._pingTimeoutTime = Infinity;
        if (uri && "object" === typeof uri) {
            opts = uri;
            uri = null;
        }
        if (uri) {
            const parsedUri = parse(uri);
            opts.hostname = parsedUri.host;
            opts.secure =
                parsedUri.protocol === "https" || parsedUri.protocol === "wss";
            opts.port = parsedUri.port;
            if (parsedUri.query)
                opts.query = parsedUri.query;
        }
        else if (opts.host) {
            opts.hostname = parse(opts.host).host;
        }
        installTimerFunctions(this, opts);
        this.secure =
            null != opts.secure
                ? opts.secure
                : typeof location !== "undefined" && "https:" === location.protocol;
        if (opts.hostname && !opts.port) {
            // if no port is specified manually, use the protocol default
            opts.port = this.secure ? "443" : "80";
        }
        this.hostname =
            opts.hostname ||
                (typeof location !== "undefined" ? location.hostname : "localhost");
        this.port =
            opts.port ||
                (typeof location !== "undefined" && location.port
                    ? location.port
                    : this.secure
                        ? "443"
                        : "80");
        this.transports = [];
        this._transportsByName = {};
        opts.transports.forEach((t) => {
            const transportName = t.prototype.name;
            this.transports.push(transportName);
            this._transportsByName[transportName] = t;
        });
        this.opts = Object.assign({
            path: "/engine.io",
            agent: false,
            withCredentials: false,
            upgrade: true,
            timestampParam: "t",
            rememberUpgrade: false,
            addTrailingSlash: true,
            rejectUnauthorized: true,
            perMessageDeflate: {
                threshold: 1024,
            },
            transportOptions: {},
            closeOnBeforeunload: false,
        }, opts);
        this.opts.path =
            this.opts.path.replace(/\/$/, "") +
                (this.opts.addTrailingSlash ? "/" : "");
        if (typeof this.opts.query === "string") {
            this.opts.query = parseqs_decode(this.opts.query);
        }
        if (withEventListeners) {
            if (this.opts.closeOnBeforeunload) {
                // Firefox closes the connection when the "beforeunload" event is emitted but not Chrome. This event listener
                // ensures every browser behaves the same (no "disconnect" event at the Socket.IO level when the page is
                // closed/reloaded)
                this._beforeunloadEventListener = () => {
                    if (this.transport) {
                        // silently close the transport
                        this.transport.removeAllListeners();
                        this.transport.close();
                    }
                };
                addEventListener("beforeunload", this._beforeunloadEventListener, false);
            }
            if (this.hostname !== "localhost") {
                this._offlineEventListener = () => {
                    this._onClose("transport close", {
                        description: "network connection lost",
                    });
                };
                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);
            }
        }
        if (this.opts.withCredentials) {
            this._cookieJar = createCookieJar();
        }
        this._open();
    }
    /**
     * Creates transport of the given type.
     *
     * @param {String} name - transport name
     * @return {Transport}
     * @private
     */
    createTransport(name) {
        const query = Object.assign({}, this.opts.query);
        // append engine.io protocol identifier
        query.EIO = protocol;
        // transport name
        query.transport = name;
        // session id if we already have one
        if (this.id)
            query.sid = this.id;
        const opts = Object.assign({}, this.opts, {
            query,
            socket: this,
            hostname: this.hostname,
            secure: this.secure,
            port: this.port,
        }, this.opts.transportOptions[name]);
        return new this._transportsByName[name](opts);
    }
    /**
     * Initializes transport to use and starts probe.
     *
     * @private
     */
    _open() {
        if (this.transports.length === 0) {
            // Emit error on next tick so it can be listened to
            this.setTimeoutFn(() => {
                this.emitReserved("error", "No transports available");
            }, 0);
            return;
        }
        const transportName = this.opts.rememberUpgrade &&
            SocketWithoutUpgrade.priorWebsocketSuccess &&
            this.transports.indexOf("websocket") !== -1
            ? "websocket"
            : this.transports[0];
        this.readyState = "opening";
        const transport = this.createTransport(transportName);
        transport.open();
        this.setTransport(transport);
    }
    /**
     * Sets the current transport. Disables the existing one (if any).
     *
     * @private
     */
    setTransport(transport) {
        if (this.transport) {
            this.transport.removeAllListeners();
        }
        // set up transport
        this.transport = transport;
        // set up transport listeners
        transport
            .on("drain", this._onDrain.bind(this))
            .on("packet", this._onPacket.bind(this))
            .on("error", this._onError.bind(this))
            .on("close", (reason) => this._onClose("transport close", reason));
    }
    /**
     * Called when connection is deemed open.
     *
     * @private
     */
    onOpen() {
        this.readyState = "open";
        SocketWithoutUpgrade.priorWebsocketSuccess =
            "websocket" === this.transport.name;
        this.emitReserved("open");
        this.flush();
    }
    /**
     * Handles a packet.
     *
     * @private
     */
    _onPacket(packet) {
        if ("opening" === this.readyState ||
            "open" === this.readyState ||
            "closing" === this.readyState) {
            this.emitReserved("packet", packet);
            // Socket is live - any packet counts
            this.emitReserved("heartbeat");
            switch (packet.type) {
                case "open":
                    this.onHandshake(JSON.parse(packet.data));
                    break;
                case "ping":
                    this._sendPacket("pong");
                    this.emitReserved("ping");
                    this.emitReserved("pong");
                    this._resetPingTimeout();
                    break;
                case "error":
                    const err = new Error("server error");
                    // @ts-ignore
                    err.code = packet.data;
                    this._onError(err);
                    break;
                case "message":
                    this.emitReserved("data", packet.data);
                    this.emitReserved("message", packet.data);
                    break;
            }
        }
        else {
        }
    }
    /**
     * Called upon handshake completion.
     *
     * @param {Object} data - handshake obj
     * @private
     */
    onHandshake(data) {
        this.emitReserved("handshake", data);
        this.id = data.sid;
        this.transport.query.sid = data.sid;
        this._pingInterval = data.pingInterval;
        this._pingTimeout = data.pingTimeout;
        this._maxPayload = data.maxPayload;
        this.onOpen();
        // In case open handler closes socket
        if ("closed" === this.readyState)
            return;
        this._resetPingTimeout();
    }
    /**
     * Sets and resets ping timeout timer based on server pings.
     *
     * @private
     */
    _resetPingTimeout() {
        this.clearTimeoutFn(this._pingTimeoutTimer);
        const delay = this._pingInterval + this._pingTimeout;
        this._pingTimeoutTime = Date.now() + delay;
        this._pingTimeoutTimer = this.setTimeoutFn(() => {
            this._onClose("ping timeout");
        }, delay);
        if (this.opts.autoUnref) {
            this._pingTimeoutTimer.unref();
        }
    }
    /**
     * Called on `drain` event
     *
     * @private
     */
    _onDrain() {
        this.writeBuffer.splice(0, this._prevBufferLen);
        // setting prevBufferLen = 0 is very important
        // for example, when upgrading, upgrade packet is sent over,
        // and a nonzero prevBufferLen could cause problems on `drain`
        this._prevBufferLen = 0;
        if (0 === this.writeBuffer.length) {
            this.emitReserved("drain");
        }
        else {
            this.flush();
        }
    }
    /**
     * Flush write buffers.
     *
     * @private
     */
    flush() {
        if ("closed" !== this.readyState &&
            this.transport.writable &&
            !this.upgrading &&
            this.writeBuffer.length) {
            const packets = this._getWritablePackets();
            this.transport.send(packets);
            // keep track of current length of writeBuffer
            // splice writeBuffer and callbackBuffer on `drain`
            this._prevBufferLen = packets.length;
            this.emitReserved("flush");
        }
    }
    /**
     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP
     * long-polling)
     *
     * @private
     */
    _getWritablePackets() {
        const shouldCheckPayloadSize = this._maxPayload &&
            this.transport.name === "polling" &&
            this.writeBuffer.length > 1;
        if (!shouldCheckPayloadSize) {
            return this.writeBuffer;
        }
        let payloadSize = 1; // first packet type
        for (let i = 0; i < this.writeBuffer.length; i++) {
            const data = this.writeBuffer[i].data;
            if (data) {
                payloadSize += byteLength(data);
            }
            if (i > 0 && payloadSize > this._maxPayload) {
                return this.writeBuffer.slice(0, i);
            }
            payloadSize += 2; // separator + packet type
        }
        return this.writeBuffer;
    }
    /**
     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.
     *
     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the
     * `write()` method then the message would not be buffered by the Socket.IO client.
     *
     * @return {boolean}
     * @private
     */
    /* private */ _hasPingExpired() {
        if (!this._pingTimeoutTime)
            return true;
        const hasExpired = Date.now() > this._pingTimeoutTime;
        if (hasExpired) {
            this._pingTimeoutTime = 0;
            nextTick(() => {
                this._onClose("ping timeout");
            }, this.setTimeoutFn);
        }
        return hasExpired;
    }
    /**
     * Sends a message.
     *
     * @param {String} msg - message.
     * @param {Object} options.
     * @param {Function} fn - callback function.
     * @return {Socket} for chaining.
     */
    write(msg, options, fn) {
        this._sendPacket("message", msg, options, fn);
        return this;
    }
    /**
     * Sends a message. Alias of {@link Socket#write}.
     *
     * @param {String} msg - message.
     * @param {Object} options.
     * @param {Function} fn - callback function.
     * @return {Socket} for chaining.
     */
    send(msg, options, fn) {
        this._sendPacket("message", msg, options, fn);
        return this;
    }
    /**
     * Sends a packet.
     *
     * @param {String} type: packet type.
     * @param {String} data.
     * @param {Object} options.
     * @param {Function} fn - callback function.
     * @private
     */
    _sendPacket(type, data, options, fn) {
        if ("function" === typeof data) {
            fn = data;
            data = undefined;
        }
        if ("function" === typeof options) {
            fn = options;
            options = null;
        }
        if ("closing" === this.readyState || "closed" === this.readyState) {
            return;
        }
        options = options || {};
        options.compress = false !== options.compress;
        const packet = {
            type: type,
            data: data,
            options: options,
        };
        this.emitReserved("packetCreate", packet);
        this.writeBuffer.push(packet);
        if (fn)
            this.once("flush", fn);
        this.flush();
    }
    /**
     * Closes the connection.
     */
    close() {
        const close = () => {
            this._onClose("forced close");
            this.transport.close();
        };
        const cleanupAndClose = () => {
            this.off("upgrade", cleanupAndClose);
            this.off("upgradeError", cleanupAndClose);
            close();
        };
        const waitForUpgrade = () => {
            // wait for upgrade to finish since we can't send packets while pausing a transport
            this.once("upgrade", cleanupAndClose);
            this.once("upgradeError", cleanupAndClose);
        };
        if ("opening" === this.readyState || "open" === this.readyState) {
            this.readyState = "closing";
            if (this.writeBuffer.length) {
                this.once("drain", () => {
                    if (this.upgrading) {
                        waitForUpgrade();
                    }
                    else {
                        close();
                    }
                });
            }
            else if (this.upgrading) {
                waitForUpgrade();
            }
            else {
                close();
            }
        }
        return this;
    }
    /**
     * Called upon transport error
     *
     * @private
     */
    _onError(err) {
        SocketWithoutUpgrade.priorWebsocketSuccess = false;
        if (this.opts.tryAllTransports &&
            this.transports.length > 1 &&
            this.readyState === "opening") {
            this.transports.shift();
            return this._open();
        }
        this.emitReserved("error", err);
        this._onClose("transport error", err);
    }
    /**
     * Called upon transport close.
     *
     * @private
     */
    _onClose(reason, description) {
        if ("opening" === this.readyState ||
            "open" === this.readyState ||
            "closing" === this.readyState) {
            // clear timers
            this.clearTimeoutFn(this._pingTimeoutTimer);
            // stop event from firing again for transport
            this.transport.removeAllListeners("close");
            // ensure transport won't stay open
            this.transport.close();
            // ignore further transport communication
            this.transport.removeAllListeners();
            if (withEventListeners) {
                if (this._beforeunloadEventListener) {
                    removeEventListener("beforeunload", this._beforeunloadEventListener, false);
                }
                if (this._offlineEventListener) {
                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);
                    if (i !== -1) {
                        OFFLINE_EVENT_LISTENERS.splice(i, 1);
                    }
                }
            }
            // set ready state
            this.readyState = "closed";
            // clear session id
            this.id = null;
            // emit close event
            this.emitReserved("close", reason, description);
            // clean buffers after, so users can still
            // grab the buffers on `close` event
            this.writeBuffer = [];
            this._prevBufferLen = 0;
        }
    }
}
SocketWithoutUpgrade.protocol = protocol;
/**
 * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established
 * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.
 *
 * This class comes with an upgrade mechanism, which means that once the connection is established with the first
 * low-level transport, it will try to upgrade to a better transport.
 *
 * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.
 *
 * @example
 * import { SocketWithUpgrade, WebSocket } from "engine.io-client";
 *
 * const socket = new SocketWithUpgrade({
 *   transports: [WebSocket]
 * });
 *
 * socket.on("open", () => {
 *   socket.send("hello");
 * });
 *
 * @see SocketWithoutUpgrade
 * @see Socket
 */
class SocketWithUpgrade extends SocketWithoutUpgrade {
    constructor() {
        super(...arguments);
        this._upgrades = [];
    }
    onOpen() {
        super.onOpen();
        if ("open" === this.readyState && this.opts.upgrade) {
            for (let i = 0; i < this._upgrades.length; i++) {
                this._probe(this._upgrades[i]);
            }
        }
    }
    /**
     * Probes a transport.
     *
     * @param {String} name - transport name
     * @private
     */
    _probe(name) {
        let transport = this.createTransport(name);
        let failed = false;
        SocketWithoutUpgrade.priorWebsocketSuccess = false;
        const onTransportOpen = () => {
            if (failed)
                return;
            transport.send([{ type: "ping", data: "probe" }]);
            transport.once("packet", (msg) => {
                if (failed)
                    return;
                if ("pong" === msg.type && "probe" === msg.data) {
                    this.upgrading = true;
                    this.emitReserved("upgrading", transport);
                    if (!transport)
                        return;
                    SocketWithoutUpgrade.priorWebsocketSuccess =
                        "websocket" === transport.name;
                    this.transport.pause(() => {
                        if (failed)
                            return;
                        if ("closed" === this.readyState)
                            return;
                        cleanup();
                        this.setTransport(transport);
                        transport.send([{ type: "upgrade" }]);
                        this.emitReserved("upgrade", transport);
                        transport = null;
                        this.upgrading = false;
                        this.flush();
                    });
                }
                else {
                    const err = new Error("probe error");
                    // @ts-ignore
                    err.transport = transport.name;
                    this.emitReserved("upgradeError", err);
                }
            });
        };
        function freezeTransport() {
            if (failed)
                return;
            // Any callback called by transport should be ignored since now
            failed = true;
            cleanup();
            transport.close();
            transport = null;
        }
        // Handle any error that happens while probing
        const onerror = (err) => {
            const error = new Error("probe error: " + err);
            // @ts-ignore
            error.transport = transport.name;
            freezeTransport();
            this.emitReserved("upgradeError", error);
        };
        function onTransportClose() {
            onerror("transport closed");
        }
        // When the socket is closed while we're probing
        function onclose() {
            onerror("socket closed");
        }
        // When the socket is upgraded while we're probing
        function onupgrade(to) {
            if (transport && to.name !== transport.name) {
                freezeTransport();
            }
        }
        // Remove all listeners on the transport and on self
        const cleanup = () => {
            transport.removeListener("open", onTransportOpen);
            transport.removeListener("error", onerror);
            transport.removeListener("close", onTransportClose);
            this.off("close", onclose);
            this.off("upgrading", onupgrade);
        };
        transport.once("open", onTransportOpen);
        transport.once("error", onerror);
        transport.once("close", onTransportClose);
        this.once("close", onclose);
        this.once("upgrading", onupgrade);
        if (this._upgrades.indexOf("webtransport") !== -1 &&
            name !== "webtransport") {
            // favor WebTransport
            this.setTimeoutFn(() => {
                if (!failed) {
                    transport.open();
                }
            }, 200);
        }
        else {
            transport.open();
        }
    }
    onHandshake(data) {
        this._upgrades = this._filterUpgrades(data.upgrades);
        super.onHandshake(data);
    }
    /**
     * Filters upgrades, returning only those matching client transports.
     *
     * @param {Array} upgrades - server upgrades
     * @private
     */
    _filterUpgrades(upgrades) {
        const filteredUpgrades = [];
        for (let i = 0; i < upgrades.length; i++) {
            if (~this.transports.indexOf(upgrades[i]))
                filteredUpgrades.push(upgrades[i]);
        }
        return filteredUpgrades;
    }
}
/**
 * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established
 * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.
 *
 * This class comes with an upgrade mechanism, which means that once the connection is established with the first
 * low-level transport, it will try to upgrade to a better transport.
 *
 * @example
 * import { Socket } from "engine.io-client";
 *
 * const socket = new Socket();
 *
 * socket.on("open", () => {
 *   socket.send("hello");
 * });
 *
 * @see SocketWithoutUpgrade
 * @see SocketWithUpgrade
 */
class Socket extends SocketWithUpgrade {
    constructor(uri, opts = {}) {
        const o = typeof uri === "object" ? uri : opts;
        if (!o.transports ||
            (o.transports && typeof o.transports[0] === "string")) {
            o.transports = (o.transports || ["polling", "websocket", "webtransport"])
                .map((transportName) => transports[transportName])
                .filter((t) => !!t);
        }
        super(uri, o);
    }
}

;// ./node_modules/engine.io-client/build/esm/transports/polling-fetch.js

/**
 * HTTP long-polling based on the built-in `fetch()` method.
 *
 * Usage: browser, Node.js (since v18), Deno, Bun
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/API/fetch
 * @see https://caniuse.com/fetch
 * @see https://nodejs.org/api/globals.html#fetch
 */
class Fetch extends (/* unused pure expression or super */ null && (Polling)) {
    doPoll() {
        this._fetch()
            .then((res) => {
            if (!res.ok) {
                return this.onError("fetch read error", res.status, res);
            }
            res.text().then((data) => this.onData(data));
        })
            .catch((err) => {
            this.onError("fetch read error", err);
        });
    }
    doWrite(data, callback) {
        this._fetch(data)
            .then((res) => {
            if (!res.ok) {
                return this.onError("fetch write error", res.status, res);
            }
            callback();
        })
            .catch((err) => {
            this.onError("fetch write error", err);
        });
    }
    _fetch(data) {
        var _a;
        const isPost = data !== undefined;
        const headers = new Headers(this.opts.extraHeaders);
        if (isPost) {
            headers.set("content-type", "text/plain;charset=UTF-8");
        }
        (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.appendCookies(headers);
        return fetch(this.uri(), {
            method: isPost ? "POST" : "GET",
            body: isPost ? data : null,
            headers,
            credentials: this.opts.withCredentials ? "include" : "omit",
        }).then((res) => {
            var _a;
            // @ts-ignore getSetCookie() was added in Node.js v19.7.0
            (_a = this.socket._cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(res.headers.getSetCookie());
            return res;
        });
    }
}

;// ./node_modules/engine.io-client/build/esm/index.js



const esm_protocol = Socket.protocol;












;// ./node_modules/socket.io-client/build/esm/url.js

/**
 * URL parser.
 *
 * @param uri - url
 * @param path - the request path of the connection
 * @param loc - An object meant to mimic window.location.
 *        Defaults to window.location.
 * @public
 */
function url(uri, path = "", loc) {
    let obj = uri;
    // default to window.location
    loc = loc || (typeof location !== "undefined" && location);
    if (null == uri)
        uri = loc.protocol + "//" + loc.host;
    // relative path support
    if (typeof uri === "string") {
        if ("/" === uri.charAt(0)) {
            if ("/" === uri.charAt(1)) {
                uri = loc.protocol + uri;
            }
            else {
                uri = loc.host + uri;
            }
        }
        if (!/^(https?|wss?):\/\//.test(uri)) {
            if ("undefined" !== typeof loc) {
                uri = loc.protocol + "//" + uri;
            }
            else {
                uri = "https://" + uri;
            }
        }
        // parse
        obj = parse(uri);
    }
    // make sure we treat `localhost:80` and `localhost` equally
    if (!obj.port) {
        if (/^(http|ws)$/.test(obj.protocol)) {
            obj.port = "80";
        }
        else if (/^(http|ws)s$/.test(obj.protocol)) {
            obj.port = "443";
        }
    }
    obj.path = obj.path || "/";
    const ipv6 = obj.host.indexOf(":") !== -1;
    const host = ipv6 ? "[" + obj.host + "]" : obj.host;
    // define unique id
    obj.id = obj.protocol + "://" + host + ":" + obj.port + path;
    // define href
    obj.href =
        obj.protocol +
            "://" +
            host +
            (loc && loc.port === obj.port ? "" : ":" + obj.port);
    return obj;
}

;// ./node_modules/socket.io-parser/build/esm/is-binary.js
const is_binary_withNativeArrayBuffer = typeof ArrayBuffer === "function";
const is_binary_isView = (obj) => {
    return typeof ArrayBuffer.isView === "function"
        ? ArrayBuffer.isView(obj)
        : obj.buffer instanceof ArrayBuffer;
};
const is_binary_toString = Object.prototype.toString;
const is_binary_withNativeBlob = typeof Blob === "function" ||
    (typeof Blob !== "undefined" &&
        is_binary_toString.call(Blob) === "[object BlobConstructor]");
const withNativeFile = typeof File === "function" ||
    (typeof File !== "undefined" &&
        is_binary_toString.call(File) === "[object FileConstructor]");
/**
 * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.
 *
 * @private
 */
function isBinary(obj) {
    return ((is_binary_withNativeArrayBuffer && (obj instanceof ArrayBuffer || is_binary_isView(obj))) ||
        (is_binary_withNativeBlob && obj instanceof Blob) ||
        (withNativeFile && obj instanceof File));
}
function hasBinary(obj, toJSON) {
    if (!obj || typeof obj !== "object") {
        return false;
    }
    if (Array.isArray(obj)) {
        for (let i = 0, l = obj.length; i < l; i++) {
            if (hasBinary(obj[i])) {
                return true;
            }
        }
        return false;
    }
    if (isBinary(obj)) {
        return true;
    }
    if (obj.toJSON &&
        typeof obj.toJSON === "function" &&
        arguments.length === 1) {
        return hasBinary(obj.toJSON(), true);
    }
    for (const key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {
            return true;
        }
    }
    return false;
}

;// ./node_modules/socket.io-parser/build/esm/binary.js

/**
 * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.
 *
 * @param {Object} packet - socket.io event packet
 * @return {Object} with deconstructed packet and list of buffers
 * @public
 */
function deconstructPacket(packet) {
    const buffers = [];
    const packetData = packet.data;
    const pack = packet;
    pack.data = _deconstructPacket(packetData, buffers);
    pack.attachments = buffers.length; // number of binary 'attachments'
    return { packet: pack, buffers: buffers };
}
function _deconstructPacket(data, buffers) {
    if (!data)
        return data;
    if (isBinary(data)) {
        const placeholder = { _placeholder: true, num: buffers.length };
        buffers.push(data);
        return placeholder;
    }
    else if (Array.isArray(data)) {
        const newData = new Array(data.length);
        for (let i = 0; i < data.length; i++) {
            newData[i] = _deconstructPacket(data[i], buffers);
        }
        return newData;
    }
    else if (typeof data === "object" && !(data instanceof Date)) {
        const newData = {};
        for (const key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key)) {
                newData[key] = _deconstructPacket(data[key], buffers);
            }
        }
        return newData;
    }
    return data;
}
/**
 * Reconstructs a binary packet from its placeholder packet and buffers
 *
 * @param {Object} packet - event packet with placeholders
 * @param {Array} buffers - binary buffers to put in placeholder positions
 * @return {Object} reconstructed packet
 * @public
 */
function reconstructPacket(packet, buffers) {
    packet.data = _reconstructPacket(packet.data, buffers);
    delete packet.attachments; // no longer useful
    return packet;
}
function _reconstructPacket(data, buffers) {
    if (!data)
        return data;
    if (data && data._placeholder === true) {
        const isIndexValid = typeof data.num === "number" &&
            data.num >= 0 &&
            data.num < buffers.length;
        if (isIndexValid) {
            return buffers[data.num]; // appropriate buffer (should be natural order anyway)
        }
        else {
            throw new Error("illegal attachments");
        }
    }
    else if (Array.isArray(data)) {
        for (let i = 0; i < data.length; i++) {
            data[i] = _reconstructPacket(data[i], buffers);
        }
    }
    else if (typeof data === "object") {
        for (const key in data) {
            if (Object.prototype.hasOwnProperty.call(data, key)) {
                data[key] = _reconstructPacket(data[key], buffers);
            }
        }
    }
    return data;
}

;// ./node_modules/socket.io-parser/build/esm/index.js



/**
 * These strings must not be used as event names, as they have a special meaning.
 */
const RESERVED_EVENTS = [
    "connect",
    "connect_error",
    "disconnect",
    "disconnecting",
    "newListener",
    "removeListener", // used by the Node.js EventEmitter
];
/**
 * Protocol version.
 *
 * @public
 */
const build_esm_protocol = 5;
var PacketType;
(function (PacketType) {
    PacketType[PacketType["CONNECT"] = 0] = "CONNECT";
    PacketType[PacketType["DISCONNECT"] = 1] = "DISCONNECT";
    PacketType[PacketType["EVENT"] = 2] = "EVENT";
    PacketType[PacketType["ACK"] = 3] = "ACK";
    PacketType[PacketType["CONNECT_ERROR"] = 4] = "CONNECT_ERROR";
    PacketType[PacketType["BINARY_EVENT"] = 5] = "BINARY_EVENT";
    PacketType[PacketType["BINARY_ACK"] = 6] = "BINARY_ACK";
})(PacketType || (PacketType = {}));
/**
 * A socket.io Encoder instance
 */
class Encoder {
    /**
     * Encoder constructor
     *
     * @param {function} replacer - custom replacer to pass down to JSON.parse
     */
    constructor(replacer) {
        this.replacer = replacer;
    }
    /**
     * Encode a packet as a single string if non-binary, or as a
     * buffer sequence, depending on packet type.
     *
     * @param {Object} obj - packet object
     */
    encode(obj) {
        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {
            if (hasBinary(obj)) {
                return this.encodeAsBinary({
                    type: obj.type === PacketType.EVENT
                        ? PacketType.BINARY_EVENT
                        : PacketType.BINARY_ACK,
                    nsp: obj.nsp,
                    data: obj.data,
                    id: obj.id,
                });
            }
        }
        return [this.encodeAsString(obj)];
    }
    /**
     * Encode packet as string.
     */
    encodeAsString(obj) {
        // first is type
        let str = "" + obj.type;
        // attachments if we have them
        if (obj.type === PacketType.BINARY_EVENT ||
            obj.type === PacketType.BINARY_ACK) {
            str += obj.attachments + "-";
        }
        // if we have a namespace other than `/`
        // we append it followed by a comma `,`
        if (obj.nsp && "/" !== obj.nsp) {
            str += obj.nsp + ",";
        }
        // immediately followed by the id
        if (null != obj.id) {
            str += obj.id;
        }
        // json data
        if (null != obj.data) {
            str += JSON.stringify(obj.data, this.replacer);
        }
        return str;
    }
    /**
     * Encode packet as 'buffer sequence' by removing blobs, and
     * deconstructing packet into object with placeholders and
     * a list of buffers.
     */
    encodeAsBinary(obj) {
        const deconstruction = deconstructPacket(obj);
        const pack = this.encodeAsString(deconstruction.packet);
        const buffers = deconstruction.buffers;
        buffers.unshift(pack); // add packet info to beginning of data list
        return buffers; // write all the buffers
    }
}
// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript
function isObject(value) {
    return Object.prototype.toString.call(value) === "[object Object]";
}
/**
 * A socket.io Decoder instance
 *
 * @return {Object} decoder
 */
class Decoder extends Emitter {
    /**
     * Decoder constructor
     *
     * @param {function} reviver - custom reviver to pass down to JSON.stringify
     */
    constructor(reviver) {
        super();
        this.reviver = reviver;
    }
    /**
     * Decodes an encoded packet string into packet JSON.
     *
     * @param {String} obj - encoded packet
     */
    add(obj) {
        let packet;
        if (typeof obj === "string") {
            if (this.reconstructor) {
                throw new Error("got plaintext data when reconstructing a packet");
            }
            packet = this.decodeString(obj);
            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;
            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {
                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;
                // binary packet's json
                this.reconstructor = new BinaryReconstructor(packet);
                // no attachments, labeled binary but no binary data to follow
                if (packet.attachments === 0) {
                    super.emitReserved("decoded", packet);
                }
            }
            else {
                // non-binary full packet
                super.emitReserved("decoded", packet);
            }
        }
        else if (isBinary(obj) || obj.base64) {
            // raw binary data
            if (!this.reconstructor) {
                throw new Error("got binary data when not reconstructing a packet");
            }
            else {
                packet = this.reconstructor.takeBinaryData(obj);
                if (packet) {
                    // received final buffer
                    this.reconstructor = null;
                    super.emitReserved("decoded", packet);
                }
            }
        }
        else {
            throw new Error("Unknown type: " + obj);
        }
    }
    /**
     * Decode a packet String (JSON data)
     *
     * @param {String} str
     * @return {Object} packet
     */
    decodeString(str) {
        let i = 0;
        // look up type
        const p = {
            type: Number(str.charAt(0)),
        };
        if (PacketType[p.type] === undefined) {
            throw new Error("unknown packet type " + p.type);
        }
        // look up attachments if type binary
        if (p.type === PacketType.BINARY_EVENT ||
            p.type === PacketType.BINARY_ACK) {
            const start = i + 1;
            while (str.charAt(++i) !== "-" && i != str.length) { }
            const buf = str.substring(start, i);
            if (buf != Number(buf) || str.charAt(i) !== "-") {
                throw new Error("Illegal attachments");
            }
            p.attachments = Number(buf);
        }
        // look up namespace (if any)
        if ("/" === str.charAt(i + 1)) {
            const start = i + 1;
            while (++i) {
                const c = str.charAt(i);
                if ("," === c)
                    break;
                if (i === str.length)
                    break;
            }
            p.nsp = str.substring(start, i);
        }
        else {
            p.nsp = "/";
        }
        // look up id
        const next = str.charAt(i + 1);
        if ("" !== next && Number(next) == next) {
            const start = i + 1;
            while (++i) {
                const c = str.charAt(i);
                if (null == c || Number(c) != c) {
                    --i;
                    break;
                }
                if (i === str.length)
                    break;
            }
            p.id = Number(str.substring(start, i + 1));
        }
        // look up json data
        if (str.charAt(++i)) {
            const payload = this.tryParse(str.substr(i));
            if (Decoder.isPayloadValid(p.type, payload)) {
                p.data = payload;
            }
            else {
                throw new Error("invalid payload");
            }
        }
        return p;
    }
    tryParse(str) {
        try {
            return JSON.parse(str, this.reviver);
        }
        catch (e) {
            return false;
        }
    }
    static isPayloadValid(type, payload) {
        switch (type) {
            case PacketType.CONNECT:
                return isObject(payload);
            case PacketType.DISCONNECT:
                return payload === undefined;
            case PacketType.CONNECT_ERROR:
                return typeof payload === "string" || isObject(payload);
            case PacketType.EVENT:
            case PacketType.BINARY_EVENT:
                return (Array.isArray(payload) &&
                    (typeof payload[0] === "number" ||
                        (typeof payload[0] === "string" &&
                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));
            case PacketType.ACK:
            case PacketType.BINARY_ACK:
                return Array.isArray(payload);
        }
    }
    /**
     * Deallocates a parser's resources
     */
    destroy() {
        if (this.reconstructor) {
            this.reconstructor.finishedReconstruction();
            this.reconstructor = null;
        }
    }
}
/**
 * A manager of a binary event's 'buffer sequence'. Should
 * be constructed whenever a packet of type BINARY_EVENT is
 * decoded.
 *
 * @param {Object} packet
 * @return {BinaryReconstructor} initialized reconstructor
 */
class BinaryReconstructor {
    constructor(packet) {
        this.packet = packet;
        this.buffers = [];
        this.reconPack = packet;
    }
    /**
     * Method to be called when binary data received from connection
     * after a BINARY_EVENT packet.
     *
     * @param {Buffer | ArrayBuffer} binData - the raw binary data received
     * @return {null | Object} returns null if more binary data is expected or
     *   a reconstructed packet object if all buffers have been received.
     */
    takeBinaryData(binData) {
        this.buffers.push(binData);
        if (this.buffers.length === this.reconPack.attachments) {
            // done with buffer list
            const packet = reconstructPacket(this.reconPack, this.buffers);
            this.finishedReconstruction();
            return packet;
        }
        return null;
    }
    /**
     * Cleans up binary packet reconstruction variables.
     */
    finishedReconstruction() {
        this.reconPack = null;
        this.buffers = [];
    }
}

;// ./node_modules/socket.io-client/build/esm/on.js
function on(obj, ev, fn) {
    obj.on(ev, fn);
    return function subDestroy() {
        obj.off(ev, fn);
    };
}

;// ./node_modules/socket.io-client/build/esm/socket.js



/**
 * Internal events.
 * These events can't be emitted by the user.
 */
const socket_RESERVED_EVENTS = Object.freeze({
    connect: 1,
    connect_error: 1,
    disconnect: 1,
    disconnecting: 1,
    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener
    newListener: 1,
    removeListener: 1,
});
/**
 * A Socket is the fundamental class for interacting with the server.
 *
 * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.
 *
 * @example
 * const socket = io();
 *
 * socket.on("connect", () => {
 *   console.log("connected");
 * });
 *
 * // send an event to the server
 * socket.emit("foo", "bar");
 *
 * socket.on("foobar", () => {
 *   // an event was received from the server
 * });
 *
 * // upon disconnection
 * socket.on("disconnect", (reason) => {
 *   console.log(`disconnected due to ${reason}`);
 * });
 */
class socket_Socket extends Emitter {
    /**
     * `Socket` constructor.
     */
    constructor(io, nsp, opts) {
        super();
        /**
         * Whether the socket is currently connected to the server.
         *
         * @example
         * const socket = io();
         *
         * socket.on("connect", () => {
         *   console.log(socket.connected); // true
         * });
         *
         * socket.on("disconnect", () => {
         *   console.log(socket.connected); // false
         * });
         */
        this.connected = false;
        /**
         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will
         * be transmitted by the server.
         */
        this.recovered = false;
        /**
         * Buffer for packets received before the CONNECT packet
         */
        this.receiveBuffer = [];
        /**
         * Buffer for packets that will be sent once the socket is connected
         */
        this.sendBuffer = [];
        /**
         * The queue of packets to be sent with retry in case of failure.
         *
         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.
         * @private
         */
        this._queue = [];
        /**
         * A sequence to generate the ID of the {@link QueuedPacket}.
         * @private
         */
        this._queueSeq = 0;
        this.ids = 0;
        /**
         * A map containing acknowledgement handlers.
         *
         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:
         *
         * - `socket.emit("test", (err, value) => { ... })` with `ackTimeout` option
         * - `socket.timeout(5000).emit("test", (err, value) => { ... })`
         * - `const value = await socket.emitWithAck("test")`
         *
         * From those that don't:
         *
         * - `socket.emit("test", (value) => { ... });`
         *
         * In the first case, the handlers will be called with an error when:
         *
         * - the timeout is reached
         * - the socket gets disconnected
         *
         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive
         * an acknowledgement from the server.
         *
         * @private
         */
        this.acks = {};
        this.flags = {};
        this.io = io;
        this.nsp = nsp;
        if (opts && opts.auth) {
            this.auth = opts.auth;
        }
        this._opts = Object.assign({}, opts);
        if (this.io._autoConnect)
            this.open();
    }
    /**
     * Whether the socket is currently disconnected
     *
     * @example
     * const socket = io();
     *
     * socket.on("connect", () => {
     *   console.log(socket.disconnected); // false
     * });
     *
     * socket.on("disconnect", () => {
     *   console.log(socket.disconnected); // true
     * });
     */
    get disconnected() {
        return !this.connected;
    }
    /**
     * Subscribe to open, close and packet events
     *
     * @private
     */
    subEvents() {
        if (this.subs)
            return;
        const io = this.io;
        this.subs = [
            on(io, "open", this.onopen.bind(this)),
            on(io, "packet", this.onpacket.bind(this)),
            on(io, "error", this.onerror.bind(this)),
            on(io, "close", this.onclose.bind(this)),
        ];
    }
    /**
     * Whether the Socket will try to reconnect when its Manager connects or reconnects.
     *
     * @example
     * const socket = io();
     *
     * console.log(socket.active); // true
     *
     * socket.on("disconnect", (reason) => {
     *   if (reason === "io server disconnect") {
     *     // the disconnection was initiated by the server, you need to manually reconnect
     *     console.log(socket.active); // false
     *   }
     *   // else the socket will automatically try to reconnect
     *   console.log(socket.active); // true
     * });
     */
    get active() {
        return !!this.subs;
    }
    /**
     * "Opens" the socket.
     *
     * @example
     * const socket = io({
     *   autoConnect: false
     * });
     *
     * socket.connect();
     */
    connect() {
        if (this.connected)
            return this;
        this.subEvents();
        if (!this.io["_reconnecting"])
            this.io.open(); // ensure open
        if ("open" === this.io._readyState)
            this.onopen();
        return this;
    }
    /**
     * Alias for {@link connect()}.
     */
    open() {
        return this.connect();
    }
    /**
     * Sends a `message` event.
     *
     * This method mimics the WebSocket.send() method.
     *
     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send
     *
     * @example
     * socket.send("hello");
     *
     * // this is equivalent to
     * socket.emit("message", "hello");
     *
     * @return self
     */
    send(...args) {
        args.unshift("message");
        this.emit.apply(this, args);
        return this;
    }
    /**
     * Override `emit`.
     * If the event is in `events`, it's emitted normally.
     *
     * @example
     * socket.emit("hello", "world");
     *
     * // all serializable datastructures are supported (no need to call JSON.stringify)
     * socket.emit("hello", 1, "2", { 3: ["4"], 5: Uint8Array.from([6]) });
     *
     * // with an acknowledgement from the server
     * socket.emit("hello", "world", (val) => {
     *   // ...
     * });
     *
     * @return self
     */
    emit(ev, ...args) {
        var _a, _b, _c;
        if (socket_RESERVED_EVENTS.hasOwnProperty(ev)) {
            throw new Error('"' + ev.toString() + '" is a reserved event name');
        }
        args.unshift(ev);
        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {
            this._addToQueue(args);
            return this;
        }
        const packet = {
            type: PacketType.EVENT,
            data: args,
        };
        packet.options = {};
        packet.options.compress = this.flags.compress !== false;
        // event ack callback
        if ("function" === typeof args[args.length - 1]) {
            const id = this.ids++;
            const ack = args.pop();
            this._registerAckCallback(id, ack);
            packet.id = id;
        }
        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;
        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());
        const discardPacket = this.flags.volatile && !isTransportWritable;
        if (discardPacket) {
        }
        else if (isConnected) {
            this.notifyOutgoingListeners(packet);
            this.packet(packet);
        }
        else {
            this.sendBuffer.push(packet);
        }
        this.flags = {};
        return this;
    }
    /**
     * @private
     */
    _registerAckCallback(id, ack) {
        var _a;
        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;
        if (timeout === undefined) {
            this.acks[id] = ack;
            return;
        }
        // @ts-ignore
        const timer = this.io.setTimeoutFn(() => {
            delete this.acks[id];
            for (let i = 0; i < this.sendBuffer.length; i++) {
                if (this.sendBuffer[i].id === id) {
                    this.sendBuffer.splice(i, 1);
                }
            }
            ack.call(this, new Error("operation has timed out"));
        }, timeout);
        const fn = (...args) => {
            // @ts-ignore
            this.io.clearTimeoutFn(timer);
            ack.apply(this, args);
        };
        fn.withError = true;
        this.acks[id] = fn;
    }
    /**
     * Emits an event and waits for an acknowledgement
     *
     * @example
     * // without timeout
     * const response = await socket.emitWithAck("hello", "world");
     *
     * // with a specific timeout
     * try {
     *   const response = await socket.timeout(1000).emitWithAck("hello", "world");
     * } catch (err) {
     *   // the server did not acknowledge the event in the given delay
     * }
     *
     * @return a Promise that will be fulfilled when the server acknowledges the event
     */
    emitWithAck(ev, ...args) {
        return new Promise((resolve, reject) => {
            const fn = (arg1, arg2) => {
                return arg1 ? reject(arg1) : resolve(arg2);
            };
            fn.withError = true;
            args.push(fn);
            this.emit(ev, ...args);
        });
    }
    /**
     * Add the packet to the queue.
     * @param args
     * @private
     */
    _addToQueue(args) {
        let ack;
        if (typeof args[args.length - 1] === "function") {
            ack = args.pop();
        }
        const packet = {
            id: this._queueSeq++,
            tryCount: 0,
            pending: false,
            args,
            flags: Object.assign({ fromQueue: true }, this.flags),
        };
        args.push((err, ...responseArgs) => {
            if (packet !== this._queue[0]) {
                // the packet has already been acknowledged
                return;
            }
            const hasError = err !== null;
            if (hasError) {
                if (packet.tryCount > this._opts.retries) {
                    this._queue.shift();
                    if (ack) {
                        ack(err);
                    }
                }
            }
            else {
                this._queue.shift();
                if (ack) {
                    ack(null, ...responseArgs);
                }
            }
            packet.pending = false;
            return this._drainQueue();
        });
        this._queue.push(packet);
        this._drainQueue();
    }
    /**
     * Send the first packet of the queue, and wait for an acknowledgement from the server.
     * @param force - whether to resend a packet that has not been acknowledged yet
     *
     * @private
     */
    _drainQueue(force = false) {
        if (!this.connected || this._queue.length === 0) {
            return;
        }
        const packet = this._queue[0];
        if (packet.pending && !force) {
            return;
        }
        packet.pending = true;
        packet.tryCount++;
        this.flags = packet.flags;
        this.emit.apply(this, packet.args);
    }
    /**
     * Sends a packet.
     *
     * @param packet
     * @private
     */
    packet(packet) {
        packet.nsp = this.nsp;
        this.io._packet(packet);
    }
    /**
     * Called upon engine `open`.
     *
     * @private
     */
    onopen() {
        if (typeof this.auth == "function") {
            this.auth((data) => {
                this._sendConnectPacket(data);
            });
        }
        else {
            this._sendConnectPacket(this.auth);
        }
    }
    /**
     * Sends a CONNECT packet to initiate the Socket.IO session.
     *
     * @param data
     * @private
     */
    _sendConnectPacket(data) {
        this.packet({
            type: PacketType.CONNECT,
            data: this._pid
                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)
                : data,
        });
    }
    /**
     * Called upon engine or manager `error`.
     *
     * @param err
     * @private
     */
    onerror(err) {
        if (!this.connected) {
            this.emitReserved("connect_error", err);
        }
    }
    /**
     * Called upon engine `close`.
     *
     * @param reason
     * @param description
     * @private
     */
    onclose(reason, description) {
        this.connected = false;
        delete this.id;
        this.emitReserved("disconnect", reason, description);
        this._clearAcks();
    }
    /**
     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from
     * the server.
     *
     * @private
     */
    _clearAcks() {
        Object.keys(this.acks).forEach((id) => {
            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);
            if (!isBuffered) {
                // note: handlers that do not accept an error as first argument are ignored here
                const ack = this.acks[id];
                delete this.acks[id];
                if (ack.withError) {
                    ack.call(this, new Error("socket has been disconnected"));
                }
            }
        });
    }
    /**
     * Called with socket packet.
     *
     * @param packet
     * @private
     */
    onpacket(packet) {
        const sameNamespace = packet.nsp === this.nsp;
        if (!sameNamespace)
            return;
        switch (packet.type) {
            case PacketType.CONNECT:
                if (packet.data && packet.data.sid) {
                    this.onconnect(packet.data.sid, packet.data.pid);
                }
                else {
                    this.emitReserved("connect_error", new Error("It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)"));
                }
                break;
            case PacketType.EVENT:
            case PacketType.BINARY_EVENT:
                this.onevent(packet);
                break;
            case PacketType.ACK:
            case PacketType.BINARY_ACK:
                this.onack(packet);
                break;
            case PacketType.DISCONNECT:
                this.ondisconnect();
                break;
            case PacketType.CONNECT_ERROR:
                this.destroy();
                const err = new Error(packet.data.message);
                // @ts-ignore
                err.data = packet.data.data;
                this.emitReserved("connect_error", err);
                break;
        }
    }
    /**
     * Called upon a server event.
     *
     * @param packet
     * @private
     */
    onevent(packet) {
        const args = packet.data || [];
        if (null != packet.id) {
            args.push(this.ack(packet.id));
        }
        if (this.connected) {
            this.emitEvent(args);
        }
        else {
            this.receiveBuffer.push(Object.freeze(args));
        }
    }
    emitEvent(args) {
        if (this._anyListeners && this._anyListeners.length) {
            const listeners = this._anyListeners.slice();
            for (const listener of listeners) {
                listener.apply(this, args);
            }
        }
        super.emit.apply(this, args);
        if (this._pid && args.length && typeof args[args.length - 1] === "string") {
            this._lastOffset = args[args.length - 1];
        }
    }
    /**
     * Produces an ack callback to emit with an event.
     *
     * @private
     */
    ack(id) {
        const self = this;
        let sent = false;
        return function (...args) {
            // prevent double callbacks
            if (sent)
                return;
            sent = true;
            self.packet({
                type: PacketType.ACK,
                id: id,
                data: args,
            });
        };
    }
    /**
     * Called upon a server acknowledgement.
     *
     * @param packet
     * @private
     */
    onack(packet) {
        const ack = this.acks[packet.id];
        if (typeof ack !== "function") {
            return;
        }
        delete this.acks[packet.id];
        // @ts-ignore FIXME ack is incorrectly inferred as 'never'
        if (ack.withError) {
            packet.data.unshift(null);
        }
        // @ts-ignore
        ack.apply(this, packet.data);
    }
    /**
     * Called upon server connect.
     *
     * @private
     */
    onconnect(id, pid) {
        this.id = id;
        this.recovered = pid && this._pid === pid;
        this._pid = pid; // defined only if connection state recovery is enabled
        this.connected = true;
        this.emitBuffered();
        this.emitReserved("connect");
        this._drainQueue(true);
    }
    /**
     * Emit buffered events (received and emitted).
     *
     * @private
     */
    emitBuffered() {
        this.receiveBuffer.forEach((args) => this.emitEvent(args));
        this.receiveBuffer = [];
        this.sendBuffer.forEach((packet) => {
            this.notifyOutgoingListeners(packet);
            this.packet(packet);
        });
        this.sendBuffer = [];
    }
    /**
     * Called upon server disconnect.
     *
     * @private
     */
    ondisconnect() {
        this.destroy();
        this.onclose("io server disconnect");
    }
    /**
     * Called upon forced client/server side disconnections,
     * this method ensures the manager stops tracking us and
     * that reconnections don't get triggered for this.
     *
     * @private
     */
    destroy() {
        if (this.subs) {
            // clean subscriptions to avoid reconnections
            this.subs.forEach((subDestroy) => subDestroy());
            this.subs = undefined;
        }
        this.io["_destroy"](this);
    }
    /**
     * Disconnects the socket manually. In that case, the socket will not try to reconnect.
     *
     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.
     *
     * @example
     * const socket = io();
     *
     * socket.on("disconnect", (reason) => {
     *   // console.log(reason); prints "io client disconnect"
     * });
     *
     * socket.disconnect();
     *
     * @return self
     */
    disconnect() {
        if (this.connected) {
            this.packet({ type: PacketType.DISCONNECT });
        }
        // remove socket from pool
        this.destroy();
        if (this.connected) {
            // fire events
            this.onclose("io client disconnect");
        }
        return this;
    }
    /**
     * Alias for {@link disconnect()}.
     *
     * @return self
     */
    close() {
        return this.disconnect();
    }
    /**
     * Sets the compress flag.
     *
     * @example
     * socket.compress(false).emit("hello");
     *
     * @param compress - if `true`, compresses the sending data
     * @return self
     */
    compress(compress) {
        this.flags.compress = compress;
        return this;
    }
    /**
     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not
     * ready to send messages.
     *
     * @example
     * socket.volatile.emit("hello"); // the server may or may not receive it
     *
     * @returns self
     */
    get volatile() {
        this.flags.volatile = true;
        return this;
    }
    /**
     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the
     * given number of milliseconds have elapsed without an acknowledgement from the server:
     *
     * @example
     * socket.timeout(5000).emit("my-event", (err) => {
     *   if (err) {
     *     // the server did not acknowledge the event in the given delay
     *   }
     * });
     *
     * @returns self
     */
    timeout(timeout) {
        this.flags.timeout = timeout;
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback.
     *
     * @example
     * socket.onAny((event, ...args) => {
     *   console.log(`got ${event}`);
     * });
     *
     * @param listener
     */
    onAny(listener) {
        this._anyListeners = this._anyListeners || [];
        this._anyListeners.push(listener);
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback. The listener is added to the beginning of the listeners array.
     *
     * @example
     * socket.prependAny((event, ...args) => {
     *   console.log(`got event ${event}`);
     * });
     *
     * @param listener
     */
    prependAny(listener) {
        this._anyListeners = this._anyListeners || [];
        this._anyListeners.unshift(listener);
        return this;
    }
    /**
     * Removes the listener that will be fired when any event is emitted.
     *
     * @example
     * const catchAllListener = (event, ...args) => {
     *   console.log(`got event ${event}`);
     * }
     *
     * socket.onAny(catchAllListener);
     *
     * // remove a specific listener
     * socket.offAny(catchAllListener);
     *
     * // or remove all listeners
     * socket.offAny();
     *
     * @param listener
     */
    offAny(listener) {
        if (!this._anyListeners) {
            return this;
        }
        if (listener) {
            const listeners = this._anyListeners;
            for (let i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                    listeners.splice(i, 1);
                    return this;
                }
            }
        }
        else {
            this._anyListeners = [];
        }
        return this;
    }
    /**
     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
     * e.g. to remove listeners.
     */
    listenersAny() {
        return this._anyListeners || [];
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback.
     *
     * Note: acknowledgements sent to the server are not included.
     *
     * @example
     * socket.onAnyOutgoing((event, ...args) => {
     *   console.log(`sent event ${event}`);
     * });
     *
     * @param listener
     */
    onAnyOutgoing(listener) {
        this._anyOutgoingListeners = this._anyOutgoingListeners || [];
        this._anyOutgoingListeners.push(listener);
        return this;
    }
    /**
     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the
     * callback. The listener is added to the beginning of the listeners array.
     *
     * Note: acknowledgements sent to the server are not included.
     *
     * @example
     * socket.prependAnyOutgoing((event, ...args) => {
     *   console.log(`sent event ${event}`);
     * });
     *
     * @param listener
     */
    prependAnyOutgoing(listener) {
        this._anyOutgoingListeners = this._anyOutgoingListeners || [];
        this._anyOutgoingListeners.unshift(listener);
        return this;
    }
    /**
     * Removes the listener that will be fired when any event is emitted.
     *
     * @example
     * const catchAllListener = (event, ...args) => {
     *   console.log(`sent event ${event}`);
     * }
     *
     * socket.onAnyOutgoing(catchAllListener);
     *
     * // remove a specific listener
     * socket.offAnyOutgoing(catchAllListener);
     *
     * // or remove all listeners
     * socket.offAnyOutgoing();
     *
     * @param [listener] - the catch-all listener (optional)
     */
    offAnyOutgoing(listener) {
        if (!this._anyOutgoingListeners) {
            return this;
        }
        if (listener) {
            const listeners = this._anyOutgoingListeners;
            for (let i = 0; i < listeners.length; i++) {
                if (listener === listeners[i]) {
                    listeners.splice(i, 1);
                    return this;
                }
            }
        }
        else {
            this._anyOutgoingListeners = [];
        }
        return this;
    }
    /**
     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,
     * e.g. to remove listeners.
     */
    listenersAnyOutgoing() {
        return this._anyOutgoingListeners || [];
    }
    /**
     * Notify the listeners for each packet sent
     *
     * @param packet
     *
     * @private
     */
    notifyOutgoingListeners(packet) {
        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {
            const listeners = this._anyOutgoingListeners.slice();
            for (const listener of listeners) {
                listener.apply(this, packet.data);
            }
        }
    }
}

;// ./node_modules/socket.io-client/build/esm/contrib/backo2.js
/**
 * Initialize backoff timer with `opts`.
 *
 * - `min` initial timeout in milliseconds [100]
 * - `max` max timeout [10000]
 * - `jitter` [0]
 * - `factor` [2]
 *
 * @param {Object} opts
 * @api public
 */
function Backoff(opts) {
    opts = opts || {};
    this.ms = opts.min || 100;
    this.max = opts.max || 10000;
    this.factor = opts.factor || 2;
    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;
    this.attempts = 0;
}
/**
 * Return the backoff duration.
 *
 * @return {Number}
 * @api public
 */
Backoff.prototype.duration = function () {
    var ms = this.ms * Math.pow(this.factor, this.attempts++);
    if (this.jitter) {
        var rand = Math.random();
        var deviation = Math.floor(rand * this.jitter * ms);
        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;
    }
    return Math.min(ms, this.max) | 0;
};
/**
 * Reset the number of attempts.
 *
 * @api public
 */
Backoff.prototype.reset = function () {
    this.attempts = 0;
};
/**
 * Set the minimum duration
 *
 * @api public
 */
Backoff.prototype.setMin = function (min) {
    this.ms = min;
};
/**
 * Set the maximum duration
 *
 * @api public
 */
Backoff.prototype.setMax = function (max) {
    this.max = max;
};
/**
 * Set the jitter
 *
 * @api public
 */
Backoff.prototype.setJitter = function (jitter) {
    this.jitter = jitter;
};

;// ./node_modules/socket.io-client/build/esm/manager.js






class Manager extends Emitter {
    constructor(uri, opts) {
        var _a;
        super();
        this.nsps = {};
        this.subs = [];
        if (uri && "object" === typeof uri) {
            opts = uri;
            uri = undefined;
        }
        opts = opts || {};
        opts.path = opts.path || "/socket.io";
        this.opts = opts;
        installTimerFunctions(this, opts);
        this.reconnection(opts.reconnection !== false);
        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);
        this.reconnectionDelay(opts.reconnectionDelay || 1000);
        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);
        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);
        this.backoff = new Backoff({
            min: this.reconnectionDelay(),
            max: this.reconnectionDelayMax(),
            jitter: this.randomizationFactor(),
        });
        this.timeout(null == opts.timeout ? 20000 : opts.timeout);
        this._readyState = "closed";
        this.uri = uri;
        const _parser = opts.parser || socket_io_parser_build_esm_namespaceObject;
        this.encoder = new _parser.Encoder();
        this.decoder = new _parser.Decoder();
        this._autoConnect = opts.autoConnect !== false;
        if (this._autoConnect)
            this.open();
    }
    reconnection(v) {
        if (!arguments.length)
            return this._reconnection;
        this._reconnection = !!v;
        if (!v) {
            this.skipReconnect = true;
        }
        return this;
    }
    reconnectionAttempts(v) {
        if (v === undefined)
            return this._reconnectionAttempts;
        this._reconnectionAttempts = v;
        return this;
    }
    reconnectionDelay(v) {
        var _a;
        if (v === undefined)
            return this._reconnectionDelay;
        this._reconnectionDelay = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);
        return this;
    }
    randomizationFactor(v) {
        var _a;
        if (v === undefined)
            return this._randomizationFactor;
        this._randomizationFactor = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);
        return this;
    }
    reconnectionDelayMax(v) {
        var _a;
        if (v === undefined)
            return this._reconnectionDelayMax;
        this._reconnectionDelayMax = v;
        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);
        return this;
    }
    timeout(v) {
        if (!arguments.length)
            return this._timeout;
        this._timeout = v;
        return this;
    }
    /**
     * Starts trying to reconnect if reconnection is enabled and we have not
     * started reconnecting yet
     *
     * @private
     */
    maybeReconnectOnOpen() {
        // Only try to reconnect if it's the first time we're connecting
        if (!this._reconnecting &&
            this._reconnection &&
            this.backoff.attempts === 0) {
            // keeps reconnection from firing twice for the same reconnection loop
            this.reconnect();
        }
    }
    /**
     * Sets the current transport `socket`.
     *
     * @param {Function} fn - optional, callback
     * @return self
     * @public
     */
    open(fn) {
        if (~this._readyState.indexOf("open"))
            return this;
        this.engine = new Socket(this.uri, this.opts);
        const socket = this.engine;
        const self = this;
        this._readyState = "opening";
        this.skipReconnect = false;
        // emit `open`
        const openSubDestroy = on(socket, "open", function () {
            self.onopen();
            fn && fn();
        });
        const onError = (err) => {
            this.cleanup();
            this._readyState = "closed";
            this.emitReserved("error", err);
            if (fn) {
                fn(err);
            }
            else {
                // Only do this if there is no fn to handle the error
                this.maybeReconnectOnOpen();
            }
        };
        // emit `error`
        const errorSub = on(socket, "error", onError);
        if (false !== this._timeout) {
            const timeout = this._timeout;
            // set timer
            const timer = this.setTimeoutFn(() => {
                openSubDestroy();
                onError(new Error("timeout"));
                socket.close();
            }, timeout);
            if (this.opts.autoUnref) {
                timer.unref();
            }
            this.subs.push(() => {
                this.clearTimeoutFn(timer);
            });
        }
        this.subs.push(openSubDestroy);
        this.subs.push(errorSub);
        return this;
    }
    /**
     * Alias for open()
     *
     * @return self
     * @public
     */
    connect(fn) {
        return this.open(fn);
    }
    /**
     * Called upon transport open.
     *
     * @private
     */
    onopen() {
        // clear old subs
        this.cleanup();
        // mark as open
        this._readyState = "open";
        this.emitReserved("open");
        // add new subs
        const socket = this.engine;
        this.subs.push(on(socket, "ping", this.onping.bind(this)), on(socket, "data", this.ondata.bind(this)), on(socket, "error", this.onerror.bind(this)), on(socket, "close", this.onclose.bind(this)), 
        // @ts-ignore
        on(this.decoder, "decoded", this.ondecoded.bind(this)));
    }
    /**
     * Called upon a ping.
     *
     * @private
     */
    onping() {
        this.emitReserved("ping");
    }
    /**
     * Called with data.
     *
     * @private
     */
    ondata(data) {
        try {
            this.decoder.add(data);
        }
        catch (e) {
            this.onclose("parse error", e);
        }
    }
    /**
     * Called when parser fully decodes a packet.
     *
     * @private
     */
    ondecoded(packet) {
        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a "parse error"
        nextTick(() => {
            this.emitReserved("packet", packet);
        }, this.setTimeoutFn);
    }
    /**
     * Called upon socket error.
     *
     * @private
     */
    onerror(err) {
        this.emitReserved("error", err);
    }
    /**
     * Creates a new socket for the given `nsp`.
     *
     * @return {Socket}
     * @public
     */
    socket(nsp, opts) {
        let socket = this.nsps[nsp];
        if (!socket) {
            socket = new socket_Socket(this, nsp, opts);
            this.nsps[nsp] = socket;
        }
        else if (this._autoConnect && !socket.active) {
            socket.connect();
        }
        return socket;
    }
    /**
     * Called upon a socket close.
     *
     * @param socket
     * @private
     */
    _destroy(socket) {
        const nsps = Object.keys(this.nsps);
        for (const nsp of nsps) {
            const socket = this.nsps[nsp];
            if (socket.active) {
                return;
            }
        }
        this._close();
    }
    /**
     * Writes a packet.
     *
     * @param packet
     * @private
     */
    _packet(packet) {
        const encodedPackets = this.encoder.encode(packet);
        for (let i = 0; i < encodedPackets.length; i++) {
            this.engine.write(encodedPackets[i], packet.options);
        }
    }
    /**
     * Clean up transport subscriptions and packet buffer.
     *
     * @private
     */
    cleanup() {
        this.subs.forEach((subDestroy) => subDestroy());
        this.subs.length = 0;
        this.decoder.destroy();
    }
    /**
     * Close the current socket.
     *
     * @private
     */
    _close() {
        this.skipReconnect = true;
        this._reconnecting = false;
        this.onclose("forced close");
    }
    /**
     * Alias for close()
     *
     * @private
     */
    disconnect() {
        return this._close();
    }
    /**
     * Called when:
     *
     * - the low-level engine is closed
     * - the parser encountered a badly formatted packet
     * - all sockets are disconnected
     *
     * @private
     */
    onclose(reason, description) {
        var _a;
        this.cleanup();
        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();
        this.backoff.reset();
        this._readyState = "closed";
        this.emitReserved("close", reason, description);
        if (this._reconnection && !this.skipReconnect) {
            this.reconnect();
        }
    }
    /**
     * Attempt a reconnection.
     *
     * @private
     */
    reconnect() {
        if (this._reconnecting || this.skipReconnect)
            return this;
        const self = this;
        if (this.backoff.attempts >= this._reconnectionAttempts) {
            this.backoff.reset();
            this.emitReserved("reconnect_failed");
            this._reconnecting = false;
        }
        else {
            const delay = this.backoff.duration();
            this._reconnecting = true;
            const timer = this.setTimeoutFn(() => {
                if (self.skipReconnect)
                    return;
                this.emitReserved("reconnect_attempt", self.backoff.attempts);
                // check again for the case socket closed in above events
                if (self.skipReconnect)
                    return;
                self.open((err) => {
                    if (err) {
                        self._reconnecting = false;
                        self.reconnect();
                        this.emitReserved("reconnect_error", err);
                    }
                    else {
                        self.onreconnect();
                    }
                });
            }, delay);
            if (this.opts.autoUnref) {
                timer.unref();
            }
            this.subs.push(() => {
                this.clearTimeoutFn(timer);
            });
        }
    }
    /**
     * Called upon successful reconnect.
     *
     * @private
     */
    onreconnect() {
        const attempt = this.backoff.attempts;
        this._reconnecting = false;
        this.backoff.reset();
        this.emitReserved("reconnect", attempt);
    }
}

;// ./node_modules/socket.io-client/build/esm/index.js



/**
 * Managers cache.
 */
const cache = {};
function esm_lookup(uri, opts) {
    if (typeof uri === "object") {
        opts = uri;
        uri = undefined;
    }
    opts = opts || {};
    const parsed = url(uri, opts.path || "/socket.io");
    const source = parsed.source;
    const id = parsed.id;
    const path = parsed.path;
    const sameNamespace = cache[id] && path in cache[id]["nsps"];
    const newConnection = opts.forceNew ||
        opts["force new connection"] ||
        false === opts.multiplex ||
        sameNamespace;
    let io;
    if (newConnection) {
        io = new Manager(source, opts);
    }
    else {
        if (!cache[id]) {
            cache[id] = new Manager(source, opts);
        }
        io = cache[id];
    }
    if (parsed.query && !opts.query) {
        opts.query = parsed.queryKey;
    }
    return io.socket(parsed.path, opts);
}
// so that "lookup" can be used both as a function (e.g. `io(...)`) and as a
// namespace (e.g. `io.connect(...)`), for backward compatibility
Object.assign(esm_lookup, {
    Manager: Manager,
    Socket: socket_Socket,
    io: esm_lookup,
    connect: esm_lookup,
});
/**
 * Protocol version.
 *
 * @public
 */

/**
 * Expose constructors for standalone build.
 *
 * @public
 */



;// ./user/src/script/components/transaction/detail-transaction-page.js
function detail_transaction_page_typeof(o) { "@babel/helpers - typeof"; return detail_transaction_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, detail_transaction_page_typeof(o); }
function detail_transaction_page_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ detail_transaction_page_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == detail_transaction_page_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(detail_transaction_page_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function detail_transaction_page_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function detail_transaction_page_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { detail_transaction_page_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { detail_transaction_page_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function detail_transaction_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function detail_transaction_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, detail_transaction_page_toPropertyKey(o.key), o); } }
function detail_transaction_page_createClass(e, r, t) { return r && detail_transaction_page_defineProperties(e.prototype, r), t && detail_transaction_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function detail_transaction_page_callSuper(t, o, e) { return o = detail_transaction_page_getPrototypeOf(o), detail_transaction_page_possibleConstructorReturn(t, detail_transaction_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], detail_transaction_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function detail_transaction_page_possibleConstructorReturn(t, e) { if (e && ("object" == detail_transaction_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return detail_transaction_page_assertThisInitialized(t); }
function detail_transaction_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function detail_transaction_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && detail_transaction_page_setPrototypeOf(t, e); }
function detail_transaction_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return detail_transaction_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !detail_transaction_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return detail_transaction_page_construct(t, arguments, detail_transaction_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), detail_transaction_page_setPrototypeOf(Wrapper, t); }, detail_transaction_page_wrapNativeSuper(t); }
function detail_transaction_page_construct(t, e, r) { if (detail_transaction_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && detail_transaction_page_setPrototypeOf(p, r.prototype), p; }
function detail_transaction_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (detail_transaction_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function detail_transaction_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function detail_transaction_page_setPrototypeOf(t, e) { return detail_transaction_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, detail_transaction_page_setPrototypeOf(t, e); }
function detail_transaction_page_getPrototypeOf(t) { return detail_transaction_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, detail_transaction_page_getPrototypeOf(t); }
function detail_transaction_page_defineProperty(e, r, t) { return (r = detail_transaction_page_toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function detail_transaction_page_toPropertyKey(t) { var i = detail_transaction_page_toPrimitive(t, "string"); return "symbol" == detail_transaction_page_typeof(i) ? i : i + ""; }
function detail_transaction_page_toPrimitive(t, r) { if ("object" != detail_transaction_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != detail_transaction_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }




var DetailTransactionPage = /*#__PURE__*/function (_HTMLElement) {
  function DetailTransactionPage() {
    var _this;
    detail_transaction_page_classCallCheck(this, DetailTransactionPage);
    _this = detail_transaction_page_callSuper(this, DetailTransactionPage);
    detail_transaction_page_defineProperty(_this, "formatRupiah", function (money) {
      if (money === null || money === undefined) return "-";
      var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
      if (isNaN(numericMoney)) return "-";
      return new Intl.NumberFormat("id-ID", {
        style: "currency",
        currency: "IDR",
        minimumFractionDigits: 0
      }).format(numericMoney);
    });
    _this.transactionId = null;
    _this.transactionDetails = null;
    _this.isLoading = true;
    _this.error = null;

    // State for messages
    _this._messages = [];
    _this._messagesLoading = false;
    _this._messagesError = null;

    // Socket.io related properties
    _this._socket = null;
    _this._isSocketConnected = false;

    // Bind methods
    _this.fetchTransactionDetails = _this.fetchTransactionDetails.bind(_this);
    _this.handleStatusUpdate = _this.handleStatusUpdate.bind(_this);
    // Bind methods for messages
    _this.fetchMessages = _this.fetchMessages.bind(_this);
    _this._handleSendMessageSocket = _this._handleSendMessageSocket.bind(_this);
    // Bind Socket.io methods
    _this._connectSocket = _this._connectSocket.bind(_this);
    _this._disconnectSocket = _this._disconnectSocket.bind(_this);
    _this._handleNewMessage = _this._handleNewMessage.bind(_this);
    _this._handleSocketError = _this._handleSocketError.bind(_this);
    return _this;
  }
  detail_transaction_page_inherits(DetailTransactionPage, _HTMLElement);
  return detail_transaction_page_createClass(DetailTransactionPage, [{
    key: "_emptyContent",
    value: function _emptyContent() {
      this.innerHTML = "";
    }

    // Observe the 'transaction-id' attribute passed from the router
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      console.log("Detail Transaction Component Connected");
      // Initial render. This will show loading state while attributeChangedCallback sets the ID and triggers fetch.
      this.render();

      // ✅ HANYA minta permission jika user sudah login - TIDAK register service worker
      if (utils.isAuthenticated()) {
        this._ensureNotificationPermission();
      }
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      console.log("Detail Transaction Component Disconnected");
      // Remove event listeners when the component is removed from the DOM
      this.removeEventListeners();
      // Disconnect Socket.io client when the component is removed
      this._disconnectSocket();

      // Reset state properties when disconnected to clean up for potential reuse
      this.transactionId = null;
      this.transactionDetails = null;
      this.isLoading = true;
      this.error = null;
      this._messages = [];
      this._messagesLoading = false;
      this._messagesError = null;
      this._isSocketConnected = false;
    }
  }, {
    key: "attributeChangedCallback",
    value: function attributeChangedCallback(name, oldValue, newValue) {
      console.log("Attribute '".concat(name, "' changed from '").concat(oldValue, "' to '").concat(newValue, "'"));
      var newTransactionId = newValue && typeof newValue === "string" && newValue !== "undefined" && newValue !== "null" && newValue.trim() !== "" ? newValue.trim() : null;
      if (newTransactionId !== this.transactionId) {
        this._disconnectSocket();
        this.transactionId = newTransactionId;
        this.transactionDetails = null;
        this.isLoading = true;
        this.error = null;
        this._messages = [];
        this._messagesLoading = false;
        this._messagesError = null;
        if (this.transactionId) {
          console.log("Valid transaction ID set:", this.transactionId);
          if (!utils.isAuthenticated()) {
            sweetalert2_all_default().fire({
              icon: "warning",
              title: "Login Diperlukan",
              text: "Anda harus login untuk melihat detail transaksi.",
              confirmButtonColor: "#4f46e5"
            });
            utils.redirectToLogin();
            this.error = "Anda harus login untuk melihat detail ini.";
            this.isLoading = false;
            this.render();
            return;
          }
          this.render(); // Show loading
          this.fetchTransactionDetails(this.transactionId);
        } else {
          console.warn("Invalid transaction ID");
          this.error = "ID Transaksi tidak valid.";
          this.isLoading = false;
          this.render();
        }
      }
    }
  }, {
    key: "fetchTransactionDetails",
    value: function () {
      var _fetchTransactionDetails = detail_transaction_page_asyncToGenerator(/*#__PURE__*/detail_transaction_page_regeneratorRuntime().mark(function _callee(transactionId) {
        var response;
        return detail_transaction_page_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (transactionId) {
                _context.next = 6;
                break;
              }
              console.error("fetchTransactionDetails called without a valid transactionId.");
              this.error = "ID Transaksi tidak ditemukan.";
              this.isLoading = false;
              this.render();
              return _context.abrupt("return");
            case 6:
              this.isLoading = true;
              this.error = null;
              this.transactionDetails = null;
              _context.prev = 9;
              console.log("Fetching transaction details for ID: ".concat(transactionId));
              _context.next = 13;
              return authenticatedRequest("/transactions/".concat(transactionId), "GET");
            case 13:
              response = _context.sent;
              if (response.status === "success" && response.data) {
                console.log("Fetched transaction details successfully:", response.data);
                this.transactionDetails = response.data;
                this.error = null;
                this.fetchMessages(transactionId);
                this._connectSocket(transactionId);
              } else {
                console.error("Error fetching transaction details:", response.message || "Unknown error", response);
                this.transactionDetails = null;
                this.error = response.message || "Gagal memuat detail transaksi.";
                this.isLoading = false;
                this._disconnectSocket();
                this.render();
              }
              _context.next = 25;
              break;
            case 17:
              _context.prev = 17;
              _context.t0 = _context["catch"](9);
              console.error("Error during API request for transaction details:", _context.t0);
              this.transactionDetails = null;
              this.error = "Terjadi kesalahan saat memuat detail transaksi.";
              this.isLoading = false;
              this._disconnectSocket();
              this.render();
            case 25:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[9, 17]]);
      }));
      function fetchTransactionDetails(_x) {
        return _fetchTransactionDetails.apply(this, arguments);
      }
      return fetchTransactionDetails;
    }()
  }, {
    key: "fetchMessages",
    value: function () {
      var _fetchMessages = detail_transaction_page_asyncToGenerator(/*#__PURE__*/detail_transaction_page_regeneratorRuntime().mark(function _callee2(transactionId) {
        var response;
        return detail_transaction_page_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              if (transactionId) {
                _context2.next = 6;
                break;
              }
              console.error("fetchMessages called without a valid transactionId.");
              this._messagesError = "ID Transaksi tidak ditemukan untuk memuat pesan.";
              this._messagesLoading = false;
              this.render();
              return _context2.abrupt("return");
            case 6:
              this._messagesLoading = true;
              this._messagesError = null;
              this._messages = [];
              _context2.prev = 9;
              console.log("Fetching messages for transaction ID: ".concat(transactionId));
              _context2.next = 13;
              return authenticatedRequest("/messages/transaction/".concat(transactionId), "GET");
            case 13:
              response = _context2.sent;
              if (response.status === "success" && response.data) {
                console.log("Fetched messages successfully:", response.data);
                this._messages = Array.isArray(response.data) ? response.data : [];
                this._messagesError = null;
                this._messages.sort(function (a, b) {
                  return new Date(a.created_at) - new Date(b.created_at);
                });
              } else {
                console.error("Error fetching messages:", response.message || "Unknown error", response);
                this._messages = [];
                this._messagesError = response.message || "Gagal memuat pesan.";
              }
              _context2.next = 22;
              break;
            case 17:
              _context2.prev = 17;
              _context2.t0 = _context2["catch"](9);
              console.error("Error during API request for messages:", _context2.t0);
              this._messages = [];
              this._messagesError = "Terjadi kesalahan saat memuat pesan.";
            case 22:
              _context2.prev = 22;
              this._messagesLoading = false;
              if (this.transactionDetails) {
                this.isLoading = false;
              }
              console.log("fetchMessages finally block reached. Current state after fetch:", {
                transactionDetails: !!this.transactionDetails,
                isLoading: this.isLoading,
                error: this.error,
                messagesCount: this._messages.length,
                messagesLoading: this._messagesLoading,
                messagesError: this._messagesError,
                isSocketConnected: this._isSocketConnected
              });
              this.render();
              return _context2.finish(22);
            case 28:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[9, 17, 22, 28]]);
      }));
      function fetchMessages(_x2) {
        return _fetchMessages.apply(this, arguments);
      }
      return fetchMessages;
    }()
  }, {
    key: "_connectSocket",
    value: function _connectSocket(transactionId) {
      var _this2 = this;
      if (this._isSocketConnected || !transactionId) {
        if (!transactionId) {
          console.warn("Cannot connect Socket.io: No valid transaction ID.");
        } else if (this._isSocketConnected) {
          console.log("Socket already connected.");
        }
        return;
      }
      console.log("Attempting to connect Socket.io for transaction ID: ".concat(transactionId));
      var token = localStorage.getItem("token");
      if (!token) {
        console.warn("No JWT token found. Cannot connect Socket.io for authenticated user.");
        this._messagesError = "Anda harus login untuk menggunakan chat.";
        this.render();
        return;
      }
      this._socket = esm_lookup("http://localhost:5000", {
        query: {
          transactionId: transactionId
        },
        auth: {
          token: token
        }
      });
      this._socket.on("connect", function () {
        _this2._isSocketConnected = true;
        console.log("Socket.io connected:", _this2._socket.id);
        if (_this2._socket && _this2.transactionId) {
          console.log("Emitting 'joinTransaction' for ID: ".concat(_this2.transactionId));
          _this2._socket.emit("joinTransaction", Number.parseInt(_this2.transactionId, 10));
        } else {
          console.warn("Cannot emit joinTransaction: missing transactionId or socket");
        }
      });
      this._socket.on("disconnect", function (reason) {
        _this2._isSocketConnected = false;
        console.log("Socket.io disconnected:", reason);
      });
      this._socket.on("connect_error", function (error) {
        console.error("Socket.io connect_error:", error);
        _this2._isSocketConnected = false;
      });
      this._socket.on("error", function (error) {
        console.error("Socket.io error:", error);
        _this2._isSocketConnected = false;
      });
      this._socket.on("newMessage", function (newMessage) {
        console.log("Received new message via Socket.io:", newMessage);
        if (!newMessage || !_this2.transactionId) {
          console.warn("Invalid message or missing transaction ID");
          return;
        }
        if (newMessage.transaction_id && Number.parseInt(newMessage.transaction_id, 10) === Number.parseInt(_this2.transactionId, 10)) {
          if (!_this2._messages.find(function (msg) {
            return msg.id === newMessage.id;
          })) {
            console.log("Adding new message to state:", newMessage);
            _this2._messages.push(newMessage);
            _this2._messages.sort(function (a, b) {
              return new Date(a.created_at) - new Date(b.created_at);
            });
            _this2.render();
            requestAnimationFrame(function () {
              var messagesListElement = _this2.querySelector("#messages-list");
              if (messagesListElement) {
                messagesListElement.scrollTop = messagesListElement.scrollHeight;
              }
            });
          }
        } else {
          console.warn("Message not for this transaction:", {
            expected: _this2.transactionId,
            received: newMessage.transaction_id
          });
        }
      });
      this._socket.on("messageError", function (errorData) {
        console.error("Server reported message error:", errorData.error);
        sweetalert2_all_default().fire({
          icon: "error",
          title: "Gagal Mengirim Pesan",
          text: "Gagal mengirim pesan: " + (errorData.error || "Terjadi kesalahan server."),
          confirmButtonColor: "#4f46e5"
        });
      });
      console.log("Socket.io event listeners for messages added.");
    }
  }, {
    key: "_disconnectSocket",
    value: function _disconnectSocket() {
      if (this._socket) {
        console.log("Disconnecting Socket.io...");
        this._socket.off("connect");
        this._socket.off("disconnect");
        this._socket.off("connect_error", this._handleSocketError);
        this._socket.off("error", this._handleSocketError);
        this._socket.off("newMessage", this._handleNewMessage);
        this._socket.off("messageError");
        this._socket.disconnect();
        this._socket = null;
        this._isSocketConnected = false;
        console.log("Socket.io disconnected.");
      }
    }
  }, {
    key: "_handleSocketError",
    value: function _handleSocketError(error) {
      console.error("Socket.io error handler:", error);
      this._isSocketConnected = false;
    }
  }, {
    key: "_handleNewMessage",
    value: function _handleNewMessage(newMessage) {
      var _this3 = this;
      console.log("Received new message via Socket.io:", newMessage);
      if (newMessage && newMessage.transaction_id && this.transactionId && Number.parseInt(newMessage.transaction_id, 10) === Number.parseInt(this.transactionId, 10)) {
        if (!this._messages.find(function (msg) {
          return msg.id === newMessage.id;
        })) {
          console.log("Adding new message to state:", newMessage);
          this._messages.push(newMessage);
          this._messages.sort(function (a, b) {
            return new Date(a.created_at) - new Date(b.created_at);
          });
          this.render();
          requestAnimationFrame(function () {
            var messagesListElement = _this3.querySelector("#messages-list");
            if (messagesListElement) {
              messagesListElement.scrollTop = messagesListElement.scrollHeight;
              console.log("Scrolled messages list to bottom.");
            } else {
              console.warn("Messages list element not found for scrolling after new message.");
            }
          });
        } else {
          console.log("Received duplicate message via Socket.io, ignoring.", newMessage);
        }
      } else {
        console.warn("Received new message not for this transaction or invalid format, ignoring:", newMessage);
        console.log("Expected transaction ID:", this.transactionId, "Received transaction ID:", newMessage ? newMessage.transaction_id : "N/A");
      }
    }
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      var _this4 = this;
      console.log("Setting up event listeners...");
      this.removeEventListeners();
      var transactionActionsDiv = this.querySelector("#transaction-actions");
      if (transactionActionsDiv) {
        this.handleStatusUpdateDelegate = function (event) {
          var target = event.target;
          if (target.classList.contains("status-update-button")) {
            var newStatus = target.dataset.status;
            if (newStatus && _this4.transactionDetails && _this4.transactionDetails.id) {
              _this4.handleStatusUpdate(_this4.transactionDetails.id, newStatus);
            }
          }
        };
        transactionActionsDiv.addEventListener("click", this.handleStatusUpdateDelegate);
        console.log("Transaction actions delegate listener added.");
      }
      var sendMessageForm = this.querySelector("#send-message-form");
      if (sendMessageForm) {
        this._sendMessageSubmitHandler = this._handleSendMessageSocket;
        sendMessageForm.addEventListener("submit", this._sendMessageSubmitHandler);
        console.log("Send message form submit listener added.");
      }
      console.log("Finished setting up event listeners.");
    }
  }, {
    key: "removeEventListeners",
    value: function removeEventListeners() {
      console.log("Removing event listeners...");
      var transactionActionsDiv = this.querySelector("#transaction-actions");
      if (transactionActionsDiv && this.handleStatusUpdateDelegate) {
        transactionActionsDiv.removeEventListener("click", this.handleStatusUpdateDelegate);
        this.handleStatusUpdateDelegate = null;
        console.log("Transaction actions delegate listener removed.");
      }
      var sendMessageForm = this.querySelector("#send-message-form");
      if (sendMessageForm && this._sendMessageSubmitHandler) {
        sendMessageForm.removeEventListener("submit", this._sendMessageSubmitHandler);
        this._sendMessageSubmitHandler = null;
        console.log("Send message form submit listener removed.");
      }
      console.log("Finished removing event listeners.");
    }
  }, {
    key: "_handleSendMessageSocket",
    value: function _handleSendMessageSocket(event) {
      event.preventDefault();
      console.log("Send message form submitted (Socket.io).");
      if (!this._socket || !this._isSocketConnected) {
        console.warn("Socket not connected");
        sweetalert2_all_default().fire({
          icon: "error",
          title: "Koneksi Terputus",
          text: "Koneksi chat tidak aktif. Silakan refresh halaman.",
          confirmButtonColor: "#4f46e5"
        });
        return;
      }
      if (!this.transactionDetails || !this.transactionDetails.id) {
        console.warn("Transaction details missing");
        sweetalert2_all_default().fire({
          icon: "error",
          title: "Data Tidak Lengkap",
          text: "Informasi transaksi tidak lengkap.",
          confirmButtonColor: "#4f46e5"
        });
        return;
      }
      var form = event.target;
      var messageInput = form.querySelector("#message-input");
      var content = messageInput ? messageInput.value.trim() : "";
      if (!content) {
        sweetalert2_all_default().fire({
          icon: "warning",
          title: "Pesan Kosong",
          text: "Pesan tidak boleh kosong.",
          confirmButtonColor: "#4f46e5"
        });
        return;
      }
      var sendButton = form.querySelector('button[type="submit"]');
      if (sendButton) sendButton.disabled = true;
      try {
        console.log("Emitting 'sendMessage' for transaction ID: ".concat(this.transactionDetails.id));
        var messageData = {
          transaction_id: Number.parseInt(this.transactionDetails.id, 10),
          content: content
        };
        this._socket.emit("sendMessage", messageData);
        console.log("sendMessage event emitted with data:", messageData);
        if (messageInput) messageInput.value = "";
      } catch (error) {
        console.error("Error emitting sendMessage event:", error);
        sweetalert2_all_default().fire({
          icon: "error",
          title: "Gagal Mengirim",
          text: "Terjadi kesalahan saat mengirim pesan.",
          confirmButtonColor: "#4f46e5"
        });
      } finally {
        if (sendButton) sendButton.disabled = false;
      }
    }

    // ✅ PERBAIKAN: HANYA minta permission - TIDAK register service worker
  }, {
    key: "_ensureNotificationPermission",
    value: function () {
      var _ensureNotificationPermission2 = detail_transaction_page_asyncToGenerator(/*#__PURE__*/detail_transaction_page_regeneratorRuntime().mark(function _callee3() {
        return detail_transaction_page_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.prev = 0;
              if ("Notification" in window) {
                _context3.next = 4;
                break;
              }
              console.log("Browser tidak mendukung push notifications");
              return _context3.abrupt("return");
            case 4:
              if (!(Notification.permission === "granted")) {
                _context3.next = 7;
                break;
              }
              console.log("Notification permission sudah granted");
              return _context3.abrupt("return");
            case 7:
              if (!(Notification.permission === "default")) {
                _context3.next = 10;
                break;
              }
              console.log("Notification permission belum diminta, akan dihandle oleh sistem utama");
              return _context3.abrupt("return");
            case 10:
              if (!(Notification.permission === "denied")) {
                _context3.next = 13;
                break;
              }
              console.log("Notification permission denied");
              return _context3.abrupt("return");
            case 13:
              _context3.next = 18;
              break;
            case 15:
              _context3.prev = 15;
              _context3.t0 = _context3["catch"](0);
              console.error("Error checking notification permission:", _context3.t0);
            case 18:
            case "end":
              return _context3.stop();
          }
        }, _callee3, null, [[0, 15]]);
      }));
      function _ensureNotificationPermission() {
        return _ensureNotificationPermission2.apply(this, arguments);
      }
      return _ensureNotificationPermission;
    }()
  }, {
    key: "render",
    value: function render() {
      console.log("DetailTransaction Render method called. Current state:", {
        isLoading: this.isLoading,
        error: this.error,
        hasData: !!this.transactionDetails,
        messagesLoading: this._messagesLoading,
        messagesError: this._messagesError,
        hasMessages: this._messages.length > 0,
        isSocketConnected: this._isSocketConnected
      });
      this._emptyContent();
      console.log("Render method: Content cleared.");
      try {
        var contentHtml = this.renderContentContent(this.isLoading, this.error, this.transactionDetails, utils.getUserInfo());
        var messagesSectionHtml = this.renderMessagesSection(this._messagesLoading, this._messagesError, this._messages, utils.getUserInfo());
        console.log("Render method: renderContentContent returned HTML string.");
        if (!contentHtml) {
          console.warn("renderContentContent returned an empty string or null.");
        }
        this.innerHTML = "\n            <div class=\"container mx-auto px-4 py-8\">\n                <h1 class=\"text-2xl font-bold mb-6\">Detail Transaksi</h1>\n\n                <!-- Transaction Detail Area -->\n                <div id=\"transaction-detail-content\">\n                        ".concat(contentHtml, "\n                    </div>\n\n                    <!-- Messages Section -->\n                     <div class=\"mt-8 border-t pt-8\">\n                        <h2 class=\"text-2xl font-bold mb-6\">Pesan Transaksi</h2>\n                        ").concat(messagesSectionHtml, "\n                </div>\n            </div>\n        ");
        console.log("Render method: innerHTML set.");
      } catch (renderError) {
        console.error("Error inside render method:", renderError);
        this.innerHTML = '<p class="text-red-500">Terjadi kesalahan saat menampilkan detail.</p>';
      }
      if (!this.isLoading && !this._messagesLoading && !this.error && !this._messagesError) {
        this.setupEventListeners();
      }
    }
  }, {
    key: "renderContentContent",
    value: function renderContentContent(isLoading, error, transaction, currentUser) {
      console.log("renderContentContent called with state:", {
        isLoading: isLoading,
        error: error,
        hasTransaction: !!transaction,
        hasCurrentUser: !!currentUser
      });
      if (isLoading) {
        console.log("renderContentContent: Showing loading.");
        return "<p>Memuat detail transaksi...</p>";
      }
      if (error) {
        console.log("renderContentContent: Showing error:", error);
        return "<p class=\"text-red-500\">Error: ".concat(error, "</p>");
      }
      if (!transaction) {
        console.log("renderContentContent: Showing no data message.");
        return "<p>Detail transaksi tidak tersedia.</p>";
      }
      var isSeller = currentUser && transaction.seller_id === currentUser.id;
      var isBuyer = currentUser && transaction.buyer_id === currentUser.id;
      console.log("renderContentContent: Transaction data available. isSeller:", isSeller, "isBuyer:", isBuyer);
      var formatRupiah = function formatRupiah(money) {
        if (money === null || money === undefined) return "-";
        var numericMoney = typeof money === "string" ? Number.parseFloat(money) : money;
        if (isNaN(numericMoney)) return "-";
        return new Intl.NumberFormat("id-ID", {
          style: "currency",
          currency: "IDR",
          minimumFractionDigits: 0
        }).format(numericMoney);
      };
      var statusDisplay = transaction.status || "Unknown Status";
      var statusColorClass = "text-gray-600 bg-gray-100 px-2 py-0.5 rounded-full text-xs font-semibold";
      switch (transaction.status) {
        case "pending":
          statusColorClass = "text-yellow-600 bg-yellow-100 px-2 py-0.5 rounded-full text-xs font-semibold";
          break;
        case "ongoing":
          statusColorClass = "text-blue-600 bg-blue-100 px-2 py-0.5 rounded-full text-xs font-semibold";
          break;
        case "completed":
          statusColorClass = "text-green-600 bg-green-100 px-2 py-0.5 rounded-full text-xs font-semibold";
          break;
        case "cancelled":
          statusColorClass = "text-red-600 bg-red-500 px-2 py-0.5 rounded-full text-xs font-semibold";
          break;
        case "returned":
          statusColorClass = "text-purple-600 bg-purple-100 px-2 py-0.5 rounded-full text-xs font-semibold";
          break;
        case "late":
          statusColorClass = "text-orange-600 bg-orange-100 px-2 py-0.5 rounded-full text-xs font-semibold";
          break;
      }
      var availableSellerStatusTransitions = [];
      if (isSeller) {
        switch (transaction.status) {
          case "pending":
            availableSellerStatusTransitions = [{
              status: "ongoing",
              text: "Konfirmasi & Proses"
            }, {
              status: "cancelled",
              text: "Batalkan Transaksi"
            }];
            break;
          case "ongoing":
            if (transaction.type === "rent") {
              availableSellerStatusTransitions = [{
                status: "returned",
                text: "Item Telah Dikembalikan"
              }, {
                status: "completed",
                text: "Selesaikan Transaksi Sewa"
              }];
            } else {
              availableSellerStatusTransitions = [{
                status: "completed",
                text: "Selesaikan Transaksi Penjualan"
              }];
            }
            break;
          case "returned":
            if (transaction.type === "rent") {
              availableSellerStatusTransitions = [{
                status: "completed",
                text: "Selesaikan Transaksi Sewa"
              }];
            }
            break;
          case "late":
            if (transaction.type === "rent") {
              availableSellerStatusTransitions = [{
                status: "returned",
                text: "Item Dikembalikan (Terlambat)"
              }, {
                status: "completed",
                text: "Selesaikan Transaksi Sewa"
              }];
            }
            break;
          default:
            availableSellerStatusTransitions = [];
        }
      }
      var availableBuyerStatusTransitions = [];
      if (isBuyer) {
        switch (transaction.status) {
          case "pending":
            availableBuyerStatusTransitions = [{
              status: "cancelled",
              text: "Batalkan Pesanan"
            }];
            break;
          default:
            availableBuyerStatusTransitions = [];
        }
      }
      return "\n            <div class=\"bg-white shadow-md rounded-lg p-6\">\n                <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                        <h3 class=\"text-xl font-semibold mb-4\">Informasi Transaksi</h3>\n                        <p><strong>ID Transaksi:</strong> ".concat(transaction.id, "</p>\n                        <p><strong>Tanggal Dibuat:</strong> ").concat(transaction.created_at ? new Date(transaction.created_at).toLocaleDateString("id-ID") : "-", " ").concat(transaction.created_at ? new Date(transaction.created_at).toLocaleTimeString("id-ID") : "-", "</p>\n                        ").concat(transaction.updated_at ? "<p><strong>Terakhir Diperbarui:</strong> ".concat(new Date(transaction.updated_at).toLocaleDateString("id-ID"), " ").concat(new Date(transaction.updated_at).toLocaleTimeString("id-ID"), "</p>") : "", "\n                        <p><strong>Tipe:</strong> <span class=\"capitalize\">").concat(transaction.type || "-", "</span></p>\n                        <p><strong>Status:</strong> <span class=\"").concat(statusColorClass, "\">").concat(statusDisplay, "</span></p>\n                        <p><strong>Metode Pembayaran:</strong> ").concat(transaction.payment_method || "-", "</p>\n                        <p><strong>Total Harga:</strong> ").concat(formatRupiah(transaction.total_price), "</p>\n                         ").concat(transaction.type === "rent" ? "\n                             <p><strong>Periode Sewa:</strong> ".concat(transaction.rent_start_date ? new Date(transaction.rent_start_date).toLocaleDateString("id-ID") : "-", " - ").concat(transaction.rent_end_date ? new Date(transaction.rent_end_date).toLocaleDateString("id-ID") : "-", "</p>\n                             <p><strong>Deposit Dibayar:</strong> ").concat(formatRupiah(transaction.deposit_paid), "</p>\n                         ") : "", "\n                    </div>\n                    <div>\n                        <h3 class=\"text-xl font-semibold mb-4\">Informasi Item</h3>\n                         <p><strong>Nama Item:</strong> ").concat(transaction.item_name || "Tidak Diketahui", "</p>\n                         ").concat(transaction.item_photo ? "\n                             <img src=\"http://localhost:5000".concat(transaction.item_photo, "\" alt=\"Item Photo\" class=\"w-32 h-32 object-cover rounded mt-2\">\n                         ") : "", "\n                         <div class=\"mt-2\">\n                             <a href=\"/#/items/").concat(transaction.item_id, "\" class=\"text-blue-600 hover:underline\">Lihat Detail Item</a>\n                         </div>\n                    </div>\n                     <div>\n                         <h3 class=\"text-xl font-semibold mb-4\">Informasi Pihak Terlibat</h3>\n                         <p><strong>Pembeli/Penyewa:</strong> ").concat(transaction.buyer_name || "Tidak Diketahui", " (").concat(transaction.buyer_email || "-", ")</p>\n                         <p><strong>Penjual/Pemilik:</strong> ").concat(transaction.seller_name || "Tidak Diketahui", " (").concat(transaction.seller_email || "-", ")</p>\n                     </div>\n                </div>\n\n                 <div class=\"mt-6 border-t pt-6\">\n                     <h3 class=\"text-xl font-semibold mb-4\">Aksi Transaksi</h3>\n                     <div id=\"transaction-actions\">\n                          ").concat(isSeller && availableSellerStatusTransitions.length > 0 ? availableSellerStatusTransitions.map(function (transition) {
        return "\n                                <button class=\"status-update-button bg-indigo-500 hover:bg-indigo-600 text-white text-sm px-3 py-1 rounded mr-2\"\n                                        data-status=\"".concat(transition.status, "\">\n                                    ").concat(transition.text, "\n                                </button>\n                            ");
      }).join("") : isBuyer && availableBuyerStatusTransitions.length > 0 ? availableBuyerStatusTransitions.map(function (transition) {
        return "\n                                <button class=\"status-update-button bg-indigo-500 hover:bg-indigo-600 text-white text-sm px-3 py-1 rounded mr-2\"\n                                        data-status=\"".concat(transition.status, "\">\n                                    ").concat(transition.text, "\n                                </button>\n                            ");
      }).join("") : isSeller ? "<p>Tidak ada aksi status yang tersedia untuk Anda sebagai Penjual saat ini.</p>" : isBuyer ? "<p>Tidak ada aksi yang tersedia untuk Anda sebagai Pembeli saat ini.</p>" : "<p>Anda tidak memiliki izin untuk mengambil tindakan pada transaksi ini.</p>", "\n                     </div>\n                 </div>\n            </div>\n        ");
    }
  }, {
    key: "renderMessagesSection",
    value: function renderMessagesSection(isLoading, error, messages, currentUser) {
      var _this5 = this;
      console.log("renderMessagesSection called with state:", {
        isLoading: isLoading,
        error: error,
        hasMessages: messages.length > 0,
        hasCurrentUser: !!currentUser
      });
      if (isLoading) {
        return "<p>Memuat pesan...</p>";
      }
      if (error) {
        return "<p class=\"text-red-500\">Error memuat pesan: ".concat(error, "</p>");
      }
      if (!currentUser) {
        return '<p class="text-gray-600">Login untuk melihat pesan.</p>';
      }
      var messagesListHtml = messages.length === 0 ? "<p>Belum ada pesan dalam transaksi ini.</p>" : messages.map(function (message) {
        return _this5.renderMessage(message, currentUser.id);
      }).join("");
      return "\n            <div class=\"bg-gray-100 p-4 rounded-lg shadow-inner\">\n                <div id=\"messages-list\" class=\"h-64 overflow-y-auto mb-4 p-2 border rounded bg-white\">\n                    ".concat(messagesListHtml, "\n                </div>\n                <form id=\"send-message-form\">\n                    <div class=\"flex\">\n                        <input type=\"text\" id=\"message-input\" placeholder=\"Ketik pesan...\"\n                               class=\"flex-grow rounded-l-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50 sm:text-sm\"\n                               required>\n                        <button type=\"submit\"\n                                class=\"inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-r-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                            Kirim\n                        </button>\n                    </div>\n                </form>\n            </div>\n         ");
    }
  }, {
    key: "renderMessage",
    value: function renderMessage(message, currentUserId) {
      if (!message) return "";
      var isSender = message.sender_id === currentUserId;
      var alignmentClass = isSender ? "items-end" : "items-start";
      var bubbleColorClass = isSender ? "bg-indigo-500 text-white" : "bg-gray-300 text-gray-800";
      var senderName = isSender ? "Anda" : message.sender_name || "Pengguna";
      return "\n             <div class=\"flex flex-col ".concat(alignmentClass, " mb-2\">\n                 <div class=\"text-xs text-gray-600 mb-0.5\">").concat(senderName, "</div>\n                 <div class=\"").concat(bubbleColorClass, " p-2 rounded-lg max-w-xs break-words\">\n                     ").concat(message.content || "", "\n                 </div>\n                  <div class=\"text-xs text-gray-500 mt-0.5\">\n                     ").concat(message.created_at ? new Date(message.created_at).toLocaleTimeString("id-ID", {
        hour: "2-digit",
        minute: "2-digit"
      }) : "", "\n                 </div>\n             </div>\n         ");
    }
  }, {
    key: "handleStatusUpdate",
    value: function () {
      var _handleStatusUpdate = detail_transaction_page_asyncToGenerator(/*#__PURE__*/detail_transaction_page_regeneratorRuntime().mark(function _callee4(transactionId, newStatus) {
        var result, response, errorMessage;
        return detail_transaction_page_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              if (!(!transactionId || !newStatus)) {
                _context4.next = 4;
                break;
              }
              console.error("Missing transaction ID or new status for update.");
              alert("Gagal memperbarui status: Informasi tidak lengkap.");
              return _context4.abrupt("return");
            case 4:
              _context4.next = 6;
              return sweetalert2_all_default().fire({
                title: "Konfirmasi Perubahan Status",
                html: "Apakah Anda yakin ingin mengubah status transaksi ini menjadi <strong>\"".concat(newStatus, "\"</strong>?"),
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#4f46e5",
                cancelButtonColor: "#6b7280",
                confirmButtonText: "Ya, Ubah Status",
                cancelButtonText: "Batal"
              });
            case 6:
              result = _context4.sent;
              if (result.isConfirmed) {
                _context4.next = 9;
                break;
              }
              return _context4.abrupt("return");
            case 9:
              _context4.prev = 9;
              console.log("Attempting to update transaction ".concat(transactionId, " status to: ").concat(newStatus));
              _context4.next = 13;
              return authenticatedRequest("/transactions/".concat(transactionId, "/status"), "PATCH", {
                status: newStatus
              });
            case 13:
              response = _context4.sent;
              if (!(response.status === "success")) {
                _context4.next = 21;
                break;
              }
              console.log("Transaction status updated successfully:", response.data);
              _context4.next = 18;
              return sweetalert2_all_default().fire({
                icon: "success",
                title: "Berhasil!",
                text: "Status transaksi berhasil diperbarui!",
                confirmButtonColor: "#4f46e5"
              });
            case 18:
              this.fetchTransactionDetails(transactionId);
              _context4.next = 25;
              break;
            case 21:
              console.error("Failed to update transaction status:", response.message || "Unknown error", response);
              errorMessage = "Gagal memperbarui status transaksi: " + (response.message || "Terjadi kesalahan");
              if (response.errors && Array.isArray(response.errors)) {
                errorMessage += "\nValidasi error:";
                response.errors.forEach(function (err) {
                  if (err && err.param && err.msg) {
                    errorMessage += "\n- ".concat(err.param, ": ").concat(err.msg);
                  } else if (typeof err === "string") {
                    errorMessage += "\n- ".concat(err);
                  }
                });
              }
              sweetalert2_all_default().fire({
                icon: "error",
                title: "Gagal Memperbarui Status",
                html: errorMessage.replace(/\n/g, "<br>"),
                confirmButtonColor: "#4f46e5"
              });
            case 25:
              _context4.next = 31;
              break;
            case 27:
              _context4.prev = 27;
              _context4.t0 = _context4["catch"](9);
              console.error("Error during API request for status update:", _context4.t0);
              sweetalert2_all_default().fire({
                icon: "error",
                title: "Error",
                text: "Terjadi kesalahan saat memperbarui status transaksi.",
                confirmButtonColor: "#4f46e5"
              });
            case 31:
            case "end":
              return _context4.stop();
          }
        }, _callee4, this, [[9, 27]]);
      }));
      function handleStatusUpdate(_x3, _x4) {
        return _handleStatusUpdate.apply(this, arguments);
      }
      return handleStatusUpdate;
    }()
  }], [{
    key: "observedAttributes",
    get: function get() {
      return ["transaction-id"];
    }
  }]);
}(/*#__PURE__*/detail_transaction_page_wrapNativeSuper(HTMLElement));
customElements.define("detail-transaction-page", DetailTransactionPage);
;// ./user/src/script/components/transaction/my-seller-transactions-page.js
function my_seller_transactions_page_typeof(o) { "@babel/helpers - typeof"; return my_seller_transactions_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, my_seller_transactions_page_typeof(o); }
function my_seller_transactions_page_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ my_seller_transactions_page_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == my_seller_transactions_page_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(my_seller_transactions_page_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function my_seller_transactions_page_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function my_seller_transactions_page_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { my_seller_transactions_page_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { my_seller_transactions_page_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function my_seller_transactions_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function my_seller_transactions_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, my_seller_transactions_page_toPropertyKey(o.key), o); } }
function my_seller_transactions_page_createClass(e, r, t) { return r && my_seller_transactions_page_defineProperties(e.prototype, r), t && my_seller_transactions_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function my_seller_transactions_page_toPropertyKey(t) { var i = my_seller_transactions_page_toPrimitive(t, "string"); return "symbol" == my_seller_transactions_page_typeof(i) ? i : i + ""; }
function my_seller_transactions_page_toPrimitive(t, r) { if ("object" != my_seller_transactions_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != my_seller_transactions_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function my_seller_transactions_page_callSuper(t, o, e) { return o = my_seller_transactions_page_getPrototypeOf(o), my_seller_transactions_page_possibleConstructorReturn(t, my_seller_transactions_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], my_seller_transactions_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function my_seller_transactions_page_possibleConstructorReturn(t, e) { if (e && ("object" == my_seller_transactions_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return my_seller_transactions_page_assertThisInitialized(t); }
function my_seller_transactions_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function my_seller_transactions_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && my_seller_transactions_page_setPrototypeOf(t, e); }
function my_seller_transactions_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return my_seller_transactions_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !my_seller_transactions_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return my_seller_transactions_page_construct(t, arguments, my_seller_transactions_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), my_seller_transactions_page_setPrototypeOf(Wrapper, t); }, my_seller_transactions_page_wrapNativeSuper(t); }
function my_seller_transactions_page_construct(t, e, r) { if (my_seller_transactions_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && my_seller_transactions_page_setPrototypeOf(p, r.prototype), p; }
function my_seller_transactions_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (my_seller_transactions_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function my_seller_transactions_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function my_seller_transactions_page_setPrototypeOf(t, e) { return my_seller_transactions_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, my_seller_transactions_page_setPrototypeOf(t, e); }
function my_seller_transactions_page_getPrototypeOf(t) { return my_seller_transactions_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, my_seller_transactions_page_getPrototypeOf(t); }

 // Assuming Utils has isAuthenticated and redirectToLogin
var MySellerTransactionsPage = /*#__PURE__*/function (_HTMLElement) {
  function MySellerTransactionsPage() {
    var _this;
    my_seller_transactions_page_classCallCheck(this, MySellerTransactionsPage);
    _this = my_seller_transactions_page_callSuper(this, MySellerTransactionsPage);
    // State to hold seller transaction data
    _this.sellerTransactions = [];
    _this.isLoading = true;
    _this.error = null;
    return _this;
  }
  my_seller_transactions_page_inherits(MySellerTransactionsPage, _HTMLElement);
  return my_seller_transactions_page_createClass(MySellerTransactionsPage, [{
    key: "_emptyContent",
    value: function _emptyContent() {
      this.innerHTML = "";
    }
  }, {
    key: "connectedCallback",
    value: function connectedCallback() {
      // Check login status - crucial for authenticated pages
      if (!utils.isAuthenticated()) {
        alert('Anda harus login untuk melihat halaman ini.');
        utils.redirectToLogin(); // Redirect if not logged in
        return; // Stop further execution
      }
      this._emptyContent(); // Clear initial content
      this.renderLayout(); // Render basic layout
      this.fetchSellerTransactions(); // Fetch seller transactions
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      // Cleanup if necessary
    }
  }, {
    key: "renderLayout",
    value: function renderLayout() {
      this.innerHTML = "\n            <div class=\"container mx-auto px-4 py-8\">\n                <h1 class=\"text-2xl font-bold mb-6\">Transaksi Item Saya (Sebagai Penjual)</h1>\n\n                <!-- Seller Transaction List Area -->\n                <div id=\"seller-transactions-list\">\n                    ".concat(this.isLoading ? '<p>Memuat transaksi item Anda...</p>' : '', "\n                    ").concat(this.error ? "<p class=\"text-red-500\">".concat(this.error, "</p>") : '', "\n                </div>\n\n                <!-- TODO: Add Pagination here if needed -->\n            </div>\n        ");
    }
  }, {
    key: "renderSellerTransactions",
    value: function renderSellerTransactions() {
      var listElement = this.querySelector('#seller-transactions-list');
      if (!listElement) {
        console.error('Seller transactions list element not found!');
        return;
      }
      listElement.innerHTML = ''; // Clear loading message or previous content

      if (this.sellerTransactions.length === 0) {
        listElement.innerHTML = '<p>Anda belum memiliki item yang terjual atau disewa.</p>';
        return;
      }

      // Generate HTML for the list of seller transactions
      // Adapt styling with Tailwind CSS as needed
      listElement.innerHTML = "\n             <div class=\"space-y-4\">\n                ".concat(this.sellerTransactions.map(function (transaction) {
        // Determine status display and color class
        var statusDisplay = transaction.status || 'Status Tidak Diketahui';
        var statusColorClass = 'text-gray-800 bg-gray-100'; // Default gray

        switch (transaction.status) {
          case 'pending':
            statusColorClass = 'text-yellow-800 bg-yellow-100'; // Yellow for pending
            break;
          case 'approved':
            statusColorClass = 'text-blue-800 bg-blue-100'; // Blue for approved
            break;
          case 'rejected':
          case 'cancelled':
            statusColorClass = 'text-red-800 bg-red-100'; // Red for rejected/cancelled
            break;
          case 'completed':
            statusColorClass = 'text-green-800 bg-green-100'; // Green for completed
            break;
          case 'rented':
            // Status ini mungkin muncul jika transaksi sewa masih berjalan
            statusColorClass = 'text-purple-800 bg-purple-100'; // Purple for rented
            break;
          // Tambahkan case lain jika ada status transaksi lain di backend
          default:
            // Gunakan default gray jika status tidak dikenali
            break;
        }

        // Combine base badge classes with status-specific color classes
        var badgeClasses = "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium capitalize ".concat(statusColorClass);
        return "\n                    <div class=\"border p-4 rounded-md shadow-sm bg-white flex justify-between items-center flex-wrap\">\n                         <div class=\"flex-1 min-w-0 mr-4\">\n                            <h3 class=\"text-lg font-semibold\">Item: ".concat(transaction.item_name || 'Nama Item Tidak Diketahui', "</h3>\n                            <p>Tipe Transaksi: <span class=\"capitalize\">").concat(transaction.type, "</span></p>\n                            <p>Status: <span class=\"").concat(badgeClasses, "\">").concat(statusDisplay, "</span></p>\n                            <p>Pembeli/Penyewa: ").concat(transaction.buyer_name || 'Tidak Diketahui', "</p>\n                            <p>Total Harga: Rp ").concat(transaction.total_price ? parseFloat(transaction.total_price).toLocaleString('id-ID') : 'N/A', "</p>\n                            ").concat(transaction.type === 'rent' ? "\n                                <p>Tanggal Sewa: ".concat(transaction.rent_start_date ? new Date(transaction.rent_start_date).toLocaleDateString('id-ID') : '-', " - ").concat(transaction.rent_end_date ? new Date(transaction.rent_end_date).toLocaleDateString('id-ID') : '-', "</p>\n                                <p>Deposit Dibayar: Rp ").concat(transaction.deposit_paid ? parseFloat(transaction.deposit_paid).toLocaleString('id-ID') : '0', "</p>\n                            ") : '', "\n                            <p>Tanggal Transaksi: ").concat(transaction.created_at ? new Date(transaction.created_at).toLocaleDateString('id-ID') : '-', "</p>\n                            <!-- Add more details as needed -->\n                         </div>\n                        <div class=\"mt-4 md:mt-0\">\n                           <a href=\"/#/transactions/").concat(transaction.id, "\" class=\"bg-blue-500 hover:bg-blue-700 text-white text-sm px-3 py-1 rounded inline-block\">Detail</a>\n                            <!-- TODO: Add status update buttons based on current status and type -->\n                        </div>\n                    </div>\n                ");
      }).join(''), "\n             </div>\n        ");
      // TODO: Setup event delegation for Detail/Status Update buttons
      // this.setupEventListeners();
    }
  }, {
    key: "fetchSellerTransactions",
    value: function () {
      var _fetchSellerTransactions = my_seller_transactions_page_asyncToGenerator(/*#__PURE__*/my_seller_transactions_page_regeneratorRuntime().mark(function _callee() {
        var response;
        return my_seller_transactions_page_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              this.isLoading = true;
              this.error = null;
              this.renderLayout(); // Show loading state
              _context.prev = 3;
              _context.next = 6;
              return authenticatedRequest("/transactions/seller", 'GET');
            case 6:
              response = _context.sent;
              if (response.status === 'success' && response.data) {
                console.log('Fetched seller transactions:', response.data);
                this.sellerTransactions = response.data; // Assuming response.data is the array
                this.error = null; // Clear any previous errors
              } else {
                console.error('Error fetching seller transactions:', response.message || 'Unknown error');
                this.sellerTransactions = []; // Clear data on error
                this.error = response.message || 'Gagal memuat transaksi penjual.';
              }
              _context.next = 15;
              break;
            case 10:
              _context.prev = 10;
              _context.t0 = _context["catch"](3);
              console.error('Error during API request for seller transactions:', _context.t0);
              this.sellerTransactions = []; // Clear data on error
              // apiService handles 401/403 redirect
              this.error = 'Terjadi kesalahan saat memuat transaksi penjual.';
            case 15:
              _context.prev = 15;
              this.isLoading = false; // Hide loading state
              this.renderSellerTransactions(); // Render the list (either with data or error/empty message)
              return _context.finish(15);
            case 19:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[3, 10, 15, 19]]);
      }));
      function fetchSellerTransactions() {
        return _fetchSellerTransactions.apply(this, arguments);
      }
      return fetchSellerTransactions;
    }() // TODO: Add setupEventListeners and handle status update button clicks later
  }]);
}(/*#__PURE__*/my_seller_transactions_page_wrapNativeSuper(HTMLElement));
customElements.define('my-seller-transactions-page', MySellerTransactionsPage);
;// ./user/src/script/components/community/community-page.js
function community_page_typeof(o) { "@babel/helpers - typeof"; return community_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, community_page_typeof(o); }
function community_page_toConsumableArray(r) { return community_page_arrayWithoutHoles(r) || community_page_iterableToArray(r) || community_page_unsupportedIterableToArray(r) || community_page_nonIterableSpread(); }
function community_page_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function community_page_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return community_page_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? community_page_arrayLikeToArray(r, a) : void 0; } }
function community_page_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function community_page_arrayWithoutHoles(r) { if (Array.isArray(r)) return community_page_arrayLikeToArray(r); }
function community_page_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function community_page_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ community_page_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == community_page_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(community_page_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function community_page_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function community_page_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { community_page_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { community_page_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function community_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function community_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, community_page_toPropertyKey(o.key), o); } }
function community_page_createClass(e, r, t) { return r && community_page_defineProperties(e.prototype, r), t && community_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function community_page_toPropertyKey(t) { var i = community_page_toPrimitive(t, "string"); return "symbol" == community_page_typeof(i) ? i : i + ""; }
function community_page_toPrimitive(t, r) { if ("object" != community_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != community_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function community_page_callSuper(t, o, e) { return o = community_page_getPrototypeOf(o), community_page_possibleConstructorReturn(t, community_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], community_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function community_page_possibleConstructorReturn(t, e) { if (e && ("object" == community_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return community_page_assertThisInitialized(t); }
function community_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function community_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && community_page_setPrototypeOf(t, e); }
function community_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return community_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !community_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return community_page_construct(t, arguments, community_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), community_page_setPrototypeOf(Wrapper, t); }, community_page_wrapNativeSuper(t); }
function community_page_construct(t, e, r) { if (community_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && community_page_setPrototypeOf(p, r.prototype), p; }
function community_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (community_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function community_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function community_page_setPrototypeOf(t, e) { return community_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, community_page_setPrototypeOf(t, e); }
function community_page_getPrototypeOf(t) { return community_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, community_page_getPrototypeOf(t); }



var CommunityPage = /*#__PURE__*/function (_HTMLElement) {
  function CommunityPage() {
    var _this;
    community_page_classCallCheck(this, CommunityPage);
    _this = community_page_callSuper(this, CommunityPage);
    _this._messages = [];
    _this._socket = null;
    _this._isSocketConnected = false;
    _this._isLoading = false;
    _this._hasMoreMessages = true;
    _this._currentPage = 1;
    _this._messagesPerPage = 20;

    // Bind methods
    _this.fetchMessageHistory = _this.fetchMessageHistory.bind(_this);
    _this.loadMoreMessages = _this.loadMoreMessages.bind(_this);
    _this._connectSocket = _this._connectSocket.bind(_this);
    _this._handleNewMessage = _this._handleNewMessage.bind(_this);
    _this._handleScroll = _this._handleScroll.bind(_this);
    return _this;
  }
  community_page_inherits(CommunityPage, _HTMLElement);
  return community_page_createClass(CommunityPage, [{
    key: "connectedCallback",
    value: function () {
      var _connectedCallback = community_page_asyncToGenerator(/*#__PURE__*/community_page_regeneratorRuntime().mark(function _callee() {
        var _this2 = this;
        return community_page_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (utils.isAuthenticated()) {
                _context.next = 3;
                break;
              }
              utils.redirectToLogin();
              return _context.abrupt("return");
            case 3:
              _context.next = 5;
              return this.fetchMessageHistory();
            case 5:
              // page 1
              this._connectSocket();
              this.render();
              this._setupScrollListener();

              // ✅ Auto-scroll to bottom on first load
              setTimeout(function () {
                var container = _this2.querySelector('.messages-container');
                if (container) {
                  container.scrollTop = container.scrollHeight;
                }
              }, 0);
            case 9:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function connectedCallback() {
        return _connectedCallback.apply(this, arguments);
      }
      return connectedCallback;
    }()
  }, {
    key: "fetchMessageHistory",
    value: function () {
      var _fetchMessageHistory = community_page_asyncToGenerator(/*#__PURE__*/community_page_regeneratorRuntime().mark(function _callee2() {
        var page,
          response,
          newMessages,
          _args2 = arguments;
        return community_page_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              page = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : 1;
              _context2.prev = 1;
              this._isLoading = true;
              _context2.next = 5;
              return authenticatedRequest("/community-messages?page=".concat(page, "&limit=").concat(this._messagesPerPage), 'GET');
            case 5:
              response = _context2.sent;
              if (response.status === 'success') {
                newMessages = response.data || [];
                if (page === 1) {
                  this._messages = newMessages;
                } else {
                  // Prepend older messages at the beginning
                  this._messages = [].concat(community_page_toConsumableArray(newMessages), community_page_toConsumableArray(this._messages));
                }
                this._hasMoreMessages = newMessages.length === this._messagesPerPage;
                this._currentPage = page;
              }
              _context2.next = 12;
              break;
            case 9:
              _context2.prev = 9;
              _context2.t0 = _context2["catch"](1);
              console.error('Error fetching message history:', _context2.t0);
            case 12:
              _context2.prev = 12;
              this._isLoading = false;
              return _context2.finish(12);
            case 15:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[1, 9, 12, 15]]);
      }));
      function fetchMessageHistory() {
        return _fetchMessageHistory.apply(this, arguments);
      }
      return fetchMessageHistory;
    }()
  }, {
    key: "loadMoreMessages",
    value: function () {
      var _loadMoreMessages = community_page_asyncToGenerator(/*#__PURE__*/community_page_regeneratorRuntime().mark(function _callee3() {
        var container, previousScrollHeight;
        return community_page_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if (!(this._isLoading || !this._hasMoreMessages)) {
                _context3.next = 2;
                break;
              }
              return _context3.abrupt("return");
            case 2:
              container = this.querySelector('.messages-container');
              previousScrollHeight = container.scrollHeight;
              _context3.next = 6;
              return this.fetchMessageHistory(this._currentPage + 1);
            case 6:
              this.render();

              // Maintain scroll position after loading older messages
              setTimeout(function () {
                var newScrollHeight = container.scrollHeight;
                container.scrollTop = newScrollHeight - previousScrollHeight;
              }, 0);
            case 8:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this);
      }));
      function loadMoreMessages() {
        return _loadMoreMessages.apply(this, arguments);
      }
      return loadMoreMessages;
    }()
  }, {
    key: "_setupScrollListener",
    value: function _setupScrollListener() {
      var container = this.querySelector('.messages-container');
      if (container) {
        container.addEventListener('scroll', this._handleScroll);
      }
    }
  }, {
    key: "_handleScroll",
    value: function _handleScroll(e) {
      var container = e.target;
      // Load more when scrolled to top
      if (container.scrollTop <= 100 && this._hasMoreMessages && !this._isLoading) {
        this.loadMoreMessages();
      }
    }
  }, {
    key: "_connectSocket",
    value: function _connectSocket() {
      var _this3 = this;
      var token = localStorage.getItem('token');
      this._socket = esm_lookup('http://localhost:5000', {
        auth: {
          token: token
        }
      });
      this._socket.on('connect', function () {
        _this3._isSocketConnected = true;
        _this3._socket.emit('joinCommunity');
        _this3._setupInputListeners();
      });
      this._socket.on('newCommunityMessage', this._handleNewMessage);
    }
  }, {
    key: "_setupInputListeners",
    value: function _setupInputListeners() {
      var _this4 = this;
      var sendBtn = this.querySelector('.send-button');
      var input = this.querySelector('.message-input-field');
      var sendMessage = function sendMessage() {
        var message = input === null || input === void 0 ? void 0 : input.value.trim();
        if (message && _this4._isSocketConnected) {
          _this4._socket.emit('sendCommunityMessage', {
            content: message
          });
          input.value = '';
          input.style.height = 'auto';
        }
      };

      // Remove existing listeners to prevent duplicates
      sendBtn === null || sendBtn === void 0 || sendBtn.removeEventListener('click', this._sendMessage);
      input === null || input === void 0 || input.removeEventListener('keypress', this._handleKeypress);
      input === null || input === void 0 || input.removeEventListener('input', this._handleInput);

      // Store bound functions
      this._sendMessage = sendMessage;
      this._handleKeypress = function (e) {
        if (e.key === 'Enter' && !e.shiftKey) {
          e.preventDefault();
          sendMessage();
        }
      };
      this._handleInput = function (e) {
        e.target.style.height = 'auto';
        e.target.style.height = Math.min(e.target.scrollHeight, 120) + 'px';
      };

      // Add new listeners
      sendBtn === null || sendBtn === void 0 || sendBtn.addEventListener('click', this._sendMessage);
      input === null || input === void 0 || input.addEventListener('keypress', this._handleKeypress);
      input === null || input === void 0 || input.addEventListener('input', this._handleInput);
    }
  }, {
    key: "_handleNewMessage",
    value: function _handleNewMessage(message) {
      var container = this.querySelector('.messages-container');
      var currentUserId = localStorage.getItem('userId');
      var isOwn = message.sender_id == currentUserId;
      var wasAtBottom = container && container.scrollTop + container.clientHeight >= container.scrollHeight - 50;

      // Tambahkan ke internal array
      this._messages.push(message);

      // ✅ Tambahkan langsung ke DOM, bukan render ulang
      if (container) {
        var msgEl = document.createElement('div');
        msgEl.className = "message ".concat(isOwn ? 'own' : '');
        var initials = (message.sender_name || 'U').charAt(0).toUpperCase();
        msgEl.innerHTML = "\n        <div class=\"message-avatar\">".concat(initials, "</div>\n        <div class=\"message-content\">\n          <div class=\"message-bubble\">").concat(message.content, "</div>\n          <div class=\"message-meta\">\n            ").concat(!isOwn ? "<span class=\"message-sender\">".concat(message.sender_name || 'User', "</span>") : '', "\n            <span class=\"message-time\">").concat(this._formatTime(message.created_at), "</span>\n          </div>\n        </div>\n      ");
        container.appendChild(msgEl);

        // ✅ Scroll ke bawah hanya jika:
        // - kamu sendiri yang kirim
        // - atau sebelumnya user memang scroll di bawah
        if (isOwn || wasAtBottom) {
          setTimeout(function () {
            container.scrollTop = container.scrollHeight;
          }, 0);
        }
      }
    }
  }, {
    key: "_formatTime",
    value: function _formatTime(dateString) {
      var date = new Date(dateString);
      var now = new Date();
      var diffInHours = (now - date) / (1000 * 60 * 60);
      if (diffInHours < 24) {
        return date.toLocaleTimeString('id-ID', {
          hour: '2-digit',
          minute: '2-digit'
        });
      } else {
        return date.toLocaleDateString('id-ID', {
          day: '2-digit',
          month: '2-digit',
          hour: '2-digit',
          minute: '2-digit'
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      var _this$_messages$,
        _this5 = this;
      var provinceName = ((_this$_messages$ = this._messages[0]) === null || _this$_messages$ === void 0 ? void 0 : _this$_messages$.sender_province_name) || '';
      var currentUserId = localStorage.getItem('userId');
      this.innerHTML = "\n      <style>\n        * {\n          box-sizing: border-box;\n        }\n        \n        .community-container {\n          max-width: 800px;\n          margin: 0 auto;\n          height: 80vh;\n          display: flex;\n          flex-direction: column;\n          background: #f8fafc;\n          border: 1px solid #e2e8f0;\n          border-radius: 12px;\n          overflow: hidden;\n        }\n        \n        .chat-header {\n          background: #ffffff;\n          padding: 16px 20px;\n          border-bottom: 1px solid #e2e8f0;\n          display: flex;\n          align-items: center;\n          gap: 12px;\n        }\n        \n        .chat-header-info h3 {\n          margin: 0;\n          font-size: 18px;\n          font-weight: 600;\n          color: #1a202c;\n        }\n        \n        .chat-header-info p {\n          margin: 0;\n          font-size: 14px;\n          color: #718096;\n        }\n        \n        .online-indicator {\n          width: 12px;\n          height: 12px;\n          background: #48bb78;\n          border-radius: 50%;\n          border: 2px solid #ffffff;\n        }\n        \n        .messages-container {\n          flex: 1;\n          overflow-y: auto;\n          padding: 16px;\n          background: #ffffff;\n          scroll-behavior: smooth;\n        }\n        \n        .messages-container::-webkit-scrollbar {\n          width: 6px;\n        }\n        \n        .messages-container::-webkit-scrollbar-track {\n          background: transparent;\n        }\n        \n        .messages-container::-webkit-scrollbar-thumb {\n          background: #cbd5e0;\n          border-radius: 3px;\n        }\n        \n        .loading-indicator {\n          text-align: center;\n          padding: 12px;\n          color: #718096;\n          font-size: 14px;\n        }\n        \n        .message {\n          margin-bottom: 16px;\n          display: flex;\n          align-items: flex-start;\n          gap: 12px;\n        }\n        \n        .message.own {\n          flex-direction: row-reverse;\n        }\n        \n        .message-avatar {\n          width: 36px;\n          height: 36px;\n          border-radius: 50%;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: white;\n          font-weight: 600;\n          font-size: 14px;\n          flex-shrink: 0;\n        }\n        \n        .message-content {\n          max-width: 70%;\n          min-width: 120px;\n        }\n        \n        .message-bubble {\n          padding: 12px 16px;\n          border-radius: 18px;\n          background: #f7fafc;\n          border: 1px solid #e2e8f0;\n          word-wrap: break-word;\n          line-height: 1.4;\n        }\n        \n        .message.own .message-bubble {\n          background: #4299e1;\n          color: white;\n          border-color: #4299e1;\n        }\n        \n        .message-meta {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n          margin-top: 4px;\n          font-size: 12px;\n          color: #718096;\n        }\n        \n        .message.own .message-meta {\n          justify-content: flex-end;\n        }\n        \n        .message-sender {\n          font-weight: 500;\n        }\n        \n        .message-time {\n          color: #a0aec0;\n        }\n        \n        .message-input-container {\n          padding: 16px 20px;\n          background: #ffffff;\n          border-top: 1px solid #e2e8f0;\n          display: flex;\n          align-items: flex-end;\n          gap: 12px;\n        }\n        \n        .message-input-field {\n          flex: 1;\n          padding: 12px 16px;\n          border: 1px solid #e2e8f0;\n          border-radius: 24px;\n          background: #f7fafc;\n          resize: none;\n          outline: none;\n          font-family: inherit;\n          font-size: 14px;\n          line-height: 1.4;\n          max-height: 120px;\n          min-height: 44px;\n          transition: all 0.2s ease;\n        }\n        \n        .message-input-field:focus {\n          border-color: #4299e1;\n          background: #ffffff;\n          box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n        }\n        \n        .message-input-field::placeholder {\n          color: #a0aec0;\n        }\n        \n        .send-button {\n          width: 44px;\n          height: 44px;\n          border: none;\n          border-radius: 50%;\n          background: #4299e1;\n          color: white;\n          cursor: pointer;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          transition: all 0.2s ease;\n          flex-shrink: 0;\n        }\n        \n        .send-button:hover {\n          background: #3182ce;\n          transform: scale(1.05);\n        }\n        \n        .send-button:active {\n          transform: scale(0.95);\n        }\n        \n        .empty-state {\n          text-align: center;\n          color: #718096;\n          padding: 40px 20px;\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n          gap: 12px;\n        }\n        \n        .empty-state-icon {\n          width: 64px;\n          height: 64px;\n          border-radius: 50%;\n          background: #f7fafc;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-size: 24px;\n        }\n        \n        @media (max-width: 768px) {\n          .community-container {\n            height: 90vh;\n            border-radius: 0;\n            border: none;\n          }\n          \n          .message-content {\n            max-width: 85%;\n          }\n          \n          .chat-header {\n            padding: 12px 16px;\n          }\n          \n          .messages-container {\n            padding: 12px;\n          }\n          \n          .message-input-container {\n            padding: 12px 16px;\n          }\n        }\n      </style>\n      <div class=\"community-container\">\n        <div class=\"chat-header\">\n          <div class=\"online-indicator\"></div>\n          <div class=\"chat-header-info\">\n            <h3>Komunitas ".concat(provinceName, "</h3>\n            <p>").concat(this._isSocketConnected ? 'Online' : 'Connecting...', "</p>\n          </div>\n        </div>\n        \n        <div class=\"messages-container\">\n          ").concat(this._isLoading && this._currentPage > 1 ? '<div class="loading-indicator">Memuat pesan lama...</div>' : '', "\n          \n          ").concat(this._messages.length === 0 ? "<div class=\"empty-state\">\n              <div class=\"empty-state-icon\">\uD83D\uDCAC</div>\n              <p>Belum ada pesan dalam komunitas ini</p>\n              <p>Mulai percakapan dengan mengirim pesan pertama!</p>\n            </div>" : this._messages.map(function (msg) {
        var isOwn = currentUserId && msg.sender_id == currentUserId;
        var initials = (msg.sender_name || 'U').charAt(0).toUpperCase();
        return "\n                <div class=\"message ".concat(isOwn ? 'own' : '', "\">\n                  <div class=\"message-avatar\">").concat(initials, "</div>\n                  <div class=\"message-content\">\n                    <div class=\"message-bubble\">").concat(msg.content, "</div>\n                    <div class=\"message-meta\">\n                      ").concat(!isOwn ? "<span class=\"message-sender\">".concat(msg.sender_name || 'User', "</span>") : '', "\n                      <span class=\"message-time\">").concat(_this5._formatTime(msg.created_at), "</span>\n                    </div>\n                  </div>\n                </div>\n              ");
      }).join(''), "\n        </div>\n        \n        <div class=\"message-input-container\">\n          <textarea class=\"message-input-field\" placeholder=\"Ketik pesan...\" rows=\"1\"></textarea>\n          <button class=\"send-button\">\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n              <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\n              <polygon points=\"22,2 15,22 11,13 2,9\"></polygon>\n            </svg>\n          </button>\n        </div>\n      </div>\n    ");

      // Re-setup listeners after render
      setTimeout(function () {
        _this5._setupScrollListener();
        if (_this5._isSocketConnected) {
          _this5._setupInputListeners();
        }
      }, 0);
    }
  }]);
}(/*#__PURE__*/community_page_wrapNativeSuper(HTMLElement));
customElements.define('community-page', CommunityPage);
;// ./user/src/script/utils/push-notification-helper.js
function push_notification_helper_typeof(o) { "@babel/helpers - typeof"; return push_notification_helper_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, push_notification_helper_typeof(o); }
function push_notification_helper_createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = push_notification_helper_unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function push_notification_helper_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return push_notification_helper_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? push_notification_helper_arrayLikeToArray(r, a) : void 0; } }
function push_notification_helper_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function push_notification_helper_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ push_notification_helper_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == push_notification_helper_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(push_notification_helper_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function push_notification_helper_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function push_notification_helper_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { push_notification_helper_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { push_notification_helper_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function push_notification_helper_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function push_notification_helper_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, push_notification_helper_toPropertyKey(o.key), o); } }
function push_notification_helper_createClass(e, r, t) { return r && push_notification_helper_defineProperties(e.prototype, r), t && push_notification_helper_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function push_notification_helper_toPropertyKey(t) { var i = push_notification_helper_toPrimitive(t, "string"); return "symbol" == push_notification_helper_typeof(i) ? i : i + ""; }
function push_notification_helper_toPrimitive(t, r) { if ("object" != push_notification_helper_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != push_notification_helper_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }

var PushNotificationHelper = /*#__PURE__*/function () {
  function PushNotificationHelper() {
    push_notification_helper_classCallCheck(this, PushNotificationHelper);
    this.vapidPublicKey = null; // Jangan hardcode, ambil dari server
    this.isInitializing = false; // Prevent multiple initialization
  }

  // ===== VAPID Key Management =====
  return push_notification_helper_createClass(PushNotificationHelper, [{
    key: "getVapidPublicKey",
    value: function () {
      var _getVapidPublicKey = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee() {
        var response;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return apiGet("/notifications/vapid-public-key");
            case 3:
              response = _context.sent;
              if (!(response && response.status === "success" && response.data && response.data.publicKey)) {
                _context.next = 8;
                break;
              }
              this.vapidPublicKey = response.data.publicKey;
              console.log("VAPID public key retrieved from server:", this.vapidPublicKey);
              return _context.abrupt("return", this.vapidPublicKey);
            case 8:
              console.error("Failed to get VAPID public key from server");
              return _context.abrupt("return", null);
            case 12:
              _context.prev = 12;
              _context.t0 = _context["catch"](0);
              console.error("Error getting VAPID public key:", _context.t0);
              return _context.abrupt("return", null);
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 12]]);
      }));
      function getVapidPublicKey() {
        return _getVapidPublicKey.apply(this, arguments);
      }
      return getVapidPublicKey;
    }() // ===== Service Worker Management =====
  }, {
    key: "registerServiceWorker",
    value: function () {
      var _registerServiceWorker = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee2() {
        var registrations, _iterator, _step, _registration, registration;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              if ("serviceWorker" in navigator) {
                _context2.next = 4;
                break;
              }
              console.error("Service workers are not supported.");
              return _context2.abrupt("return", null);
            case 4:
              _context2.next = 6;
              return navigator.serviceWorker.getRegistrations();
            case 6:
              registrations = _context2.sent;
              _iterator = push_notification_helper_createForOfIteratorHelper(registrations);
              _context2.prev = 8;
              _iterator.s();
            case 10:
              if ((_step = _iterator.n()).done) {
                _context2.next = 17;
                break;
              }
              _registration = _step.value;
              if (!(_registration.active && _registration.active.scriptURL.includes("sw.bundle.js"))) {
                _context2.next = 15;
                break;
              }
              console.log("Service Worker sudah terdaftar:", _registration);
              return _context2.abrupt("return", _registration);
            case 15:
              _context2.next = 10;
              break;
            case 17:
              _context2.next = 22;
              break;
            case 19:
              _context2.prev = 19;
              _context2.t0 = _context2["catch"](8);
              _iterator.e(_context2.t0);
            case 22:
              _context2.prev = 22;
              _iterator.f();
              return _context2.finish(22);
            case 25:
              // ✅ Jika belum ada, baru register
              console.log("No existing service worker found, registering new one...");
              _context2.next = 28;
              return navigator.serviceWorker.register("/sw.bundle.js");
            case 28:
              registration = _context2.sent;
              if (!registration.installing) {
                _context2.next = 32;
                break;
              }
              _context2.next = 32;
              return new Promise(function (resolve) {
                registration.installing.addEventListener("statechange", function (e) {
                  if (e.target.state === "activated") {
                    console.log("Service worker activated");
                    resolve();
                  }
                });
              });
            case 32:
              console.log("Service Worker registered successfully:", registration);
              return _context2.abrupt("return", registration);
            case 36:
              _context2.prev = 36;
              _context2.t1 = _context2["catch"](0);
              console.error("Service Worker registration failed:", _context2.t1);
              return _context2.abrupt("return", null);
            case 40:
            case "end":
              return _context2.stop();
          }
        }, _callee2, null, [[0, 36], [8, 19, 22, 25]]);
      }));
      function registerServiceWorker() {
        return _registerServiceWorker.apply(this, arguments);
      }
      return registerServiceWorker;
    }() // ===== Notification Permission =====
  }, {
    key: "requestPermission",
    value: function () {
      var _requestPermission = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee3() {
        var result;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              if ("Notification" in window) {
                _context3.next = 3;
                break;
              }
              console.log("Notifications are not supported in this browser");
              return _context3.abrupt("return", false);
            case 3:
              _context3.next = 5;
              return Notification.requestPermission();
            case 5:
              result = _context3.sent;
              console.log("Notification permission result:", result);
              if (!(result === "denied")) {
                _context3.next = 10;
                break;
              }
              console.log("Notification permission denied");
              return _context3.abrupt("return", false);
            case 10:
              if (!(result === "default")) {
                _context3.next = 13;
                break;
              }
              console.log("Notification permission request was dismissed");
              return _context3.abrupt("return", false);
            case 13:
              return _context3.abrupt("return", result === "granted");
            case 14:
            case "end":
              return _context3.stop();
          }
        }, _callee3);
      }));
      function requestPermission() {
        return _requestPermission.apply(this, arguments);
      }
      return requestPermission;
    }() // ===== Support Checks =====
  }, {
    key: "isNotificationSupported",
    value: function isNotificationSupported() {
      if (!("Notification" in window)) {
        console.log("Notifications are not supported in this browser");
        return false;
      }
      if (!("serviceWorker" in navigator)) {
        console.log("Service workers are not supported in this browser");
        return false;
      }
      if (!("PushManager" in window)) {
        console.log("Push messaging is not supported in this browser");
        return false;
      }
      return true;
    }

    // ===== Server Subscription Status =====
  }, {
    key: "checkServerSubscription",
    value: function () {
      var _checkServerSubscription = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee4() {
        var response;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee4$(_context4) {
          while (1) switch (_context4.prev = _context4.next) {
            case 0:
              _context4.prev = 0;
              _context4.next = 3;
              return apiGet("/notifications/subscription-status");
            case 3:
              response = _context4.sent;
              console.log("Server subscription status:", response);
              if (!(response && response.status === "success")) {
                _context4.next = 7;
                break;
              }
              return _context4.abrupt("return", {
                hasSubscription: response.data.hasSubscription,
                isActive: response.data.isActive,
                subscription: response.data.subscription
              });
            case 7:
              return _context4.abrupt("return", {
                hasSubscription: false,
                isActive: false,
                subscription: null
              });
            case 10:
              _context4.prev = 10;
              _context4.t0 = _context4["catch"](0);
              console.error("Error checking server subscription:", _context4.t0);
              return _context4.abrupt("return", {
                hasSubscription: false,
                isActive: false,
                subscription: null
              });
            case 14:
            case "end":
              return _context4.stop();
          }
        }, _callee4, null, [[0, 10]]);
      }));
      function checkServerSubscription() {
        return _checkServerSubscription.apply(this, arguments);
      }
      return checkServerSubscription;
    }() // ===== Subscription Management =====
  }, {
    key: "subscribe",
    value: function () {
      var _subscribe = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee5(registration) {
        var existingSubscription, serverStatus, newSubscription;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee5$(_context5) {
          while (1) switch (_context5.prev = _context5.next) {
            case 0:
              _context5.prev = 0;
              _context5.next = 3;
              return this._getSubscription(registration);
            case 3:
              existingSubscription = _context5.sent;
              if (!existingSubscription) {
                _context5.next = 26;
                break;
              }
              console.log("Already subscribed locally");

              // ✅ Verifikasi dengan server tanpa unsubscribe otomatis
              _context5.next = 8;
              return this.checkServerSubscription();
            case 8:
              serverStatus = _context5.sent;
              if (!(serverStatus.hasSubscription && serverStatus.isActive)) {
                _context5.next = 14;
                break;
              }
              console.log("Subscription also exists on server");
              return _context5.abrupt("return", existingSubscription);
            case 14:
              console.log("Local subscription exists but not on server, sending to server...");
              // ✅ Coba kirim subscription yang ada ke server dulu
              _context5.prev = 15;
              _context5.next = 18;
              return this._sendSubscriptionToServer(existingSubscription);
            case 18:
              return _context5.abrupt("return", existingSubscription);
            case 21:
              _context5.prev = 21;
              _context5.t0 = _context5["catch"](15);
              console.log("Failed to send existing subscription to server, creating new one...");
              _context5.next = 26;
              return existingSubscription.unsubscribe();
            case 26:
              if (this.vapidPublicKey) {
                _context5.next = 29;
                break;
              }
              console.error("VAPID public key not available");
              throw new Error("VAPID public key not available");
            case 29:
              _context5.next = 31;
              return registration.pushManager.subscribe({
                userVisibleOnly: true,
                applicationServerKey: this._urlBase64ToUint8Array(this.vapidPublicKey)
              });
            case 31:
              newSubscription = _context5.sent;
              console.log("Successfully subscribed to push notifications:", newSubscription);
              _context5.next = 35;
              return this._sendSubscriptionToServer(newSubscription);
            case 35:
              return _context5.abrupt("return", newSubscription);
            case 38:
              _context5.prev = 38;
              _context5.t1 = _context5["catch"](0);
              console.error("Failed to subscribe to push notifications:", _context5.t1);
              throw _context5.t1;
            case 42:
            case "end":
              return _context5.stop();
          }
        }, _callee5, this, [[0, 38], [15, 21]]);
      }));
      function subscribe(_x) {
        return _subscribe.apply(this, arguments);
      }
      return subscribe;
    }()
  }, {
    key: "unsubscribe",
    value: function () {
      var _unsubscribe = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee6(registration) {
        var subscription;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.prev = 0;
              _context6.next = 3;
              return this._getSubscription(registration);
            case 3:
              subscription = _context6.sent;
              if (subscription) {
                _context6.next = 7;
                break;
              }
              console.log("No subscription found");
              return _context6.abrupt("return", {
                error: false,
                message: "No subscription found"
              });
            case 7:
              _context6.prev = 7;
              _context6.next = 10;
              return unsubscribeNotification(subscription.endpoint);
            case 10:
              _context6.next = 15;
              break;
            case 12:
              _context6.prev = 12;
              _context6.t0 = _context6["catch"](7);
              console.warn("Failed to unsubscribe from server:", _context6.t0);
              // Lanjutkan untuk unsubscribe dari browser
            case 15:
              _context6.next = 17;
              return subscription.unsubscribe();
            case 17:
              console.log("Successfully unsubscribed from push notifications");

              // ✅ Clear initialization flag
              this.markAsUninitialized();
              return _context6.abrupt("return", {
                error: false,
                message: "Successfully unsubscribed"
              });
            case 22:
              _context6.prev = 22;
              _context6.t1 = _context6["catch"](0);
              console.error("Failed to unsubscribe from push notifications:", _context6.t1);
              throw _context6.t1;
            case 26:
            case "end":
              return _context6.stop();
          }
        }, _callee6, this, [[0, 22], [7, 12]]);
      }));
      function unsubscribe(_x2) {
        return _unsubscribe.apply(this, arguments);
      }
      return unsubscribe;
    }()
  }, {
    key: "_getSubscription",
    value: function () {
      var _getSubscription2 = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee7(registration) {
        return push_notification_helper_regeneratorRuntime().wrap(function _callee7$(_context7) {
          while (1) switch (_context7.prev = _context7.next) {
            case 0:
              _context7.next = 2;
              return registration.pushManager.getSubscription();
            case 2:
              return _context7.abrupt("return", _context7.sent);
            case 3:
            case "end":
              return _context7.stop();
          }
        }, _callee7);
      }));
      function _getSubscription(_x3) {
        return _getSubscription2.apply(this, arguments);
      }
      return _getSubscription;
    }() // ===== Utility Functions =====
  }, {
    key: "_urlBase64ToUint8Array",
    value: function _urlBase64ToUint8Array(base64String) {
      var padding = "=".repeat((4 - base64String.length % 4) % 4);
      var base64 = (base64String + padding).replace(/-/g, "+").replace(/_/g, "/");
      var rawData = window.atob(base64);
      var outputArray = new Uint8Array(rawData.length);
      for (var i = 0; i < rawData.length; ++i) {
        outputArray[i] = rawData.charCodeAt(i);
      }
      return outputArray;
    }

    // ===== Server Communication =====
  }, {
    key: "_sendSubscriptionToServer",
    value: function () {
      var _sendSubscriptionToServer2 = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee8(subscription) {
        var subscriptionData, response;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee8$(_context8) {
          while (1) switch (_context8.prev = _context8.next) {
            case 0:
              _context8.prev = 0;
              subscriptionData = {
                endpoint: subscription.endpoint,
                keys: {
                  p256dh: btoa(String.fromCharCode.apply(null, new Uint8Array(subscription.getKey("p256dh")))),
                  auth: btoa(String.fromCharCode.apply(null, new Uint8Array(subscription.getKey("auth"))))
                }
              };
              _context8.next = 4;
              return subscribeNotification(subscriptionData);
            case 4:
              response = _context8.sent;
              console.log("Subscription successfully sent to server:", response);
              return _context8.abrupt("return", response);
            case 9:
              _context8.prev = 9;
              _context8.t0 = _context8["catch"](0);
              console.error("Failed to send subscription to server:", _context8.t0);
              throw _context8.t0;
            case 13:
            case "end":
              return _context8.stop();
          }
        }, _callee8, null, [[0, 9]]);
      }));
      function _sendSubscriptionToServer(_x4) {
        return _sendSubscriptionToServer2.apply(this, arguments);
      }
      return _sendSubscriptionToServer;
    }() // ===== Initialization Status =====
  }, {
    key: "isInitialized",
    value: function isInitialized() {
      return localStorage.getItem("notification_initialized") === "true";
    }
  }, {
    key: "markAsInitialized",
    value: function markAsInitialized() {
      localStorage.setItem("notification_initialized", "true");
    }
  }, {
    key: "markAsUninitialized",
    value: function markAsUninitialized() {
      localStorage.removeItem("notification_initialized");
    }

    // ===== Main Initialization Method =====
  }, {
    key: "initializePushNotifications",
    value: function () {
      var _initializePushNotifications = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee9() {
        var vapidKey, registration, permissionGranted, subscription, serverStatus;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee9$(_context9) {
          while (1) switch (_context9.prev = _context9.next) {
            case 0:
              _context9.prev = 0;
              if (!this.isInitializing) {
                _context9.next = 4;
                break;
              }
              console.log("Push notification initialization already in progress");
              return _context9.abrupt("return", false);
            case 4:
              this.isInitializing = true;
              console.log("Starting push notification initialization...");

              // ✅ Check if notifications are supported
              if (this.isNotificationSupported()) {
                _context9.next = 10;
                break;
              }
              console.log("Notifications not supported, skipping initialization");
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 10:
              _context9.next = 12;
              return this.getVapidPublicKey();
            case 12:
              vapidKey = _context9.sent;
              if (vapidKey) {
                _context9.next = 17;
                break;
              }
              console.error("Failed to get VAPID public key from server");
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 17:
              _context9.next = 19;
              return this.registerServiceWorker();
            case 19:
              registration = _context9.sent;
              if (registration) {
                _context9.next = 24;
                break;
              }
              console.error("Failed to register service worker");
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 24:
              _context9.next = 26;
              return this.requestPermission();
            case 26:
              permissionGranted = _context9.sent;
              if (permissionGranted) {
                _context9.next = 31;
                break;
              }
              console.error("Notification permission not granted");
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 31:
              _context9.next = 33;
              return this.subscribe(registration);
            case 33:
              subscription = _context9.sent;
              if (subscription) {
                _context9.next = 38;
                break;
              }
              console.error("Failed to subscribe to push notifications");
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 38:
              _context9.next = 40;
              return this.checkServerSubscription();
            case 40:
              serverStatus = _context9.sent;
              if (serverStatus.hasSubscription) {
                _context9.next = 45;
                break;
              }
              console.error("Subscription not found on server after initialization");
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 45:
              // ✅ Mark as initialized
              this.markAsInitialized();
              this.isInitializing = false;
              console.log("Push notifications initialized successfully");
              return _context9.abrupt("return", true);
            case 51:
              _context9.prev = 51;
              _context9.t0 = _context9["catch"](0);
              console.error("Error initializing push notifications:", _context9.t0);
              this.isInitializing = false;
              return _context9.abrupt("return", false);
            case 56:
            case "end":
              return _context9.stop();
          }
        }, _callee9, this, [[0, 51]]);
      }));
      function initializePushNotifications() {
        return _initializePushNotifications.apply(this, arguments);
      }
      return initializePushNotifications;
    }() // ===== ✅ PERBAIKAN: Strict Setup Check - WAJIB PUNYA SUBSCRIPTION =====
  }, {
    key: "needsNotificationSetup",
    value: function () {
      var _needsNotificationSetup = push_notification_helper_asyncToGenerator(/*#__PURE__*/push_notification_helper_regeneratorRuntime().mark(function _callee10() {
        var permission, serverStatus;
        return push_notification_helper_regeneratorRuntime().wrap(function _callee10$(_context10) {
          while (1) switch (_context10.prev = _context10.next) {
            case 0:
              _context10.prev = 0;
              if (this.isNotificationSupported()) {
                _context10.next = 3;
                break;
              }
              return _context10.abrupt("return", {
                needsSetup: true,
                reason: "not_supported",
                canProceed: false // ❌ BLOCK - tidak bisa pakai aplikasi
              });
            case 3:
              permission = Notification.permission;
              _context10.next = 6;
              return this.checkServerSubscription();
            case 6:
              serverStatus = _context10.sent;
              if (!(permission === "denied")) {
                _context10.next = 10;
                break;
              }
              console.log("Notification permission denied by user");
              return _context10.abrupt("return", {
                needsSetup: true,
                reason: "permission_denied",
                canProceed: false // ❌ BLOCK - tidak bisa pakai aplikasi
              });
            case 10:
              if (!(permission === "granted" && serverStatus.hasSubscription && serverStatus.isActive)) {
                _context10.next = 13;
                break;
              }
              console.log("User has active subscription on server");
              return _context10.abrupt("return", {
                needsSetup: false,
                reason: "already_subscribed",
                canProceed: true // ✅ ALLOW - bisa pakai aplikasi
              });
            case 13:
              if (!(permission === "granted" && !serverStatus.hasSubscription)) {
                _context10.next = 16;
                break;
              }
              console.log("Permission granted but no server subscription, need to resubscribe");
              return _context10.abrupt("return", {
                needsSetup: true,
                reason: "missing_server_subscription",
                canProceed: false // ❌ BLOCK - harus resubscribe dulu
              });
            case 16:
              if (!(permission === "default")) {
                _context10.next = 19;
                break;
              }
              console.log("Notification permission not requested yet");
              return _context10.abrupt("return", {
                needsSetup: true,
                reason: "permission_not_requested",
                canProceed: false // ❌ BLOCK - harus request permission dulu
              });
            case 19:
              return _context10.abrupt("return", {
                needsSetup: true,
                reason: "unknown",
                canProceed: false // ❌ BLOCK - kondisi tidak dikenali
              });
            case 22:
              _context10.prev = 22;
              _context10.t0 = _context10["catch"](0);
              console.error("Error checking notification setup needs:", _context10.t0);
              return _context10.abrupt("return", {
                needsSetup: true,
                reason: "error",
                canProceed: false // ❌ BLOCK - ada error
              });
            case 26:
            case "end":
              return _context10.stop();
          }
        }, _callee10, this, [[0, 22]]);
      }));
      function needsNotificationSetup() {
        return _needsNotificationSetup.apply(this, arguments);
      }
      return needsNotificationSetup;
    }()
  }]);
}();
/* harmony default export */ const push_notification_helper = (PushNotificationHelper);
;// ./user/src/script/components/notification-permission-popup.js
function notification_permission_popup_typeof(o) { "@babel/helpers - typeof"; return notification_permission_popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, notification_permission_popup_typeof(o); }
function notification_permission_popup_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ notification_permission_popup_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == notification_permission_popup_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(notification_permission_popup_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function notification_permission_popup_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function notification_permission_popup_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { notification_permission_popup_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { notification_permission_popup_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function notification_permission_popup_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function notification_permission_popup_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, notification_permission_popup_toPropertyKey(o.key), o); } }
function notification_permission_popup_createClass(e, r, t) { return r && notification_permission_popup_defineProperties(e.prototype, r), t && notification_permission_popup_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function notification_permission_popup_toPropertyKey(t) { var i = notification_permission_popup_toPrimitive(t, "string"); return "symbol" == notification_permission_popup_typeof(i) ? i : i + ""; }
function notification_permission_popup_toPrimitive(t, r) { if ("object" != notification_permission_popup_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != notification_permission_popup_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function notification_permission_popup_callSuper(t, o, e) { return o = notification_permission_popup_getPrototypeOf(o), notification_permission_popup_possibleConstructorReturn(t, notification_permission_popup_isNativeReflectConstruct() ? Reflect.construct(o, e || [], notification_permission_popup_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function notification_permission_popup_possibleConstructorReturn(t, e) { if (e && ("object" == notification_permission_popup_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return notification_permission_popup_assertThisInitialized(t); }
function notification_permission_popup_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function notification_permission_popup_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && notification_permission_popup_setPrototypeOf(t, e); }
function notification_permission_popup_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return notification_permission_popup_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !notification_permission_popup_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return notification_permission_popup_construct(t, arguments, notification_permission_popup_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), notification_permission_popup_setPrototypeOf(Wrapper, t); }, notification_permission_popup_wrapNativeSuper(t); }
function notification_permission_popup_construct(t, e, r) { if (notification_permission_popup_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && notification_permission_popup_setPrototypeOf(p, r.prototype), p; }
function notification_permission_popup_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (notification_permission_popup_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function notification_permission_popup_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function notification_permission_popup_setPrototypeOf(t, e) { return notification_permission_popup_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, notification_permission_popup_setPrototypeOf(t, e); }
function notification_permission_popup_getPrototypeOf(t) { return notification_permission_popup_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, notification_permission_popup_getPrototypeOf(t); }

var NotificationPermissionPopup = /*#__PURE__*/function (_HTMLElement) {
  function NotificationPermissionPopup() {
    var _this;
    notification_permission_popup_classCallCheck(this, NotificationPermissionPopup);
    _this = notification_permission_popup_callSuper(this, NotificationPermissionPopup);
    _this.isShown = false;
    _this.currentReason = null;
    return _this;
  }
  notification_permission_popup_inherits(NotificationPermissionPopup, _HTMLElement);
  return notification_permission_popup_createClass(NotificationPermissionPopup, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      console.log("NotificationPermissionPopup connected");

      // Listen for login events
      window.addEventListener("userLoggedIn", this.handleUserLoggedIn.bind(this));

      // Listen for notifications activated event to refresh the page
      window.addEventListener("notificationsActivated", this.handleNotificationsActivated.bind(this));
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      window.removeEventListener("userLoggedIn", this.handleUserLoggedIn);
      window.removeEventListener("notificationsActivated", this.handleNotificationsActivated);
    }
  }, {
    key: "handleUserLoggedIn",
    value: function handleUserLoggedIn() {
      var _this2 = this;
      console.log("NotificationPermissionPopup: User logged in event received");

      // Wait a bit for the login process to complete
      setTimeout(function () {
        _this2.checkAndShowPopup();
      }, 1000);
    }
  }, {
    key: "handleNotificationsActivated",
    value: function handleNotificationsActivated() {
      console.log("NotificationPermissionPopup: Notifications activated, refreshing route");

      // Refresh the current route to show the actual content
      setTimeout(function () {
        var currentHash = window.location.hash;
        if (currentHash && currentHash !== "#/login" && currentHash !== "#/register") {
          // Trigger router to re-evaluate the current route
          window.dispatchEvent(new HashChangeEvent("hashchange"));
        } else {
          // Default to home page
          window.location.hash = "#/";
        }
      }, 500);
    }
  }, {
    key: "checkAndShowPopup",
    value: function () {
      var _checkAndShowPopup = notification_permission_popup_asyncToGenerator(/*#__PURE__*/notification_permission_popup_regeneratorRuntime().mark(function _callee() {
        var token, helper, notificationStatus;
        return notification_permission_popup_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              token = localStorage.getItem("token");
              if (token) {
                _context.next = 4;
                break;
              }
              console.log("No token found, skipping notification check");
              return _context.abrupt("return");
            case 4:
              _context.prev = 4;
              helper = new push_notification_helper();
              _context.next = 8;
              return helper.needsNotificationSetup();
            case 8:
              notificationStatus = _context.sent;
              console.log("Checking popup conditions:", notificationStatus);
              if (notificationStatus.needsSetup && !notificationStatus.canProceed) {
                console.log("Conditions met, showing notification popup");
                this.triggerPopup(notificationStatus.reason);
              } else {
                console.log("Conditions not met for showing popup:", notificationStatus.reason);
              }
              _context.next = 16;
              break;
            case 13:
              _context.prev = 13;
              _context.t0 = _context["catch"](4);
              console.error("Error checking notification status:", _context.t0);
            case 16:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[4, 13]]);
      }));
      function checkAndShowPopup() {
        return _checkAndShowPopup.apply(this, arguments);
      }
      return checkAndShowPopup;
    }() // Method to manually trigger popup with reason
  }, {
    key: "triggerPopup",
    value: function triggerPopup() {
      var reason = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
      if (this.isShown) {
        console.log("Popup already shown, skipping");
        return;
      }
      this.currentReason = reason;
      console.log("Showing notification permission popup for reason:", reason);
      this.showPopup();
    }
  }, {
    key: "showPopup",
    value: function showPopup() {
      var _this3 = this;
      if (this.isShown) return;
      this.isShown = true;
      console.log("Rendering notification permission popup");

      // Customize content based on reason
      var title = "Aktifkan Notifikasi";
      var description = "Untuk menggunakan <strong>Pinjemin</strong>, Anda <strong>wajib</strong> mengaktifkan notifikasi.";
      var buttonText = "Aktifkan Notifikasi (Wajib)";
      var showRetryInfo = false;
      switch (this.currentReason) {
        case "permission_denied":
          title = "Notifikasi Diblokir";
          description = "Notifikasi telah diblokir. Mohon aktifkan melalui pengaturan browser Anda.";
          buttonText = "Coba Aktifkan Lagi";
          showRetryInfo = true;
          break;
        case "missing_server_subscription":
          title = "Perlu Daftar Ulang Notifikasi";
          description = "Notifikasi perlu didaftarkan ulang ke server. Ini hanya memerlukan satu klik.";
          buttonText = "Daftar Ulang Notifikasi";
          break;
        case "permission_not_requested":
          title = "Aktifkan Notifikasi";
          description = "Untuk menggunakan <strong>Pinjemin</strong>, Anda <strong>wajib</strong> mengaktifkan notifikasi.";
          buttonText = "Aktifkan Notifikasi (Wajib)";
          break;
        case "resubscribe":
          title = "Aktifkan Notifikasi";
          description = "Kami mendeteksi notifikasi Anda nonaktif. Klik di bawah untuk mengaktifkannya kembali.";
          buttonText = "Aktifkan Notifikasi (Wajib)";
          break;
      }
      this.innerHTML = "\n      <div class=\"fixed inset-0 bg-black bg-opacity-50 z-[9999] flex items-center justify-center p-4\">\n        <div class=\"bg-white rounded-lg shadow-xl max-w-md w-full p-6 transform transition-all\">\n          <div class=\"flex items-center mb-4\">\n            <div class=\"bg-blue-100 rounded-full p-3 mr-4\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n              </svg>\n            </div>\n            <h3 class=\"text-xl font-bold text-gray-900\">".concat(title, "</h3>\n          </div>\n          \n          <div class=\"mb-6\">\n            <p class=\"text-gray-700 mb-4 leading-relaxed\">\n              ").concat(description, "\n            </p>\n            \n            ").concat(showRetryInfo ? "\n              <div class=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\n                <p class=\"text-sm font-medium text-yellow-800 mb-2\">\n                  Cara mengaktifkan notifikasi yang diblokir:\n                </p>\n                <ol class=\"text-sm text-yellow-700 space-y-1 list-decimal list-inside\">\n                  <li>Klik ikon gembok/info di address bar browser</li>\n                  <li>Pilih \"Izinkan\" atau \"Allow\" untuk notifikasi</li>\n                  <li>Klik tombol di bawah untuk mencoba lagi</li>\n                </ol>\n              </div>\n            " : "\n              <div class=\"bg-blue-50 rounded-lg p-4 mb-4\">\n                <p class=\"text-sm font-medium text-blue-800 mb-2\">\n                  Anda akan mendapat notifikasi untuk:\n                </p>\n                <ul class=\"text-sm text-blue-700 space-y-1\">\n                  <li class=\"flex items-center\">\n                    <svg class=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    Status transaksi pembelian dan penjualan\n                  </li>\n                  <li class=\"flex items-center\">\n                    <svg class=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    Pengingat jatuh tempo sewa\n                  </li>\n                  <li class=\"flex items-center\">\n                    <svg class=\"w-4 h-4 mr-2 text-green-500\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                      <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n                    </svg>\n                    Pesan baru dari pengguna lain\n                  </li>\n                </ul>\n              </div>\n            ", "\n            \n            <div class=\"bg-red-50 border border-red-200 rounded-lg p-3 mb-4\">\n              <p class=\"text-sm text-red-700 font-medium\">\n                \u26A0\uFE0F Wajib: Anda tidak dapat menggunakan aplikasi tanpa mengaktifkan notifikasi.\n              </p>\n            </div>\n          </div>\n          \n          <div class=\"flex flex-col gap-3\">\n            <button id=\"notification-allow-btn\" class=\"w-full px-4 py-3 text-sm font-medium text-white bg-blue-600 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors\">\n              ").concat(buttonText, "\n            </button>\n          </div>\n          \n          <div id=\"error-message\" class=\"hidden mt-3 p-3 bg-red-50 border border-red-200 rounded-lg\">\n            <p class=\"text-red-600 text-sm\"></p>\n          </div>\n        </div>\n      </div>\n    ");

      // Add event listeners
      this.querySelector("#notification-allow-btn").addEventListener("click", function () {
        _this3.initializeNotifications();
      });

      // Prevent closing by clicking outside (since it's mandatory)
      this.querySelector(".fixed").addEventListener("click", function (e) {
        if (e.target === e.currentTarget) {
          _this3.showImportanceMessage();
        }
      });
    }
  }, {
    key: "showImportanceMessage",
    value: function showImportanceMessage() {
      var popup = this.querySelector(".bg-white");
      if (popup) {
        popup.classList.add("animate-bounce");

        // Show additional warning
        var existingWarning = this.querySelector("#mandatory-warning");
        if (!existingWarning) {
          var warningDiv = document.createElement("div");
          warningDiv.id = "mandatory-warning";
          warningDiv.className = "mt-4 p-3 bg-yellow-50 border border-yellow-200 rounded-lg";
          warningDiv.innerHTML = "\n          <p class=\"text-yellow-800 text-sm font-medium\">\n            \uD83D\uDEA8 Notifikasi wajib diaktifkan untuk melanjutkan menggunakan aplikasi!\n          </p>\n        ";
          var buttonContainer = this.querySelector(".flex.flex-col.gap-3");
          buttonContainer.parentNode.insertBefore(warningDiv, buttonContainer);
        }
        setTimeout(function () {
          popup.classList.remove("animate-bounce");
        }, 1000);
      }
    }
  }, {
    key: "hidePopup",
    value: function hidePopup() {
      this.isShown = false;
      this.currentReason = null;
      this.innerHTML = "";
    }
  }, {
    key: "showError",
    value: function showError(message) {
      var errorDiv = this.querySelector("#error-message");
      if (!errorDiv) {
        console.error("Error message element not found. Popup may not be rendered.");
        return;
      }
      var errorText = errorDiv.querySelector("p");
      if (errorDiv && errorText) {
        errorText.textContent = message;
        errorDiv.classList.remove("hidden");
      }
    }
  }, {
    key: "initializeNotifications",
    value: function () {
      var _initializeNotifications = notification_permission_popup_asyncToGenerator(/*#__PURE__*/notification_permission_popup_regeneratorRuntime().mark(function _callee2() {
        var allowBtn, helper, success, serverStatus, _allowBtn;
        return notification_permission_popup_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              console.log("Initializing push notifications...");
              allowBtn = this.querySelector("#notification-allow-btn");
              if (allowBtn) {
                allowBtn.innerHTML = "\n          <svg class=\"animate-spin -ml-1 mr-3 h-4 w-4 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Mengaktifkan...\n        ";
                allowBtn.disabled = true;
              }
              helper = new push_notification_helper();
              _context2.next = 7;
              return helper.initializePushNotifications();
            case 7:
              success = _context2.sent;
              if (!success) {
                _context2.next = 23;
                break;
              }
              console.log("Push notifications initialized successfully");

              // Verify subscription was created on server
              _context2.next = 12;
              return helper.checkServerSubscription();
            case 12:
              serverStatus = _context2.sent;
              if (!(serverStatus.hasSubscription && serverStatus.isActive)) {
                _context2.next = 20;
                break;
              }
              this.hidePopup();
              this.showSuccessMessage();

              // Mark as completed so popup won't show again until token expires
              localStorage.setItem("notification_permission_completed", "true");

              // Dispatch event to notify app that notifications are ready
              window.dispatchEvent(new CustomEvent("notificationsActivated"));
              _context2.next = 21;
              break;
            case 20:
              throw new Error("Subscription not found on server after initialization");
            case 21:
              _context2.next = 26;
              break;
            case 23:
              console.error("Failed to initialize push notifications");
              this.showError("Gagal mengaktifkan notifikasi. Silakan coba lagi atau periksa pengaturan browser Anda.");
              if (allowBtn) {
                allowBtn.innerHTML = "Coba Lagi (Wajib)";
                allowBtn.disabled = false;
              }
            case 26:
              _context2.next = 34;
              break;
            case 28:
              _context2.prev = 28;
              _context2.t0 = _context2["catch"](0);
              console.error("Error initializing notifications:", _context2.t0);
              this.showError("Terjadi kesalahan saat mengaktifkan notifikasi. Silakan coba lagi.");
              _allowBtn = this.querySelector("#notification-allow-btn");
              if (_allowBtn) {
                _allowBtn.innerHTML = "Coba Lagi (Wajib)";
                _allowBtn.disabled = false;
              }
            case 34:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[0, 28]]);
      }));
      function initializeNotifications() {
        return _initializeNotifications.apply(this, arguments);
      }
      return initializeNotifications;
    }()
  }, {
    key: "showSuccessMessage",
    value: function showSuccessMessage() {
      var successDiv = document.createElement("div");
      successDiv.className = "fixed top-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg z-[10000] transform transition-all duration-300";
      successDiv.innerHTML = "\n      <div class=\"flex items-center\">\n        <svg class=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\"></path>\n        </svg>\n        Notifikasi berhasil diaktifkan! Selamat menggunakan Pinjemin.\n      </div>\n    ";
      document.body.appendChild(successDiv);
      setTimeout(function () {
        successDiv.style.transform = "translateX(100%)";
        setTimeout(function () {
          if (document.body.contains(successDiv)) {
            document.body.removeChild(successDiv);
          }
        }, 300);
      }, 4000);
    }
  }]);
}(/*#__PURE__*/notification_permission_popup_wrapNativeSuper(HTMLElement));
customElements.define("notification-permission-popup", NotificationPermissionPopup);
/* harmony default export */ const notification_permission_popup = ((/* unused pure expression or super */ null && (NotificationPermissionPopup)));
;// ./user/src/script/components/notification-badge.js
function notification_badge_typeof(o) { "@babel/helpers - typeof"; return notification_badge_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, notification_badge_typeof(o); }
function notification_badge_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ notification_badge_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == notification_badge_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(notification_badge_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function notification_badge_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function notification_badge_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { notification_badge_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { notification_badge_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function notification_badge_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function notification_badge_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, notification_badge_toPropertyKey(o.key), o); } }
function notification_badge_createClass(e, r, t) { return r && notification_badge_defineProperties(e.prototype, r), t && notification_badge_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function notification_badge_toPropertyKey(t) { var i = notification_badge_toPrimitive(t, "string"); return "symbol" == notification_badge_typeof(i) ? i : i + ""; }
function notification_badge_toPrimitive(t, r) { if ("object" != notification_badge_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != notification_badge_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function notification_badge_callSuper(t, o, e) { return o = notification_badge_getPrototypeOf(o), notification_badge_possibleConstructorReturn(t, notification_badge_isNativeReflectConstruct() ? Reflect.construct(o, e || [], notification_badge_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function notification_badge_possibleConstructorReturn(t, e) { if (e && ("object" == notification_badge_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return notification_badge_assertThisInitialized(t); }
function notification_badge_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function notification_badge_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && notification_badge_setPrototypeOf(t, e); }
function notification_badge_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return notification_badge_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !notification_badge_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return notification_badge_construct(t, arguments, notification_badge_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), notification_badge_setPrototypeOf(Wrapper, t); }, notification_badge_wrapNativeSuper(t); }
function notification_badge_construct(t, e, r) { if (notification_badge_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && notification_badge_setPrototypeOf(p, r.prototype), p; }
function notification_badge_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (notification_badge_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function notification_badge_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function notification_badge_setPrototypeOf(t, e) { return notification_badge_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, notification_badge_setPrototypeOf(t, e); }
function notification_badge_getPrototypeOf(t) { return notification_badge_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, notification_badge_getPrototypeOf(t); }

var NotificationBadge = /*#__PURE__*/function (_HTMLElement) {
  function NotificationBadge() {
    var _this;
    notification_badge_classCallCheck(this, NotificationBadge);
    _this = notification_badge_callSuper(this, NotificationBadge);
    _this.count = 0;
    _this.interval = null;
    _this.isDropdownOpen = false;
    return _this;
  }
  notification_badge_inherits(NotificationBadge, _HTMLElement);
  return notification_badge_createClass(NotificationBadge, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      var _this2 = this;
      this.render();

      // Only fetch count if user is authenticated
      var token = localStorage.getItem("token");
      if (token) {
        this.fetchUnreadCount();

        // Update unread count every minute
        this.interval = setInterval(function () {
          var currentToken = localStorage.getItem("token");
          if (currentToken) {
            _this2.fetchUnreadCount();
          }
        }, 60000);
      }

      // Listen for notification events
      window.addEventListener("notification-received", this.handleNotificationReceived.bind(this));
      window.addEventListener("notification-read", this.handleNotificationRead.bind(this));
      window.addEventListener("userLoggedIn", this.handleUserLoggedIn.bind(this));
      window.addEventListener("userLoggedOut", this.handleUserLoggedOut.bind(this));

      // Setup click handler
      this.addEventListener("click", this.handleClick.bind(this));

      // Close dropdown when clicking outside
      document.addEventListener("click", this.handleOutsideClick.bind(this));
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      if (this.interval) {
        clearInterval(this.interval);
      }
      window.removeEventListener("notification-received", this.handleNotificationReceived);
      window.removeEventListener("notification-read", this.handleNotificationRead);
      window.removeEventListener("userLoggedIn", this.handleUserLoggedIn);
      window.removeEventListener("userLoggedOut", this.handleUserLoggedOut);
      document.removeEventListener("click", this.handleOutsideClick);
    }
  }, {
    key: "handleUserLoggedIn",
    value: function handleUserLoggedIn() {
      var _this3 = this;
      console.log("NotificationBadge: User logged in, fetching unread count...");
      // Reset count and fetch new data for the logged in user
      this.count = 0;
      this.updateBadge();

      // Fetch unread count after a short delay to ensure user is fully logged in
      setTimeout(function () {
        _this3.fetchUnreadCount();

        // Start interval for periodic updates
        if (_this3.interval) {
          clearInterval(_this3.interval);
        }
        _this3.interval = setInterval(function () {
          var token = localStorage.getItem("token");
          if (token) {
            _this3.fetchUnreadCount();
          }
        }, 60000);
      }, 1000);
    }
  }, {
    key: "handleUserLoggedOut",
    value: function handleUserLoggedOut() {
      console.log("NotificationBadge: User logged out, clearing count...");
      // Clear count and stop interval
      this.count = 0;
      this.updateBadge();
      this.closeDropdown();
      if (this.interval) {
        clearInterval(this.interval);
        this.interval = null;
      }
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      event.preventDefault();
      event.stopPropagation();
      var bellButton = event.target.closest(".notification-bell-button");
      if (bellButton) {
        this.toggleDropdown();
      }
    }
  }, {
    key: "handleOutsideClick",
    value: function handleOutsideClick(event) {
      if (!this.contains(event.target)) {
        this.closeDropdown();
      }
    }
  }, {
    key: "toggleDropdown",
    value: function toggleDropdown() {
      this.isDropdownOpen = !this.isDropdownOpen;
      this.renderDropdown();
    }
  }, {
    key: "closeDropdown",
    value: function closeDropdown() {
      this.isDropdownOpen = false;
      this.renderDropdown();
    }
  }, {
    key: "renderDropdown",
    value: function renderDropdown() {
      var existingDropdown = document.querySelector("#notification-dropdown");
      if (existingDropdown) {
        existingDropdown.remove();
      }
      if (this.isDropdownOpen) {
        var dropdown = document.createElement("div");
        dropdown.id = "notification-dropdown";
        dropdown.className = "absolute top-full right-0 mt-2 z-50";
        dropdown.innerHTML = "<notification-list></notification-list>";
        this.appendChild(dropdown);
      }
    }
  }, {
    key: "fetchUnreadCount",
    value: function () {
      var _fetchUnreadCount = notification_badge_asyncToGenerator(/*#__PURE__*/notification_badge_regeneratorRuntime().mark(function _callee() {
        var response;
        return notification_badge_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              _context.prev = 0;
              _context.next = 3;
              return getUnreadNotificationCount();
            case 3:
              response = _context.sent;
              if (response && response.status === "success" && response.data) {
                this.updateCount(response.data.unread_count || 0);
              }
              _context.next = 11;
              break;
            case 7:
              _context.prev = 7;
              _context.t0 = _context["catch"](0);
              console.error("Error fetching unread notification count:", _context.t0);
              // If there's an auth error, reset count
              if (_context.t0.message.includes("Authentication failed")) {
                this.count = 0;
                this.updateBadge();
              }
            case 11:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[0, 7]]);
      }));
      function fetchUnreadCount() {
        return _fetchUnreadCount.apply(this, arguments);
      }
      return fetchUnreadCount;
    }()
  }, {
    key: "updateCount",
    value: function updateCount(count) {
      this.count = count;
      this.updateBadge();
    }
  }, {
    key: "handleNotificationReceived",
    value: function handleNotificationReceived() {
      this.updateCount(this.count + 1);
    }
  }, {
    key: "handleNotificationRead",
    value: function handleNotificationRead(event) {
      var _ref = event.detail || {},
        all = _ref.all;
      if (all) {
        this.updateCount(0);
      } else {
        this.updateCount(Math.max(0, this.count - 1));
      }
    }
  }, {
    key: "updateBadge",
    value: function updateBadge() {
      var badge = this.querySelector(".notification-badge");
      if (badge) {
        if (this.count > 0) {
          badge.textContent = this.count > 99 ? "99+" : this.count;
          badge.classList.remove("hidden");
        } else {
          badge.classList.add("hidden");
        }
      }
    }
  }, {
    key: "render",
    value: function render() {
      this.innerHTML = "\n      <div class=\"relative\">\n        <button class=\"notification-bell-button relative inline-flex items-center p-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-full transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n          </svg>\n          <span class=\"notification-badge absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform bg-red-600 rounded-full min-w-[1.25rem] h-5 hidden\">\n            0\n          </span>\n        </button>\n      </div>\n    ";
      this.updateBadge();
    }
  }]);
}(/*#__PURE__*/notification_badge_wrapNativeSuper(HTMLElement));
customElements.define("notification-badge", NotificationBadge);
/* harmony default export */ const notification_badge = ((/* unused pure expression or super */ null && (NotificationBadge)));
;// ./user/src/script/components/notifications-page.js
function notifications_page_typeof(o) { "@babel/helpers - typeof"; return notifications_page_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, notifications_page_typeof(o); }
function notifications_page_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function notifications_page_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, notifications_page_toPropertyKey(o.key), o); } }
function notifications_page_createClass(e, r, t) { return r && notifications_page_defineProperties(e.prototype, r), t && notifications_page_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function notifications_page_toPropertyKey(t) { var i = notifications_page_toPrimitive(t, "string"); return "symbol" == notifications_page_typeof(i) ? i : i + ""; }
function notifications_page_toPrimitive(t, r) { if ("object" != notifications_page_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != notifications_page_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function notifications_page_callSuper(t, o, e) { return o = notifications_page_getPrototypeOf(o), notifications_page_possibleConstructorReturn(t, notifications_page_isNativeReflectConstruct() ? Reflect.construct(o, e || [], notifications_page_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function notifications_page_possibleConstructorReturn(t, e) { if (e && ("object" == notifications_page_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return notifications_page_assertThisInitialized(t); }
function notifications_page_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function notifications_page_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && notifications_page_setPrototypeOf(t, e); }
function notifications_page_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return notifications_page_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !notifications_page_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return notifications_page_construct(t, arguments, notifications_page_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), notifications_page_setPrototypeOf(Wrapper, t); }, notifications_page_wrapNativeSuper(t); }
function notifications_page_construct(t, e, r) { if (notifications_page_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && notifications_page_setPrototypeOf(p, r.prototype), p; }
function notifications_page_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (notifications_page_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function notifications_page_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function notifications_page_setPrototypeOf(t, e) { return notifications_page_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, notifications_page_setPrototypeOf(t, e); }
function notifications_page_getPrototypeOf(t) { return notifications_page_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, notifications_page_getPrototypeOf(t); }
var NotificationsPage = /*#__PURE__*/function (_HTMLElement) {
  function NotificationsPage() {
    notifications_page_classCallCheck(this, NotificationsPage);
    return notifications_page_callSuper(this, NotificationsPage, arguments);
  }
  notifications_page_inherits(NotificationsPage, _HTMLElement);
  return notifications_page_createClass(NotificationsPage, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.render();
    }
  }, {
    key: "render",
    value: function render() {
      this.innerHTML = "\n        <div class=\"container mx-auto px-4 py-8 max-w-4xl\">\n          <div class=\"mb-8\">\n            <h1 class=\"text-3xl font-bold text-gray-900 mb-2\">Notifikasi</h1>\n            <p class=\"text-gray-600\">Kelola semua notifikasi Anda di sini</p>\n          </div>\n  \n          <div class=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n            <notification-list></notification-list>\n          </div>\n        </div>\n      ";
    }
  }]);
}(/*#__PURE__*/notifications_page_wrapNativeSuper(HTMLElement));
customElements.define("notifications-page", NotificationsPage);
/* harmony default export */ const notifications_page = ((/* unused pure expression or super */ null && (NotificationsPage)));
;// ./user/src/script/components/notification-list.js
function notification_list_typeof(o) { "@babel/helpers - typeof"; return notification_list_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, notification_list_typeof(o); }
function notification_list_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ notification_list_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == notification_list_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(notification_list_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function notification_list_toConsumableArray(r) { return notification_list_arrayWithoutHoles(r) || notification_list_iterableToArray(r) || notification_list_unsupportedIterableToArray(r) || notification_list_nonIterableSpread(); }
function notification_list_nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function notification_list_unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return notification_list_arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? notification_list_arrayLikeToArray(r, a) : void 0; } }
function notification_list_iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function notification_list_arrayWithoutHoles(r) { if (Array.isArray(r)) return notification_list_arrayLikeToArray(r); }
function notification_list_arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function notification_list_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function notification_list_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { notification_list_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { notification_list_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
function notification_list_classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function notification_list_defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, notification_list_toPropertyKey(o.key), o); } }
function notification_list_createClass(e, r, t) { return r && notification_list_defineProperties(e.prototype, r), t && notification_list_defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function notification_list_toPropertyKey(t) { var i = notification_list_toPrimitive(t, "string"); return "symbol" == notification_list_typeof(i) ? i : i + ""; }
function notification_list_toPrimitive(t, r) { if ("object" != notification_list_typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != notification_list_typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function notification_list_callSuper(t, o, e) { return o = notification_list_getPrototypeOf(o), notification_list_possibleConstructorReturn(t, notification_list_isNativeReflectConstruct() ? Reflect.construct(o, e || [], notification_list_getPrototypeOf(t).constructor) : o.apply(t, e)); }
function notification_list_possibleConstructorReturn(t, e) { if (e && ("object" == notification_list_typeof(e) || "function" == typeof e)) return e; if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined"); return notification_list_assertThisInitialized(t); }
function notification_list_assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e; }
function notification_list_inherits(t, e) { if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function"); t.prototype = Object.create(e && e.prototype, { constructor: { value: t, writable: !0, configurable: !0 } }), Object.defineProperty(t, "prototype", { writable: !1 }), e && notification_list_setPrototypeOf(t, e); }
function notification_list_wrapNativeSuper(t) { var r = "function" == typeof Map ? new Map() : void 0; return notification_list_wrapNativeSuper = function _wrapNativeSuper(t) { if (null === t || !notification_list_isNativeFunction(t)) return t; if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function"); if (void 0 !== r) { if (r.has(t)) return r.get(t); r.set(t, Wrapper); } function Wrapper() { return notification_list_construct(t, arguments, notification_list_getPrototypeOf(this).constructor); } return Wrapper.prototype = Object.create(t.prototype, { constructor: { value: Wrapper, enumerable: !1, writable: !0, configurable: !0 } }), notification_list_setPrototypeOf(Wrapper, t); }, notification_list_wrapNativeSuper(t); }
function notification_list_construct(t, e, r) { if (notification_list_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments); var o = [null]; o.push.apply(o, e); var p = new (t.bind.apply(t, o))(); return r && notification_list_setPrototypeOf(p, r.prototype), p; }
function notification_list_isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (notification_list_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
function notification_list_isNativeFunction(t) { try { return -1 !== Function.toString.call(t).indexOf("[native code]"); } catch (n) { return "function" == typeof t; } }
function notification_list_setPrototypeOf(t, e) { return notification_list_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) { return t.__proto__ = e, t; }, notification_list_setPrototypeOf(t, e); }
function notification_list_getPrototypeOf(t) { return notification_list_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) { return t.__proto__ || Object.getPrototypeOf(t); }, notification_list_getPrototypeOf(t); }

var NotificationList = /*#__PURE__*/function (_HTMLElement) {
  function NotificationList() {
    var _this;
    notification_list_classCallCheck(this, NotificationList);
    _this = notification_list_callSuper(this, NotificationList);
    _this.notifications = [];
    _this.isLoading = false;
    _this.page = 1;
    _this.hasMore = true;
    return _this;
  }
  notification_list_inherits(NotificationList, _HTMLElement);
  return notification_list_createClass(NotificationList, [{
    key: "connectedCallback",
    value: function connectedCallback() {
      this.render();
      this.loadNotifications();
      this.setupEventListeners();
    }
  }, {
    key: "disconnectedCallback",
    value: function disconnectedCallback() {
      // Clean up event listeners
      window.removeEventListener("notification-received", this.handleNewNotification);
    }
  }, {
    key: "setupEventListeners",
    value: function setupEventListeners() {
      // Listen for new notifications
      window.addEventListener("notification-received", this.handleNewNotification.bind(this));

      // Setup click handlers
      this.addEventListener("click", this.handleClick.bind(this));
    }
  }, {
    key: "handleClick",
    value: function handleClick(event) {
      var notificationItem = event.target.closest(".notification-item");
      if (notificationItem) {
        var notificationId = notificationItem.dataset.notificationId;
        var notificationType = notificationItem.dataset.notificationType;
        var targetUrl = notificationItem.dataset.targetUrl;
        this.markAsRead(notificationId);
        if (targetUrl) {
          window.location.hash = targetUrl;
        }
      }

      // Mark all as read button
      if (event.target.closest("#mark-all-read-btn")) {
        this.markAllAsRead();
      }

      // Load more button
      if (event.target.closest("#load-more-btn")) {
        this.loadNotifications();
      }
    }
  }, {
    key: "loadNotifications",
    value: function () {
      var _loadNotifications = notification_list_asyncToGenerator(/*#__PURE__*/notification_list_regeneratorRuntime().mark(function _callee() {
        var response, newNotifications;
        return notification_list_regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (!(this.isLoading || !this.hasMore)) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return");
            case 2:
              this.isLoading = true;
              this.updateLoadingState();
              _context.prev = 4;
              _context.next = 7;
              return apiGet("/notifications?page=".concat(this.page, "&limit=10"));
            case 7:
              response = _context.sent;
              if (response && response.status === "success" && response.data) {
                newNotifications = response.data.notifications || [];
                if (this.page === 1) {
                  this.notifications = newNotifications;
                } else {
                  this.notifications = [].concat(notification_list_toConsumableArray(this.notifications), notification_list_toConsumableArray(newNotifications));
                }
                this.hasMore = newNotifications.length === 10;
                this.page++;
                this.renderNotifications();
              }
              _context.next = 15;
              break;
            case 11:
              _context.prev = 11;
              _context.t0 = _context["catch"](4);
              console.error("Error loading notifications:", _context.t0);
              this.showError("Gagal memuat notifikasi");
            case 15:
              _context.prev = 15;
              this.isLoading = false;
              this.updateLoadingState();
              return _context.finish(15);
            case 19:
            case "end":
              return _context.stop();
          }
        }, _callee, this, [[4, 11, 15, 19]]);
      }));
      function loadNotifications() {
        return _loadNotifications.apply(this, arguments);
      }
      return loadNotifications;
    }()
  }, {
    key: "markAsRead",
    value: function () {
      var _markAsRead = notification_list_asyncToGenerator(/*#__PURE__*/notification_list_regeneratorRuntime().mark(function _callee2(notificationId) {
        var notification;
        return notification_list_regeneratorRuntime().wrap(function _callee2$(_context2) {
          while (1) switch (_context2.prev = _context2.next) {
            case 0:
              _context2.prev = 0;
              _context2.next = 3;
              return apiPatch("/notifications/".concat(notificationId, "/read"));
            case 3:
              // Update local state
              notification = this.notifications.find(function (n) {
                return n.id === Number.parseInt(notificationId);
              });
              if (notification) {
                notification.is_read = true;
              }
              this.renderNotifications();

              // Dispatch event to update badge
              window.dispatchEvent(new CustomEvent("notification-read", {
                detail: {
                  notificationId: notificationId
                }
              }));
              _context2.next = 12;
              break;
            case 9:
              _context2.prev = 9;
              _context2.t0 = _context2["catch"](0);
              console.error("Error marking notification as read:", _context2.t0);
            case 12:
            case "end":
              return _context2.stop();
          }
        }, _callee2, this, [[0, 9]]);
      }));
      function markAsRead(_x) {
        return _markAsRead.apply(this, arguments);
      }
      return markAsRead;
    }()
  }, {
    key: "markAllAsRead",
    value: function () {
      var _markAllAsRead = notification_list_asyncToGenerator(/*#__PURE__*/notification_list_regeneratorRuntime().mark(function _callee3() {
        return notification_list_regeneratorRuntime().wrap(function _callee3$(_context3) {
          while (1) switch (_context3.prev = _context3.next) {
            case 0:
              _context3.prev = 0;
              _context3.next = 3;
              return apiPatch("/notifications/read-all");
            case 3:
              // Update local state
              this.notifications.forEach(function (notification) {
                notification.is_read = true;
              });
              this.renderNotifications();

              // Dispatch event to update badge
              window.dispatchEvent(new CustomEvent("notification-read", {
                detail: {
                  all: true
                }
              }));
              _context3.next = 11;
              break;
            case 8:
              _context3.prev = 8;
              _context3.t0 = _context3["catch"](0);
              console.error("Error marking all notifications as read:", _context3.t0);
            case 11:
            case "end":
              return _context3.stop();
          }
        }, _callee3, this, [[0, 8]]);
      }));
      function markAllAsRead() {
        return _markAllAsRead.apply(this, arguments);
      }
      return markAllAsRead;
    }()
  }, {
    key: "handleNewNotification",
    value: function handleNewNotification(event) {
      var newNotification = event.detail;
      this.notifications.unshift(newNotification);
      this.renderNotifications();
    }

    // ✅ Perbaikan di method getNotificationIcon dan getTargetUrl
  }, {
    key: "getNotificationIcon",
    value: function getNotificationIcon(type) {
      // ✅ Tambahkan fallback untuk type yang undefined
      var notificationType = type || 'general';
      switch (notificationType) {
        case "transaction":
          return "\n        <svg class=\"w-5 h-5 text-blue-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"></path>\n        </svg>\n      ";
        case "message":
          return "\n        <svg class=\"w-5 h-5 text-green-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-3.582 8-8 8a8.959 8.959 0 01-4.906-1.524A11.956 11.956 0 012.944 18.5c-.666-.806-.944-1.743-.944-2.75 0-1.257.5-2.5 1.5-3.5L4 12c0-4.418 3.582-8 8-8s8 3.582 8 8z\"></path>\n        </svg>\n      ";
        case "rent_reminder":
          return "\n        <svg class=\"w-5 h-5 text-orange-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n        </svg>\n      ";
        default:
          return "\n        <svg class=\"w-5 h-5 text-gray-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"></path>\n        </svg>\n      ";
      }
    }
  }, {
    key: "getTargetUrl",
    value: function getTargetUrl(notification) {
      var _notification$data, _notification$data2;
      // ✅ Perbaiki akses ke data notifikasi
      var notificationType = notification.type || 'general';
      switch (notificationType) {
        case "transaction":
          // ✅ Cek multiple possible data structures
          return "#/transactions/".concat(notification.transaction_id || ((_notification$data = notification.data) === null || _notification$data === void 0 ? void 0 : _notification$data.transactionId) || "");
        case "message":
          return "#/messages/".concat(notification.related_user_id || ((_notification$data2 = notification.data) === null || _notification$data2 === void 0 ? void 0 : _notification$data2.senderId) || "");
        case "rent_reminder":
          return "#/my-rentals";
        default:
          return "#/notifications";
      }
    }
  }, {
    key: "formatTimeAgo",
    value: function formatTimeAgo(dateString) {
      var date = new Date(dateString);
      var now = new Date();
      var diffInSeconds = Math.floor((now - date) / 1000);
      if (diffInSeconds < 60) {
        return "Baru saja";
      } else if (diffInSeconds < 3600) {
        var minutes = Math.floor(diffInSeconds / 60);
        return "".concat(minutes, " menit yang lalu");
      } else if (diffInSeconds < 86400) {
        var hours = Math.floor(diffInSeconds / 3600);
        return "".concat(hours, " jam yang lalu");
      } else {
        var days = Math.floor(diffInSeconds / 86400);
        return "".concat(days, " hari yang lalu");
      }
    }

    // ✅ Perbaikan di renderNotifications untuk debugging
  }, {
    key: "renderNotifications",
    value: function renderNotifications() {
      var _this2 = this;
      var container = this.querySelector("#notifications-container");
      if (!container) return;
      if (this.notifications.length === 0) {
        container.innerHTML = "\n      <div class=\"text-center py-8\">\n        <svg class=\"w-16 h-16 text-gray-300 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"></path>\n        </svg>\n        <p class=\"text-gray-500\">Belum ada notifikasi</p>\n      </div>\n    ";
        return;
      }
      var notificationsHtml = this.notifications.map(function (notification) {
        // ✅ Debug logging untuk memeriksa struktur data
        console.log('Notification data:', notification);

        // ✅ Pastikan type tersedia
        var notificationType = notification.type || 'general';
        return "\n        <div class=\"notification-item p-4 border-b border-gray-100 hover:bg-gray-50 cursor-pointer transition-colors duration-200 ".concat(!notification.is_read ? "bg-blue-50" : "", "\"\n             data-notification-id=\"").concat(notification.id, "\"\n             data-notification-type=\"").concat(notificationType, "\"\n             data-target-url=\"").concat(_this2.getTargetUrl(notification), "\">\n          <div class=\"flex items-start space-x-3\">\n            <div class=\"flex-shrink-0 mt-1\">\n              ").concat(_this2.getNotificationIcon(notificationType), "\n            </div>\n            <div class=\"flex-1 min-w-0\">\n              <div class=\"flex items-center justify-between\">\n                <p class=\"text-sm font-medium text-gray-900 truncate\">\n                  ").concat(notification.title || 'Notifikasi', "\n                </p>\n                ").concat(!notification.is_read ? '<div class="w-2 h-2 bg-blue-500 rounded-full flex-shrink-0"></div>' : "", "\n              </div>\n              <p class=\"text-sm text-gray-600 mt-1 line-clamp-2\">\n                ").concat(notification.message, "\n              </p>\n              <!-- \u2705 Tambahkan badge untuk rent reminder -->\n              ").concat(notificationType === 'rent_reminder' ? '<span class="inline-block px-2 py-1 text-xs bg-orange-100 text-orange-800 rounded-full mt-2">Pengingat Sewa</span>' : '', "\n              <p class=\"text-xs text-gray-400 mt-2\">\n                ").concat(_this2.formatTimeAgo(notification.created_at), "\n              </p>\n            </div>\n          </div>\n        </div>\n      ");
      }).join("");
      container.innerHTML = notificationsHtml;

      // Update load more button
      var loadMoreBtn = this.querySelector("#load-more-btn");
      if (loadMoreBtn) {
        if (this.hasMore) {
          loadMoreBtn.classList.remove("hidden");
        } else {
          loadMoreBtn.classList.add("hidden");
        }
      }
    }
  }, {
    key: "updateLoadingState",
    value: function updateLoadingState() {
      var loadMoreBtn = this.querySelector("#load-more-btn");
      if (loadMoreBtn) {
        if (this.isLoading) {
          loadMoreBtn.innerHTML = "\n          <svg class=\"animate-spin -ml-1 mr-3 h-4 w-4 text-gray-600 inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle class=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" stroke-width=\"4\"></circle>\n            <path class=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Memuat...\n        ";
          loadMoreBtn.disabled = true;
        } else {
          loadMoreBtn.innerHTML = "Muat Lebih Banyak";
          loadMoreBtn.disabled = false;
        }
      }
    }
  }, {
    key: "showError",
    value: function showError(message) {
      var container = this.querySelector("#notifications-container");
      if (container) {
        container.innerHTML = "\n        <div class=\"text-center py-8\">\n          <svg class=\"w-16 h-16 text-red-300 mx-auto mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n          <p class=\"text-red-500\">".concat(message, "</p>\n          <button class=\"mt-4 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\" onclick=\"this.closest('notification-list').loadNotifications()\">\n            Coba Lagi\n          </button>\n        </div>\n      ");
      }
    }
  }, {
    key: "render",
    value: function render() {
      this.innerHTML = "\n      <div class=\"bg-white rounded-lg shadow-lg border border-gray-200 max-w-md w-full max-h-96 flex flex-col\">\n        <!-- Header -->\n        <div class=\"flex items-center justify-between p-4 border-b border-gray-200\">\n          <h3 class=\"text-lg font-semibold text-gray-900\">Notifikasi</h3>\n          <button id=\"mark-all-read-btn\" class=\"text-sm text-blue-600 hover:text-blue-800 font-medium\">\n            Tandai Semua Dibaca\n          </button>\n        </div>\n\n        <!-- Notifications Container -->\n        <div id=\"notifications-container\" class=\"flex-1 overflow-y-auto\">\n          <!-- Notifications will be rendered here -->\n        </div>\n\n        <!-- Load More Button -->\n        <div class=\"p-4 border-t border-gray-200\">\n          <button id=\"load-more-btn\" class=\"w-full px-4 py-2 text-sm text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200 hidden\">\n            Muat Lebih Banyak\n          </button>\n        </div>\n      </div>\n    ";
    }
  }]);
}(/*#__PURE__*/notification_list_wrapNativeSuper(HTMLElement));
customElements.define("notification-list", NotificationList);
/* harmony default export */ const notification_list = ((/* unused pure expression or super */ null && (NotificationList)));
// EXTERNAL MODULE: ./user/src/script/components/landing/landing-page.js
var landing_page = __webpack_require__(4);
;// ./user/src/script/components/index.js

















// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js
var injectStylesIntoStyleTag = __webpack_require__(72);
var injectStylesIntoStyleTag_default = /*#__PURE__*/__webpack_require__.n(injectStylesIntoStyleTag);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleDomAPI.js
var styleDomAPI = __webpack_require__(825);
var styleDomAPI_default = /*#__PURE__*/__webpack_require__.n(styleDomAPI);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertBySelector.js
var insertBySelector = __webpack_require__(659);
var insertBySelector_default = /*#__PURE__*/__webpack_require__.n(insertBySelector);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js
var setAttributesWithoutAttributes = __webpack_require__(56);
var setAttributesWithoutAttributes_default = /*#__PURE__*/__webpack_require__.n(setAttributesWithoutAttributes);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/insertStyleElement.js
var insertStyleElement = __webpack_require__(540);
var insertStyleElement_default = /*#__PURE__*/__webpack_require__.n(insertStyleElement);
// EXTERNAL MODULE: ./node_modules/style-loader/dist/runtime/styleTagTransform.js
var styleTagTransform = __webpack_require__(113);
var styleTagTransform_default = /*#__PURE__*/__webpack_require__.n(styleTagTransform);
// EXTERNAL MODULE: ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/mini-css-extract-plugin/dist/loader.js!./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./user/src/styles/style.css
var style = __webpack_require__(424);
;// ./user/src/styles/style.css

      
      
      
      
      
      
      
      
      

var options = {};

options.styleTagTransform = (styleTagTransform_default());
options.setAttributes = (setAttributesWithoutAttributes_default());
options.insert = insertBySelector_default().bind(null, "head");
options.domAPI = (styleDomAPI_default());
options.insertStyleElement = (insertStyleElement_default());

var update = injectStylesIntoStyleTag_default()(style/* default */.A, options);




       /* harmony default export */ const styles_style = (style/* default */.A && style/* default */.A.locals ? style/* default */.A.locals : undefined);

;// ./user/src/script/routes/url-parser.js
function extractPathnameSegments(path) {
  var pathSegments = path.replace(/^\/|\/$/g, '').split('/');
  return {
    resource: pathSegments[0] || null,
    id: pathSegments[1] || null
  };
}
function constructRouteFromSegments(pathSegments) {
  var route = '';
  if (pathSegments.resource) {
    route = route.concat("/".concat(pathSegments.resource));
  }
  if (pathSegments.id) {
    route = route.concat('/:id');
  }
  return route || '/';
}
function getActivePathname() {
  return location.hash.slice(1) || '/';
}
function getActiveRoute() {
  var pathname = getActivePathname();
  var urlSegments = extractPathnameSegments(pathname);
  return constructRouteFromSegments(urlSegments);
}
var parseActivePathname = function parseActivePathname() {
  var pathname = getActivePathname();
  return extractPathnameSegments(pathname);
};
function getRoute(pathname) {
  var urlSegments = extractPathnameSegments(pathname);
  return constructRouteFromSegments(urlSegments);
}
function parsePathname(pathname) {
  return extractPathnameSegments(pathname);
}
;// ./user/src/script/routes/routes.js
function routes_typeof(o) { "@babel/helpers - typeof"; return routes_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, routes_typeof(o); }
function routes_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ routes_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == routes_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(routes_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function routes_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function routes_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { routes_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { routes_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }



// Function to manage app bar visibility
var manageAppBar = function manageAppBar() {
  var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var appBarContainer = document.getElementById("app-bar-container");
  if (show) {
    if (appBarContainer && !appBarContainer.querySelector("app-bar")) {
      appBarContainer.innerHTML = "<app-bar></app-bar>";
    }
  } else {
    if (appBarContainer) {
      appBarContainer.innerHTML = "";
    }
  }
};

// Function to manage footer visibility
var manageFooter = function manageFooter() {
  var show = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
  var footer = document.querySelector("footer");
  if (footer) {
    footer.style.display = show ? "block" : "none";
  }
};

// Check if user needs to enable notifications
var checkNotificationRequirement = /*#__PURE__*/function () {
  var _ref = routes_asyncToGenerator(/*#__PURE__*/routes_regeneratorRuntime().mark(function _callee() {
    var token, helper, notificationStatus;
    return routes_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          token = localStorage.getItem("token"); // If not authenticated, no need to check notifications
          if (token) {
            _context.next = 3;
            break;
          }
          return _context.abrupt("return", {
            canProceed: true,
            needsSetup: false
          });
        case 3:
          _context.prev = 3;
          helper = new push_notification_helper();
          _context.next = 7;
          return helper.needsNotificationSetup();
        case 7:
          notificationStatus = _context.sent;
          console.log("Notification requirement check:", notificationStatus);
          return _context.abrupt("return", notificationStatus);
        case 12:
          _context.prev = 12;
          _context.t0 = _context["catch"](3);
          console.error("Error checking notification requirement:", _context.t0);
          // On error, allow access but log the issue
          return _context.abrupt("return", {
            canProceed: true,
            needsSetup: false,
            reason: "error"
          });
        case 16:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[3, 12]]);
  }));
  return function checkNotificationRequirement() {
    return _ref.apply(this, arguments);
  };
}();

// Show notification permission popup
var showNotificationPopup = function showNotificationPopup(reason) {
  var notificationPopup = document.querySelector("notification-permission-popup");
  if (notificationPopup) {
    notificationPopup.triggerPopup(reason);
  }
};

// Enhanced authentication check that also verifies notification requirement
var checkAuthenticatedWithNotification = /*#__PURE__*/function () {
  var _ref2 = routes_asyncToGenerator(/*#__PURE__*/routes_regeneratorRuntime().mark(function _callee2(mainContent, renderFn) {
    var _len,
      args,
      _key,
      notificationStatus,
      message,
      showPopup,
      _args2 = arguments;
    return routes_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          for (_len = _args2.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
            args[_key - 2] = _args2[_key];
          }
          if (utils.isAuthenticated()) {
            _context2.next = 4;
            break;
          }
          window.location.hash = "#/login";
          return _context2.abrupt("return");
        case 4:
          // Show loading screen while checking notification status
          mainContent.innerHTML = "\n    <div class=\"flex items-center justify-center min-h-screen bg-gray-50\">\n      <div class=\"text-center\">\n        <div class=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n        <h2 class=\"text-xl font-semibold text-gray-900 mb-2\">Memeriksa Status Aplikasi</h2>\n        <p class=\"text-gray-600\">Mohon tunggu sebentar...</p>\n      </div>\n    </div>\n  ";
          _context2.prev = 5;
          _context2.next = 8;
          return checkNotificationRequirement();
        case 8:
          notificationStatus = _context2.sent;
          if (notificationStatus.canProceed) {
            _context2.next = 28;
            break;
          }
          // Show appropriate message based on reason
          message = "Mohon aktifkan notifikasi untuk melanjutkan...";
          showPopup = true;
          _context2.t0 = notificationStatus.reason;
          _context2.next = _context2.t0 === "permission_denied" ? 15 : _context2.t0 === "missing_server_subscription" ? 18 : _context2.t0 === "permission_not_requested" ? 20 : _context2.t0 === "resubscribe" ? 22 : 24;
          break;
        case 15:
          message = "Notifikasi diblokir. Mohon aktifkan di pengaturan browser...";
          showPopup = false;
          return _context2.abrupt("break", 25);
        case 18:
          message = "Mohon daftarkan ulang notifikasi...";
          return _context2.abrupt("break", 25);
        case 20:
          message = "Mohon aktifkan notifikasi untuk melanjutkan...";
          return _context2.abrupt("break", 25);
        case 22:
          message = "Kami mendeteksi notifikasi Anda nonaktif. Klik di bawah untuk mengaktifkannya kembali.";
          return _context2.abrupt("break", 25);
        case 24:
          message = "Mohon aktifkan notifikasi untuk melanjutkan...";
        case 25:
          mainContent.innerHTML = "\n        <div class=\"flex items-center justify-center min-h-screen bg-gray-50\">\n          <div class=\"text-center max-w-md mx-auto p-6\">\n            <div class=\"bg-yellow-100 rounded-full p-4 mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\n              </svg>\n            </div>\n            <h2 class=\"text-xl font-semibold text-gray-900 mb-2\">Notifikasi Diperlukan</h2>\n            <p class=\"text-gray-600 mb-4\">".concat(message, "</p>\n            ").concat(notificationStatus.reason === "permission_denied" ? "\n              <div class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-4\">\n                <p class=\"text-sm text-red-700\">\n                  Untuk mengaktifkan notifikasi yang diblokir:\n                  <br>1. Klik ikon gembok di address bar\n                  <br>2. Pilih \"Izinkan\" untuk notifikasi\n                  <br>3. Refresh halaman ini\n                </p>\n              </div>\n              <button onclick=\"window.location.reload()\" class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\">\n                Refresh Halaman\n              </button>\n            " : "", "\n          </div>\n        </div>\n      ");
          if (showPopup) {
            setTimeout(function () {
              showNotificationPopup(notificationStatus.reason);
            }, 500);
          }
          return _context2.abrupt("return");
        case 28:
          // If all checks pass, render the component
          renderFn.apply(void 0, [mainContent].concat(args));
          _context2.next = 36;
          break;
        case 31:
          _context2.prev = 31;
          _context2.t1 = _context2["catch"](5);
          console.error("Error in authentication check:", _context2.t1);
          // On error, show error message but allow access
          mainContent.innerHTML = "\n      <div class=\"flex items-center justify-center min-h-screen bg-gray-50\">\n        <div class=\"text-center max-w-md mx-auto p-6\">\n          <div class=\"bg-red-100 rounded-full p-4 mx-auto mb-4 w-16 h-16 flex items-center justify-center\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-8 w-8 text-red-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 15.5c-.77.833.192 2.5 1.732 2.5z\" />\n            </svg>\n          </div>\n          <h2 class=\"text-xl font-semibold text-gray-900 mb-2\">Terjadi Kesalahan</h2>\n          <p class=\"text-gray-600 mb-4\">Tidak dapat memeriksa status notifikasi. Melanjutkan ke aplikasi...</p>\n        </div>\n      </div>\n    ";
          setTimeout(function () {
            renderFn.apply(void 0, [mainContent].concat(args));
          }, 2000);
        case 36:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[5, 31]]);
  }));
  return function checkAuthenticatedWithNotification(_x, _x2) {
    return _ref2.apply(this, arguments);
  };
}();
var checkAuthenticated = function checkAuthenticated(mainContent, renderFn) {
  if (Utils.isAuthenticated()) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
      args[_key2 - 2] = arguments[_key2];
    }
    renderFn.apply(void 0, [mainContent].concat(args));
  } else {
    window.location.hash = "#/login";
  }
};
var checkUnauthenticated = function checkUnauthenticated(mainContent, renderFn) {
  if (!utils.isAuthenticated()) {
    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {
      args[_key3 - 2] = arguments[_key3];
    }
    renderFn.apply(void 0, [mainContent].concat(args));
  } else {
    window.location.hash = "#/home"; // Changed from "#/" to "#/home"
  }
};
var routes = {
  // Main route - requires authentication AND notification setup
  "/": function _(mainContent) {
    manageAppBar(false); // Hide app bar for landing page
    manageFooter(false); // Hide default footer for landing page
    mainContent.innerHTML = "<landing-page></landing-page>";
  },
  "/home": function _home(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<all-product></all-product>";
    });
  },
  // Product detail - requires authentication AND notification setup
  "/items/:id": function _items_Id(mainContent, id) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc, itemId) {
      mc.innerHTML = "<detail-product item-id=\"".concat(itemId, "\"></detail-product>");
    }, id);
  },
  // Transaction detail - requires authentication AND notification setup
  "/transactions/:id": function _transactions_Id(mainContent, id) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc, transactionId) {
      mc.innerHTML = "<detail-transaction-page transaction-id=\"".concat(transactionId, "\"></detail-transaction-page>");
    }, id);
  },
  // Notifications page - requires authentication AND notification setup
  "/notifications": function _notifications(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<notifications-page></notifications-page>";
    });
  },
  // Auth routes - don't require notification setup, hide app bar and footer
  "/login": function _login(mainContent) {
    manageAppBar(false); // Hide app bar for login page
    manageFooter(false); // Hide footer for login page
    checkUnauthenticated(mainContent, function (mc) {
      mc.innerHTML = "<login-page></login-page>";
    });
  },
  "/register": function _register(mainContent) {
    manageAppBar(false); // Hide app bar for register page
    manageFooter(false); // Hide footer for register page
    checkUnauthenticated(mainContent, function (mc) {
      mc.innerHTML = "<register-page></register-page>";
    });
  },
  // Protected routes - require authentication AND notification setup
  "/cart": function _cart(mainContent) {
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<h1>Cart Page (Requires Login)</h1>";
    });
  },
  "/my-rentals": function _myRentals(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<my-transactions-page></my-transactions-page>";
    });
  },
  "/profile": function _profile(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<profile-page></profile-page>";
    });
  },
  "/my-items": function _myItems(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<my-items-page></my-items-page>";
    });
  },
  "/my-transactions": function _myTransactions(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<my-transactions-page></my-transactions-page>";
    });
  },
  "/my-sales": function _mySales(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    checkAuthenticatedWithNotification(mainContent, function (mc) {
      mc.innerHTML = "<my-seller-transactions-page></my-seller-transactions-page>";
    });
  },
  // Community page - public access (no authentication required)
  "/community": function _community(mainContent) {
    manageAppBar(true);
    manageFooter(true);
    mainContent.innerHTML = "<community-page></community-page>";
  }
};
;// ./user/src/app.js
function app_typeof(o) { "@babel/helpers - typeof"; return app_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, app_typeof(o); }
function app_regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ app_regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = "function" == typeof Symbol ? Symbol : {}, a = i.iterator || "@@iterator", c = i.asyncIterator || "@@asyncIterator", u = i.toStringTag || "@@toStringTag"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, ""); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, "_invoke", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: "normal", arg: t.call(e, r) }; } catch (t) { return { type: "throw", arg: t }; } } e.wrap = wrap; var h = "suspendedStart", l = "suspendedYield", f = "executing", s = "completed", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { ["next", "throw", "return"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if ("throw" !== c.type) { var u = c.arg, h = u.value; return h && "object" == app_typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) { invoke("next", t, i, a); }, function (t) { invoke("throw", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke("throw", t, i, a); }); } a(c.arg); } var r; o(this, "_invoke", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error("Generator is already running"); if (o === s) { if ("throw" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else "return" === n.method && n.abrupt("return", n.arg); o = f; var p = tryCatch(e, r, n); if ("normal" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y; var i = tryCatch(o, e.iterator, r.arg); if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = "normal", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: "root" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || "" === e) { var r = e[a]; if (r) return r.call(e); if ("function" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(app_typeof(e) + " is not iterable"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) { var e = "function" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () { return this; }), define(g, "toString", function () { return "[object Generator]"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if ("throw" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if ("root" === i.tryLoc) return handle("end"); if (i.tryLoc <= this.prev) { var c = n.call(i, "catchLoc"), u = n.call(i, "finallyLoc"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error("try statement without catch or finally"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) { var i = o; break; } } i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if ("throw" === t.type) throw t.arg; return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, "catch": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if ("throw" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error("illegal catch attempt"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, "next" === this.method && (this.arg = t), y; } }, e; }
function app_asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function app_asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { app_asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { app_asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }



// Import notification components dan helper






// Import routing logic


var mainContent = document.querySelector("main");
var searchBarElement = document.querySelector("search-bar");

// ✅ Global helper instance untuk mencegah multiple instances
var globalNotificationHelper = null;
var router = function router() {
  var activeRoute = getActiveRoute();
  var routeHandler = routes[activeRoute];
  var hideSearchBar = activeRoute === "/login" || activeRoute === "/register";
  if (searchBarElement) {
    if (hideSearchBar) {
      searchBarElement.classList.add("hidden");
    } else {
      searchBarElement.classList.remove("hidden");
    }
  }
  if (routeHandler) {
    var params = parseActivePathname();
    if (activeRoute === "/items/:id") {
      routeHandler(mainContent, params ? params.id : undefined);
    } else if (activeRoute === "/transactions/:id") {
      routeHandler(mainContent, params ? params.id : undefined);
    } else {
      routeHandler(mainContent);
    }
  } else {
    window.location.hash = "#/";
  }
};

// ✅ PERBAIKAN: Strict Notification System - WAJIB PUNYA SUBSCRIPTION
var initializeNotificationSystem = /*#__PURE__*/function () {
  var _ref = app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee() {
    var existingPopup, notificationPopup, token, setupStatus, popup, success, _popup, _popup2;
    return app_regeneratorRuntime().wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          console.log("Initializing notification system...");

          // Add notification permission popup to the DOM
          existingPopup = document.querySelector("notification-permission-popup");
          if (!existingPopup) {
            notificationPopup = document.createElement("notification-permission-popup");
            document.body.appendChild(notificationPopup);
          }

          // ✅ Buat global helper instance
          if (!globalNotificationHelper) {
            globalNotificationHelper = new push_notification_helper();
          }
          token = localStorage.getItem("token");
          if (token) {
            _context.next = 8;
            break;
          }
          console.log("No token found, skipping notification initialization");
          return _context.abrupt("return");
        case 8:
          _context.prev = 8;
          _context.next = 11;
          return globalNotificationHelper.needsNotificationSetup();
        case 11:
          setupStatus = _context.sent;
          console.log("Notification setup status:", setupStatus);

          // ✅ Jika sudah ada subscription yang valid, ALLOW
          if (!(!setupStatus.needsSetup && setupStatus.canProceed)) {
            _context.next = 17;
            break;
          }
          console.log("Notifications already set up properly - user can proceed");
          localStorage.setItem("notification_permission_completed", "true");
          return _context.abrupt("return");
        case 17:
          if (setupStatus.canProceed) {
            _context.next = 23;
            break;
          }
          console.warn("User cannot proceed without notifications:", setupStatus.reason);
          localStorage.removeItem("notification_permission_completed");

          // ✅ Show popup berdasarkan reason
          popup = document.querySelector("notification-permission-popup");
          if (popup && typeof popup.triggerPopup === "function") {
            if (setupStatus.reason === "permission_denied") {
              popup.triggerPopup("permission_denied");
            } else if (setupStatus.reason === "missing_server_subscription") {
              popup.triggerPopup("resubscribe");
            } else if (setupStatus.reason === "permission_not_requested") {
              popup.triggerPopup("initial");
            } else {
              popup.triggerPopup("error");
            }
          }
          return _context.abrupt("return");
        case 23:
          if (!(setupStatus.canProceed && Notification.permission === "granted")) {
            _context.next = 29;
            break;
          }
          console.log("Permission granted but subscription missing, auto-initializing...");
          _context.next = 27;
          return globalNotificationHelper.initializePushNotifications();
        case 27:
          success = _context.sent;
          if (success) {
            console.log("Auto-initialization successful");
            localStorage.setItem("notification_permission_completed", "true");
            window.dispatchEvent(new CustomEvent("notificationsActivated"));
          } else {
            console.warn("Auto-initialization failed, showing popup");
            localStorage.removeItem("notification_permission_completed");
            _popup = document.querySelector("notification-permission-popup");
            if (_popup && typeof _popup.triggerPopup === "function") {
              _popup.triggerPopup("resubscribe");
            }
          }
        case 29:
          _context.next = 37;
          break;
        case 31:
          _context.prev = 31;
          _context.t0 = _context["catch"](8);
          console.error("Error during notification system initialization:", _context.t0);
          localStorage.removeItem("notification_permission_completed");

          // ✅ Show error popup
          _popup2 = document.querySelector("notification-permission-popup");
          if (_popup2 && typeof _popup2.triggerPopup === "function") {
            _popup2.triggerPopup("error");
          }
        case 37:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[8, 31]]);
  }));
  return function initializeNotificationSystem() {
    return _ref.apply(this, arguments);
  };
}();

// ✅ PERBAIKAN: Strict recheck - WAJIB SHOW POPUP jika subscription hilang
var recheckNotificationSubscription = /*#__PURE__*/function () {
  var _ref2 = app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee2() {
    var token, setupStatus, popup, success, _popup3, _popup4;
    return app_regeneratorRuntime().wrap(function _callee2$(_context2) {
      while (1) switch (_context2.prev = _context2.next) {
        case 0:
          token = localStorage.getItem("token");
          if (token) {
            _context2.next = 3;
            break;
          }
          return _context2.abrupt("return");
        case 3:
          // ✅ Gunakan global helper instance
          if (!globalNotificationHelper) {
            globalNotificationHelper = new push_notification_helper();
          }
          _context2.prev = 4;
          console.log("Rechecking notification subscription...");
          _context2.next = 8;
          return globalNotificationHelper.needsNotificationSetup();
        case 8:
          setupStatus = _context2.sent;
          if (!(setupStatus.needsSetup && !setupStatus.canProceed)) {
            _context2.next = 15;
            break;
          }
          console.warn("Subscription missing and user cannot proceed:", setupStatus.reason);
          localStorage.removeItem("notification_permission_completed");
          popup = document.querySelector("notification-permission-popup");
          if (popup && typeof popup.triggerPopup === "function") {
            if (setupStatus.reason === "missing_server_subscription") {
              popup.triggerPopup("resubscribe");
            } else if (setupStatus.reason === "permission_denied") {
              popup.triggerPopup("permission_denied");
            } else {
              popup.triggerPopup("error");
            }
          }
          return _context2.abrupt("return");
        case 15:
          if (!(setupStatus.needsSetup && setupStatus.canProceed && Notification.permission === "granted")) {
            _context2.next = 21;
            break;
          }
          console.log("Attempting auto-reinitialization...");
          _context2.next = 19;
          return globalNotificationHelper.initializePushNotifications();
        case 19:
          success = _context2.sent;
          if (success) {
            console.log("Auto-reinitialization successful");
            localStorage.setItem("notification_permission_completed", "true");
            window.dispatchEvent(new CustomEvent("notificationsActivated"));
          } else {
            console.warn("Auto-reinitialization failed, showing popup");
            localStorage.removeItem("notification_permission_completed");
            _popup3 = document.querySelector("notification-permission-popup");
            if (_popup3 && typeof _popup3.triggerPopup === "function") {
              _popup3.triggerPopup("resubscribe");
            }
          }
        case 21:
          _context2.next = 29;
          break;
        case 23:
          _context2.prev = 23;
          _context2.t0 = _context2["catch"](4);
          console.error("Error during notification subscription recheck:", _context2.t0);
          localStorage.removeItem("notification_permission_completed");

          // ✅ Show error popup
          _popup4 = document.querySelector("notification-permission-popup");
          if (_popup4 && typeof _popup4.triggerPopup === "function") {
            _popup4.triggerPopup("error");
          }
        case 29:
        case "end":
          return _context2.stop();
      }
    }, _callee2, null, [[4, 23]]);
  }));
  return function recheckNotificationSubscription() {
    return _ref2.apply(this, arguments);
  };
}();

// Function to check if JWT token is valid/not expired
var checkTokenValidity = function checkTokenValidity() {
  var token = localStorage.getItem("token");
  if (!token) return false;
  try {
    // Decode JWT token to check expiration
    var payload = JSON.parse(atob(token.split(".")[1]));
    var currentTime = Math.floor(Date.now() / 1000);
    if (payload.exp && payload.exp < currentTime) {
      console.log("Token expired, cleaning up...");

      // ✅ Clean up notification data on token expiry
      localStorage.removeItem("notification_permission_completed");
      localStorage.removeItem("notification_initialized");

      // Dispatch token expired event
      window.dispatchEvent(new CustomEvent("tokenExpired"));
      return false;
    }
    return true;
  } catch (error) {
    console.error("Error checking token validity:", error);
    return false;
  }
};

// ✅ Service Worker Registration - biarkan helper yang handle
if ("serviceWorker" in navigator) {
  window.addEventListener("load", /*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee3() {
    var registration;
    return app_regeneratorRuntime().wrap(function _callee3$(_context3) {
      while (1) switch (_context3.prev = _context3.next) {
        case 0:
          _context3.prev = 0;
          _context3.next = 3;
          return navigator.serviceWorker.getRegistration();
        case 3:
          registration = _context3.sent;
          if (registration) {
            console.log("Service Worker found, setting up event listeners");
            registration.addEventListener("updatefound", function () {
              var newWorker = registration.installing;
              if (newWorker) {
                newWorker.addEventListener("statechange", function () {
                  if (newWorker.state === "installed" && navigator.serviceWorker.controller) {
                    console.log("New service worker available");
                  }
                });
              }
            });
          }
          _context3.next = 10;
          break;
        case 7:
          _context3.prev = 7;
          _context3.t0 = _context3["catch"](0);
          console.error("Error setting up service worker event listeners:", _context3.t0);
        case 10:
        case "end":
          return _context3.stop();
      }
    }, _callee3, null, [[0, 7]]);
  })));
}

// Listen for service worker messages
if ("serviceWorker" in navigator) {
  navigator.serviceWorker.addEventListener("message", function (event) {
    var _event$data = event.data,
      type = _event$data.type,
      notificationData = _event$data.notificationData;
    switch (type) {
      case "NOTIFICATION_CLICKED":
        console.log("Notification clicked:", notificationData);
        break;
      case "NOTIFICATION_DISMISSED":
        console.log("Notification dismissed:", notificationData);
        break;
      case "NAVIGATE_TO":
        console.log("Navigate to:", event.data.url);
        window.location.hash = event.data.url;
        break;
      default:
        console.log("Unknown service worker message:", type);
    }
  });
}

// ✅ Handle user logout
window.addEventListener("userLoggedOut", function () {
  console.log("User logged out, cleaning up notifications...");
  localStorage.removeItem("notification_permission_completed");
  localStorage.removeItem("notification_initialized");
  globalNotificationHelper = null;
});

// ✅ Handle user login
window.addEventListener("userLoggedIn", /*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee5() {
  return app_regeneratorRuntime().wrap(function _callee5$(_context5) {
    while (1) switch (_context5.prev = _context5.next) {
      case 0:
        console.log("User logged in, initializing notifications...");
        setTimeout(/*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee4() {
          return app_regeneratorRuntime().wrap(function _callee4$(_context4) {
            while (1) switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return initializeNotificationSystem();
              case 2:
              case "end":
                return _context4.stop();
            }
          }, _callee4);
        })), 1000);
      case 2:
      case "end":
        return _context5.stop();
    }
  }, _callee5);
})));

// Check token validity periodically
setInterval(function () {
  checkTokenValidity();
}, 60000);

// ✅ PERBAIKAN: Strict DOM content loaded handler
document.addEventListener("DOMContentLoaded", /*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee7() {
  var isValidToken;
  return app_regeneratorRuntime().wrap(function _callee7$(_context7) {
    while (1) switch (_context7.prev = _context7.next) {
      case 0:
        console.log("DOM Content Loaded - Initializing app...");
        isValidToken = checkTokenValidity(); // ✅ STRICT: Initialize notification system dan BLOCK jika perlu
        if (!isValidToken) {
          _context7.next = 12;
          break;
        }
        _context7.prev = 3;
        _context7.next = 6;
        return initializeNotificationSystem();
      case 6:
        // ✅ Recheck subscription setelah initialization
        setTimeout(/*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee6() {
          return app_regeneratorRuntime().wrap(function _callee6$(_context6) {
            while (1) switch (_context6.prev = _context6.next) {
              case 0:
                _context6.next = 2;
                return recheckNotificationSubscription();
              case 2:
              case "end":
                return _context6.stop();
            }
          }, _callee6);
        })), 2000);
        _context7.next = 12;
        break;
      case 9:
        _context7.prev = 9;
        _context7.t0 = _context7["catch"](3);
        console.error("Error during notification initialization:", _context7.t0);
      case 12:
        if (!window.location.hash || window.location.hash === "#") {
          window.location.hash = "#/";
        } else {
          router();
        }
      case 13:
      case "end":
        return _context7.stop();
    }
  }, _callee7, null, [[3, 9]]);
})));

// Handle hash changes
window.addEventListener("hashchange", function () {
  checkTokenValidity();
  router();
});

// ✅ Export global helper
window.getNotificationHelper = function () {
  if (!globalNotificationHelper) {
    globalNotificationHelper = new push_notification_helper();
  }
  return globalNotificationHelper;
};

// ✅ Handle page visibility change untuk strict recheck
document.addEventListener("visibilitychange", /*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee9() {
  return app_regeneratorRuntime().wrap(function _callee9$(_context9) {
    while (1) switch (_context9.prev = _context9.next) {
      case 0:
        if (!document.hidden && localStorage.getItem("token")) {
          setTimeout(/*#__PURE__*/app_asyncToGenerator(/*#__PURE__*/app_regeneratorRuntime().mark(function _callee8() {
            return app_regeneratorRuntime().wrap(function _callee8$(_context8) {
              while (1) switch (_context8.prev = _context8.next) {
                case 0:
                  _context8.next = 2;
                  return recheckNotificationSubscription();
                case 2:
                case "end":
                  return _context8.stop();
              }
            }, _callee8);
          })), 1000);
        }
      case 1:
      case "end":
        return _context9.stop();
    }
  }, _callee9);
})));
})();

/******/ })()
;